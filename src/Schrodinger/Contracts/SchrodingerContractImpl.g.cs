// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: schrodinger_contract_impl.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Schrodinger {

  /// <summary>Holder for reflection information generated from schrodinger_contract_impl.proto</summary>
  public static partial class SchrodingerContractImplReflection {

    #region Descriptor
    /// <summary>File descriptor for schrodinger_contract_impl.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SchrodingerContractImplReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch9zY2hyb2Rpbmdlcl9jb250cmFjdF9pbXBsLnByb3RvGg9hZWxmL2NvcmUu",
            "cHJvdG8aEmFlbGYvb3B0aW9ucy5wcm90bxoLYWNzMTIucHJvdG8aG2dvb2ds",
            "ZS9wcm90b2J1Zi9lbXB0eS5wcm90bxofZ29vZ2xlL3Byb3RvYnVmL3RpbWVz",
            "dGFtcC5wcm90bxoac2Nocm9kaW5nZXJfY29udHJhY3QucHJvdG8iPgoUU2V0",
            "UmV3YXJkQ29uZmlnSW5wdXQSDAoEdGljaxgBIAEoCRIYCgdyZXdhcmRzGAIg",
            "AygLMgcuUmV3YXJkIlEKBlJld2FyZBIMCgRuYW1lGAEgASgJEhkKBHR5cGUY",
            "AiABKA4yCy5SZXdhcmRUeXBlEg4KBmFtb3VudBgDIAEoAxIOCgZ3ZWlnaHQY",
            "BCABKAMiIwoKUmV3YXJkTGlzdBIVCgRkYXRhGAEgAygLMgcuUmV3YXJkIk8K",
            "FUdldFJld2FyZENvbmZpZ091dHB1dBIZCgRsaXN0GAEgASgLMgsuUmV3YXJk",
            "TGlzdBIbCgRwb29sGAIgASgLMg0uYWVsZi5BZGRyZXNzImAKCVNwaW5JbnB1",
            "dBIMCgR0aWNrGAEgASgJEhgKBHNlZWQYAiABKAsyCi5hZWxmLkhhc2gSFwoP",
            "ZXhwaXJhdGlvbl90aW1lGAMgASgDEhIKCXNpZ25hdHVyZRiQTiABKAwigAEK",
            "CFNwaW5JbmZvEhsKB3NwaW5faWQYASABKAsyCi5hZWxmLkhhc2gSDAoEbmFt",
            "ZRgCIAEoCRIZCgR0eXBlGAMgASgOMgsuUmV3YXJkVHlwZRIOCgZhbW91bnQY",
            "BCABKAMSHgoHYWNjb3VudBgFIAEoCzINLmFlbGYuQWRkcmVzcyIlChVBZG9w",
            "dFdpdGhWb3VjaGVySW5wdXQSDAoEdGljaxgBIAEoCSKaAQoLVm91Y2hlcklu",
            "Zm8SHgoKdm91Y2hlcl9pZBgBIAEoCzIKLmFlbGYuSGFzaBIeCgdhY2NvdW50",
            "GAIgASgLMg0uYWVsZi5BZGRyZXNzEh8KCmF0dHJpYnV0ZXMYAyABKAsyCy5B",
            "dHRyaWJ1dGVzEgwKBHRpY2sYBCABKAkSHAoIYWRvcHRfaWQYBSABKAsyCi5h",
            "ZWxmLkhhc2giSQoTQ29uZmlybVZvdWNoZXJJbnB1dBIeCgp2b3VjaGVyX2lk",
            "GAEgASgLMgouYWVsZi5IYXNoEhIKCXNpZ25hdHVyZRiQTiABKAwiTQodR2V0",
            "QWRvcHRpb25Wb3VjaGVyQW1vdW50SW5wdXQSDAoEdGljaxgBIAEoCRIeCgdh",
            "Y2NvdW50GAIgASgLMg0uYWVsZi5BZGRyZXNzIl0KHVNldFZvdWNoZXJBZG9w",
            "dGlvbkNvbmZpZ0lucHV0EgwKBHRpY2sYASABKAkSGQoRY29tbWlzc2lvbl9h",
            "bW91bnQYAiABKAMSEwoLcG9vbF9hbW91bnQYAyABKAMiRwoVVm91Y2hlckFk",
            "b3B0aW9uQ29uZmlnEhkKEWNvbW1pc3Npb25fYW1vdW50GAEgASgDEhMKC3Bv",
            "b2xfYW1vdW50GAIgASgDIlAKE0FpcmRyb3BWb3VjaGVySW5wdXQSDAoEdGlj",
            "axgBIAEoCRIbCgRsaXN0GAIgAygLMg0uYWVsZi5BZGRyZXNzEg4KBmFtb3Vu",
            "dBgDIAEoAyIqCgtBZGRyZXNzTGlzdBIbCgRkYXRhGAEgAygLMg0uYWVsZi5B",
            "ZGRyZXNzIkYKGUFkZEFpcmRyb3BDb250cm9sbGVySW5wdXQSDAoEdGljaxgB",
            "IAEoCRIbCgRsaXN0GAIgAygLMg0uYWVsZi5BZGRyZXNzIkkKHFJlbW92ZUFp",
            "cmRyb3BDb250cm9sbGVySW5wdXQSDAoEdGljaxgBIAEoCRIbCgRsaXN0GAIg",
            "AygLMg0uYWVsZi5BZGRyZXNzIisKDFJlcm9sbENvbmZpZxIMCgRyYXRlGAEg",
            "ASgDEg0KBWluZGV4GAIgASgDIkEKFFNldFJlcm9sbENvbmZpZ0lucHV0EgwK",
            "BHRpY2sYASABKAkSDAoEcmF0ZRgCIAEoAxINCgVpbmRleBgDIAEoAyImCgpN",
            "ZXJnZVJhdGVzEhgKBGRhdGEYASADKAsyCi5NZXJnZVJhdGUiKAoJTWVyZ2VS",
            "YXRlEg0KBWxldmVsGAEgASgDEgwKBHJhdGUYAiABKAMiYAoYU2V0TWVyZ2VS",
            "YXRlc0NvbmZpZ0lucHV0EgwKBHRpY2sYASABKAkSHwoLbWVyZ2VfcmF0ZXMY",
            "AiADKAsyCi5NZXJnZVJhdGUSFQoNbWF4aW11bV9sZXZlbBgDIAEoAyJTChNT",
            "ZXRNZXJnZUNvbmZpZ0lucHV0EgwKBHRpY2sYASABKAkSGQoRY29tbWlzc2lv",
            "bl9hbW91bnQYAiABKAMSEwoLcG9vbF9hbW91bnQYAyABKAMiPQoLTWVyZ2VD",
            "b25maWcSGQoRY29tbWlzc2lvbl9hbW91bnQYASABKAMSEwoLcG9vbF9hbW91",
            "bnQYAiABKAMiewoUR2V0TWVyZ2VDb25maWdPdXRwdXQSDAoEdGljaxgBIAEo",
            "CRIcCgZjb25maWcYAiABKAsyDC5NZXJnZUNvbmZpZxIgCgttZXJnZV9yYXRl",
            "cxgDIAEoCzILLk1lcmdlUmF0ZXMSFQoNbWF4aW11bV9sZXZlbBgEIAEoAyJ9",
            "CgpNZXJnZUlucHV0EgwKBHRpY2sYASABKAkSHgoKYWRvcHRfaWRfYRgCIAEo",
            "CzIKLmFlbGYuSGFzaBIeCgphZG9wdF9pZF9iGAMgASgLMgouYWVsZi5IYXNo",
            "Eg0KBWxldmVsGAQgASgDEhIKCXNpZ25hdHVyZRiQTiABKAwiXAoLUmVkZWVt",
            "SW5wdXQSDAoEdGljaxgBIAEoCRIcCghhZG9wdF9pZBgCIAEoCzIKLmFlbGYu",
            "SGFzaBINCgVsZXZlbBgDIAEoAxISCglzaWduYXR1cmUYkE4gASgMIl0KD1Jl",
            "d2FyZENvbmZpZ1NldBIMCgR0aWNrGAEgASgJEhkKBGxpc3QYAiABKAsyCy5S",
            "ZXdhcmRMaXN0EhsKBHBvb2wYAyABKAsyDS5hZWxmLkFkZHJlc3M6BKC7GAEi",
            "UgoEU3B1bhIMCgR0aWNrGAEgASgJEhwKCXNwaW5faW5mbxgCIAEoCzIJLlNw",
            "aW5JbmZvEhgKBHNlZWQYAyABKAsyCi5hZWxmLkhhc2g6BKC7GAEiPgoSQWRv",
            "cHRlZFdpdGhWb3VjaGVyEiIKDHZvdWNoZXJfaW5mbxgBIAEoCzIMLlZvdWNo",
            "ZXJJbmZvOgSguxgBIjwKEFZvdWNoZXJDb25maXJtZWQSIgoMdm91Y2hlcl9p",
            "bmZvGAEgASgLMgwuVm91Y2hlckluZm86BKC7GAEiUwoRVm91Y2hlckFpcmRy",
            "b3BwZWQSDAoEdGljaxgBIAEoCRIaCgRsaXN0GAIgASgLMgwuQWRkcmVzc0xp",
            "c3QSDgoGYW1vdW50GAMgASgDOgSguxgBIk0KFkFpcmRyb3BDb250cm9sbGVy",
            "QWRkZWQSDAoEdGljaxgBIAEoCRIfCglhZGRyZXNzZXMYAiABKAsyDC5BZGRy",
            "ZXNzTGlzdDoEoLsYASJPChhBaXJkcm9wQ29udHJvbGxlclJlbW92ZWQSDAoE",
            "dGljaxgBIAEoCRIfCglhZGRyZXNzZXMYAiABKAsyDC5BZGRyZXNzTGlzdDoE",
            "oLsYASJECg9SZXJvbGxDb25maWdTZXQSDAoEdGljaxgBIAEoCRIdCgZjb25m",
            "aWcYAiABKAsyDS5SZXJvbGxDb25maWc6BKC7GAEiYgoTTWVyZ2VSYXRlc0Nv",
            "bmZpZ1NldBIMCgR0aWNrGAEgASgJEiAKC21lcmdlX3JhdGVzGAIgASgLMgsu",
            "TWVyZ2VSYXRlcxIVCg1tYXhpbXVtX2xldmVsGAMgASgDOgSguxgBIkIKDk1l",
            "cmdlQ29uZmlnU2V0EgwKBHRpY2sYASABKAkSHAoGY29uZmlnGAIgASgLMgwu",
            "TWVyZ2VDb25maWc6BKC7GAEi9AEKBk1lcmdlZBIMCgR0aWNrGAEgASgJEh4K",
            "CmFkb3B0X2lkX2EYAiABKAsyCi5hZWxmLkhhc2gSHgoKYWRvcHRfaWRfYhgD",
            "IAEoCzIKLmFlbGYuSGFzaBIQCghzeW1ib2xfYRgEIAEoCRIQCghzeW1ib2xf",
            "YhgFIAEoCRIQCghhbW91bnRfYRgGIAEoAxIQCghhbW91bnRfYhgHIAEoAxIe",
            "CgphZG9wdF9pbmZvGAggASgLMgouQWRvcHRJbmZvEhMKC2xvc3NfYW1vdW50",
            "GAkgASgDEhkKEWNvbW1pc3Npb25fYW1vdW50GAogASgDOgSguxgBIlYKGFZv",
            "dWNoZXJBZG9wdGlvbkNvbmZpZ1NldBIMCgR0aWNrGAEgASgJEiYKBmNvbmZp",
            "ZxgCIAEoCzIWLlZvdWNoZXJBZG9wdGlvbkNvbmZpZzoEoLsYASKLAQoIUmVk",
            "ZWVtZWQSDAoEdGljaxgBIAEoCRIcCghhZG9wdF9pZBgCIAEoCzIKLmFlbGYu",
            "SGFzaBINCgVsZXZlbBgDIAEoAxIeCgdhY2NvdW50GAQgASgLMg0uYWVsZi5B",
            "ZGRyZXNzEg4KBnN5bWJvbBgFIAEoCRIOCgZhbW91bnQYBiABKAM6BKC7GAEq",
            "QgoKUmV3YXJkVHlwZRIJCgVPdGhlchAAEgkKBVBvaW50EAESEwoPQWRvcHRp",
            "b25Wb3VjaGVyEAISCQoFVG9rZW4QAzKkDAoXU2Nocm9kaW5nZXJDb250cmFj",
            "dEltcGwSQgoPU2V0UmV3YXJkQ29uZmlnEhUuU2V0UmV3YXJkQ29uZmlnSW5w",
            "dXQaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiABJOCg9HZXRSZXdhcmRDb25m",
            "aWcSHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUaFi5HZXRSZXdhcmRD",
            "b25maWdPdXRwdXQiBYiJ9wEBEiwKBFNwaW4SCi5TcGluSW5wdXQaFi5nb29n",
            "bGUucHJvdG9idWYuRW1wdHkiABIrCgtHZXRTcGluSW5mbxIKLmFlbGYuSGFz",
            "aBoJLlNwaW5JbmZvIgWIifcBARJEChBBZG9wdFdpdGhWb3VjaGVyEhYuQWRv",
            "cHRXaXRoVm91Y2hlcklucHV0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IgAS",
            "MQoOR2V0Vm91Y2hlckluZm8SCi5hZWxmLkhhc2gaDC5Wb3VjaGVySW5mbyIF",
            "iIn3AQESQAoOQ29uZmlybVZvdWNoZXISFC5Db25maXJtVm91Y2hlcklucHV0",
            "GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IgASXgoYR2V0QWRvcHRpb25Wb3Vj",
            "aGVyQW1vdW50Eh4uR2V0QWRvcHRpb25Wb3VjaGVyQW1vdW50SW5wdXQaGy5n",
            "b29nbGUucHJvdG9idWYuSW50NjRWYWx1ZSIFiIn3AQESVAoYU2V0Vm91Y2hl",
            "ckFkb3B0aW9uQ29uZmlnEh4uU2V0Vm91Y2hlckFkb3B0aW9uQ29uZmlnSW5w",
            "dXQaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiABJXChhHZXRWb3VjaGVyQWRv",
            "cHRpb25Db25maWcSHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUaFi5W",
            "b3VjaGVyQWRvcHRpb25Db25maWciBYiJ9wEBEkAKDkFpcmRyb3BWb3VjaGVy",
            "EhQuQWlyZHJvcFZvdWNoZXJJbnB1dBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0",
            "eSIAEkkKFEdldEFpcmRyb3BDb250cm9sbGVyEhwuZ29vZ2xlLnByb3RvYnVm",
            "LlN0cmluZ1ZhbHVlGgwuQWRkcmVzc0xpc3QiBYiJ9wEBEkwKFEFkZEFpcmRy",
            "b3BDb250cm9sbGVyEhouQWRkQWlyZHJvcENvbnRyb2xsZXJJbnB1dBoWLmdv",
            "b2dsZS5wcm90b2J1Zi5FbXB0eSIAElIKF1JlbW92ZUFpcmRyb3BDb250cm9s",
            "bGVyEh0uUmVtb3ZlQWlyZHJvcENvbnRyb2xsZXJJbnB1dBoWLmdvb2dsZS5w",
            "cm90b2J1Zi5FbXB0eSIAEkIKD1NldFJlcm9sbENvbmZpZxIVLlNldFJlcm9s",
            "bENvbmZpZ0lucHV0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IgASRQoPR2V0",
            "UmVyb2xsQ29uZmlnEhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlGg0u",
            "UmVyb2xsQ29uZmlnIgWIifcBARJACg5TZXRNZXJnZUNvbmZpZxIULlNldE1l",
            "cmdlQ29uZmlnSW5wdXQaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiABJMCg5H",
            "ZXRNZXJnZUNvbmZpZxIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRoV",
            "LkdldE1lcmdlQ29uZmlnT3V0cHV0IgWIifcBARJKChNTZXRNZXJnZVJhdGVz",
            "Q29uZmlnEhkuU2V0TWVyZ2VSYXRlc0NvbmZpZ0lucHV0GhYuZ29vZ2xlLnBy",
            "b3RvYnVmLkVtcHR5IgASLgoFTWVyZ2USCy5NZXJnZUlucHV0GhYuZ29vZ2xl",
            "LnByb3RvYnVmLkVtcHR5IgASMAoGUmVkZWVtEgwuUmVkZWVtSW5wdXQaFi5n",
            "b29nbGUucHJvdG9idWYuRW1wdHkiABpYysr2AQthY3MxMi5wcm90b8rK9gEa",
            "c2Nocm9kaW5nZXJfY29udHJhY3QucHJvdG+yzPYBJFNjaHJvZGluZ2VyLlNj",
            "aHJvZGluZ2VyQ29udHJhY3RTdGF0ZUIOqgILU2Nocm9kaW5nZXJiBnByb3Rv",
            "Mw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::AElf.Types.CoreReflection.Descriptor, global::AElf.OptionsReflection.Descriptor, global::AElf.Standards.ACS12.Acs12Reflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Schrodinger.SchrodingerContractReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Schrodinger.RewardType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.SetRewardConfigInput), global::Schrodinger.SetRewardConfigInput.Parser, new[]{ "Tick", "Rewards" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.Reward), global::Schrodinger.Reward.Parser, new[]{ "Name", "Type", "Amount", "Weight" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.RewardList), global::Schrodinger.RewardList.Parser, new[]{ "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.GetRewardConfigOutput), global::Schrodinger.GetRewardConfigOutput.Parser, new[]{ "List", "Pool" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.SpinInput), global::Schrodinger.SpinInput.Parser, new[]{ "Tick", "Seed", "ExpirationTime", "Signature" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.SpinInfo), global::Schrodinger.SpinInfo.Parser, new[]{ "SpinId", "Name", "Type", "Amount", "Account" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.AdoptWithVoucherInput), global::Schrodinger.AdoptWithVoucherInput.Parser, new[]{ "Tick" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.VoucherInfo), global::Schrodinger.VoucherInfo.Parser, new[]{ "VoucherId", "Account", "Attributes", "Tick", "AdoptId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.ConfirmVoucherInput), global::Schrodinger.ConfirmVoucherInput.Parser, new[]{ "VoucherId", "Signature" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.GetAdoptionVoucherAmountInput), global::Schrodinger.GetAdoptionVoucherAmountInput.Parser, new[]{ "Tick", "Account" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.SetVoucherAdoptionConfigInput), global::Schrodinger.SetVoucherAdoptionConfigInput.Parser, new[]{ "Tick", "CommissionAmount", "PoolAmount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.VoucherAdoptionConfig), global::Schrodinger.VoucherAdoptionConfig.Parser, new[]{ "CommissionAmount", "PoolAmount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.AirdropVoucherInput), global::Schrodinger.AirdropVoucherInput.Parser, new[]{ "Tick", "List", "Amount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.AddressList), global::Schrodinger.AddressList.Parser, new[]{ "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.AddAirdropControllerInput), global::Schrodinger.AddAirdropControllerInput.Parser, new[]{ "Tick", "List" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.RemoveAirdropControllerInput), global::Schrodinger.RemoveAirdropControllerInput.Parser, new[]{ "Tick", "List" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.RerollConfig), global::Schrodinger.RerollConfig.Parser, new[]{ "Rate", "Index" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.SetRerollConfigInput), global::Schrodinger.SetRerollConfigInput.Parser, new[]{ "Tick", "Rate", "Index" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.MergeRates), global::Schrodinger.MergeRates.Parser, new[]{ "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.MergeRate), global::Schrodinger.MergeRate.Parser, new[]{ "Level", "Rate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.SetMergeRatesConfigInput), global::Schrodinger.SetMergeRatesConfigInput.Parser, new[]{ "Tick", "MergeRates", "MaximumLevel" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.SetMergeConfigInput), global::Schrodinger.SetMergeConfigInput.Parser, new[]{ "Tick", "CommissionAmount", "PoolAmount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.MergeConfig), global::Schrodinger.MergeConfig.Parser, new[]{ "CommissionAmount", "PoolAmount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.GetMergeConfigOutput), global::Schrodinger.GetMergeConfigOutput.Parser, new[]{ "Tick", "Config", "MergeRates", "MaximumLevel" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.MergeInput), global::Schrodinger.MergeInput.Parser, new[]{ "Tick", "AdoptIdA", "AdoptIdB", "Level", "Signature" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.RedeemInput), global::Schrodinger.RedeemInput.Parser, new[]{ "Tick", "AdoptId", "Level", "Signature" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.RewardConfigSet), global::Schrodinger.RewardConfigSet.Parser, new[]{ "Tick", "List", "Pool" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.Spun), global::Schrodinger.Spun.Parser, new[]{ "Tick", "SpinInfo", "Seed" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.AdoptedWithVoucher), global::Schrodinger.AdoptedWithVoucher.Parser, new[]{ "VoucherInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.VoucherConfirmed), global::Schrodinger.VoucherConfirmed.Parser, new[]{ "VoucherInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.VoucherAirdropped), global::Schrodinger.VoucherAirdropped.Parser, new[]{ "Tick", "List", "Amount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.AirdropControllerAdded), global::Schrodinger.AirdropControllerAdded.Parser, new[]{ "Tick", "Addresses" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.AirdropControllerRemoved), global::Schrodinger.AirdropControllerRemoved.Parser, new[]{ "Tick", "Addresses" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.RerollConfigSet), global::Schrodinger.RerollConfigSet.Parser, new[]{ "Tick", "Config" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.MergeRatesConfigSet), global::Schrodinger.MergeRatesConfigSet.Parser, new[]{ "Tick", "MergeRates", "MaximumLevel" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.MergeConfigSet), global::Schrodinger.MergeConfigSet.Parser, new[]{ "Tick", "Config" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.Merged), global::Schrodinger.Merged.Parser, new[]{ "Tick", "AdoptIdA", "AdoptIdB", "SymbolA", "SymbolB", "AmountA", "AmountB", "AdoptInfo", "LossAmount", "CommissionAmount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.VoucherAdoptionConfigSet), global::Schrodinger.VoucherAdoptionConfigSet.Parser, new[]{ "Tick", "Config" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.Redeemed), global::Schrodinger.Redeemed.Parser, new[]{ "Tick", "AdoptId", "Level", "Account", "Symbol", "Amount" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum RewardType {
    [pbr::OriginalName("Other")] Other = 0,
    [pbr::OriginalName("Point")] Point = 1,
    [pbr::OriginalName("AdoptionVoucher")] AdoptionVoucher = 2,
    [pbr::OriginalName("Token")] Token = 3,
  }

  #endregion

  #region Messages
  public sealed partial class SetRewardConfigInput : pb::IMessage<SetRewardConfigInput> {
    private static readonly pb::MessageParser<SetRewardConfigInput> _parser = new pb::MessageParser<SetRewardConfigInput>(() => new SetRewardConfigInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetRewardConfigInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractImplReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetRewardConfigInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetRewardConfigInput(SetRewardConfigInput other) : this() {
      tick_ = other.tick_;
      rewards_ = other.rewards_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetRewardConfigInput Clone() {
      return new SetRewardConfigInput(this);
    }

    /// <summary>Field number for the "tick" field.</summary>
    public const int TickFieldNumber = 1;
    private string tick_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tick {
      get { return tick_; }
      set {
        tick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rewards" field.</summary>
    public const int RewardsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Schrodinger.Reward> _repeated_rewards_codec
        = pb::FieldCodec.ForMessage(18, global::Schrodinger.Reward.Parser);
    private readonly pbc::RepeatedField<global::Schrodinger.Reward> rewards_ = new pbc::RepeatedField<global::Schrodinger.Reward>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Schrodinger.Reward> Rewards {
      get { return rewards_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetRewardConfigInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetRewardConfigInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tick != other.Tick) return false;
      if(!rewards_.Equals(other.rewards_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Tick.Length != 0) hash ^= Tick.GetHashCode();
      hash ^= rewards_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Tick.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Tick);
      }
      rewards_.WriteTo(output, _repeated_rewards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Tick.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tick);
      }
      size += rewards_.CalculateSize(_repeated_rewards_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetRewardConfigInput other) {
      if (other == null) {
        return;
      }
      if (other.Tick.Length != 0) {
        Tick = other.Tick;
      }
      rewards_.Add(other.rewards_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Tick = input.ReadString();
            break;
          }
          case 18: {
            rewards_.AddEntriesFrom(input, _repeated_rewards_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Reward : pb::IMessage<Reward> {
    private static readonly pb::MessageParser<Reward> _parser = new pb::MessageParser<Reward>(() => new Reward());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Reward> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractImplReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Reward() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Reward(Reward other) : this() {
      name_ = other.name_;
      type_ = other.type_;
      amount_ = other.amount_;
      weight_ = other.weight_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Reward Clone() {
      return new Reward(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::Schrodinger.RewardType type_ = global::Schrodinger.RewardType.Other;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Schrodinger.RewardType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "weight" field.</summary>
    public const int WeightFieldNumber = 4;
    private long weight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Weight {
      get { return weight_; }
      set {
        weight_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Reward);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Reward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Type != other.Type) return false;
      if (Amount != other.Amount) return false;
      if (Weight != other.Weight) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Type != global::Schrodinger.RewardType.Other) hash ^= Type.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (Weight != 0L) hash ^= Weight.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Type != global::Schrodinger.RewardType.Other) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (Amount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Amount);
      }
      if (Weight != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Weight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Type != global::Schrodinger.RewardType.Other) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (Weight != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Weight);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Reward other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Type != global::Schrodinger.RewardType.Other) {
        Type = other.Type;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      if (other.Weight != 0L) {
        Weight = other.Weight;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Type = (global::Schrodinger.RewardType) input.ReadEnum();
            break;
          }
          case 24: {
            Amount = input.ReadInt64();
            break;
          }
          case 32: {
            Weight = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RewardList : pb::IMessage<RewardList> {
    private static readonly pb::MessageParser<RewardList> _parser = new pb::MessageParser<RewardList>(() => new RewardList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RewardList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractImplReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RewardList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RewardList(RewardList other) : this() {
      data_ = other.data_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RewardList Clone() {
      return new RewardList(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Schrodinger.Reward> _repeated_data_codec
        = pb::FieldCodec.ForMessage(10, global::Schrodinger.Reward.Parser);
    private readonly pbc::RepeatedField<global::Schrodinger.Reward> data_ = new pbc::RepeatedField<global::Schrodinger.Reward>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Schrodinger.Reward> Data {
      get { return data_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RewardList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RewardList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!data_.Equals(other.data_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= data_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      data_.WriteTo(output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += data_.CalculateSize(_repeated_data_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RewardList other) {
      if (other == null) {
        return;
      }
      data_.Add(other.data_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            data_.AddEntriesFrom(input, _repeated_data_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetRewardConfigOutput : pb::IMessage<GetRewardConfigOutput> {
    private static readonly pb::MessageParser<GetRewardConfigOutput> _parser = new pb::MessageParser<GetRewardConfigOutput>(() => new GetRewardConfigOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetRewardConfigOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractImplReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRewardConfigOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRewardConfigOutput(GetRewardConfigOutput other) : this() {
      list_ = other.list_ != null ? other.list_.Clone() : null;
      pool_ = other.pool_ != null ? other.pool_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRewardConfigOutput Clone() {
      return new GetRewardConfigOutput(this);
    }

    /// <summary>Field number for the "list" field.</summary>
    public const int ListFieldNumber = 1;
    private global::Schrodinger.RewardList list_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Schrodinger.RewardList List {
      get { return list_; }
      set {
        list_ = value;
      }
    }

    /// <summary>Field number for the "pool" field.</summary>
    public const int PoolFieldNumber = 2;
    private global::AElf.Types.Address pool_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Pool {
      get { return pool_; }
      set {
        pool_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetRewardConfigOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetRewardConfigOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(List, other.List)) return false;
      if (!object.Equals(Pool, other.Pool)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (list_ != null) hash ^= List.GetHashCode();
      if (pool_ != null) hash ^= Pool.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (list_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(List);
      }
      if (pool_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pool);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (list_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(List);
      }
      if (pool_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pool);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetRewardConfigOutput other) {
      if (other == null) {
        return;
      }
      if (other.list_ != null) {
        if (list_ == null) {
          List = new global::Schrodinger.RewardList();
        }
        List.MergeFrom(other.List);
      }
      if (other.pool_ != null) {
        if (pool_ == null) {
          Pool = new global::AElf.Types.Address();
        }
        Pool.MergeFrom(other.Pool);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (list_ == null) {
              List = new global::Schrodinger.RewardList();
            }
            input.ReadMessage(List);
            break;
          }
          case 18: {
            if (pool_ == null) {
              Pool = new global::AElf.Types.Address();
            }
            input.ReadMessage(Pool);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SpinInput : pb::IMessage<SpinInput> {
    private static readonly pb::MessageParser<SpinInput> _parser = new pb::MessageParser<SpinInput>(() => new SpinInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SpinInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractImplReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpinInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpinInput(SpinInput other) : this() {
      tick_ = other.tick_;
      seed_ = other.seed_ != null ? other.seed_.Clone() : null;
      expirationTime_ = other.expirationTime_;
      signature_ = other.signature_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpinInput Clone() {
      return new SpinInput(this);
    }

    /// <summary>Field number for the "tick" field.</summary>
    public const int TickFieldNumber = 1;
    private string tick_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tick {
      get { return tick_; }
      set {
        tick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "seed" field.</summary>
    public const int SeedFieldNumber = 2;
    private global::AElf.Types.Hash seed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash Seed {
      get { return seed_; }
      set {
        seed_ = value;
      }
    }

    /// <summary>Field number for the "expiration_time" field.</summary>
    public const int ExpirationTimeFieldNumber = 3;
    private long expirationTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ExpirationTime {
      get { return expirationTime_; }
      set {
        expirationTime_ = value;
      }
    }

    /// <summary>Field number for the "signature" field.</summary>
    public const int SignatureFieldNumber = 10000;
    private pb::ByteString signature_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Signature {
      get { return signature_; }
      set {
        signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SpinInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SpinInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tick != other.Tick) return false;
      if (!object.Equals(Seed, other.Seed)) return false;
      if (ExpirationTime != other.ExpirationTime) return false;
      if (Signature != other.Signature) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Tick.Length != 0) hash ^= Tick.GetHashCode();
      if (seed_ != null) hash ^= Seed.GetHashCode();
      if (ExpirationTime != 0L) hash ^= ExpirationTime.GetHashCode();
      if (Signature.Length != 0) hash ^= Signature.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Tick.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Tick);
      }
      if (seed_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Seed);
      }
      if (ExpirationTime != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ExpirationTime);
      }
      if (Signature.Length != 0) {
        output.WriteRawTag(130, 241, 4);
        output.WriteBytes(Signature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Tick.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tick);
      }
      if (seed_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Seed);
      }
      if (ExpirationTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ExpirationTime);
      }
      if (Signature.Length != 0) {
        size += 3 + pb::CodedOutputStream.ComputeBytesSize(Signature);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SpinInput other) {
      if (other == null) {
        return;
      }
      if (other.Tick.Length != 0) {
        Tick = other.Tick;
      }
      if (other.seed_ != null) {
        if (seed_ == null) {
          Seed = new global::AElf.Types.Hash();
        }
        Seed.MergeFrom(other.Seed);
      }
      if (other.ExpirationTime != 0L) {
        ExpirationTime = other.ExpirationTime;
      }
      if (other.Signature.Length != 0) {
        Signature = other.Signature;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Tick = input.ReadString();
            break;
          }
          case 18: {
            if (seed_ == null) {
              Seed = new global::AElf.Types.Hash();
            }
            input.ReadMessage(Seed);
            break;
          }
          case 24: {
            ExpirationTime = input.ReadInt64();
            break;
          }
          case 80002: {
            Signature = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SpinInfo : pb::IMessage<SpinInfo> {
    private static readonly pb::MessageParser<SpinInfo> _parser = new pb::MessageParser<SpinInfo>(() => new SpinInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SpinInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractImplReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpinInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpinInfo(SpinInfo other) : this() {
      spinId_ = other.spinId_ != null ? other.spinId_.Clone() : null;
      name_ = other.name_;
      type_ = other.type_;
      amount_ = other.amount_;
      account_ = other.account_ != null ? other.account_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpinInfo Clone() {
      return new SpinInfo(this);
    }

    /// <summary>Field number for the "spin_id" field.</summary>
    public const int SpinIdFieldNumber = 1;
    private global::AElf.Types.Hash spinId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash SpinId {
      get { return spinId_; }
      set {
        spinId_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private global::Schrodinger.RewardType type_ = global::Schrodinger.RewardType.Other;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Schrodinger.RewardType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 4;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 5;
    private global::AElf.Types.Address account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SpinInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SpinInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SpinId, other.SpinId)) return false;
      if (Name != other.Name) return false;
      if (Type != other.Type) return false;
      if (Amount != other.Amount) return false;
      if (!object.Equals(Account, other.Account)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (spinId_ != null) hash ^= SpinId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Type != global::Schrodinger.RewardType.Other) hash ^= Type.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (account_ != null) hash ^= Account.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (spinId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SpinId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Type != global::Schrodinger.RewardType.Other) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (Amount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Amount);
      }
      if (account_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Account);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (spinId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SpinId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Type != global::Schrodinger.RewardType.Other) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (account_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SpinInfo other) {
      if (other == null) {
        return;
      }
      if (other.spinId_ != null) {
        if (spinId_ == null) {
          SpinId = new global::AElf.Types.Hash();
        }
        SpinId.MergeFrom(other.SpinId);
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Type != global::Schrodinger.RewardType.Other) {
        Type = other.Type;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      if (other.account_ != null) {
        if (account_ == null) {
          Account = new global::AElf.Types.Address();
        }
        Account.MergeFrom(other.Account);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (spinId_ == null) {
              SpinId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(SpinId);
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Type = (global::Schrodinger.RewardType) input.ReadEnum();
            break;
          }
          case 32: {
            Amount = input.ReadInt64();
            break;
          }
          case 42: {
            if (account_ == null) {
              Account = new global::AElf.Types.Address();
            }
            input.ReadMessage(Account);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AdoptWithVoucherInput : pb::IMessage<AdoptWithVoucherInput> {
    private static readonly pb::MessageParser<AdoptWithVoucherInput> _parser = new pb::MessageParser<AdoptWithVoucherInput>(() => new AdoptWithVoucherInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AdoptWithVoucherInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractImplReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdoptWithVoucherInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdoptWithVoucherInput(AdoptWithVoucherInput other) : this() {
      tick_ = other.tick_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdoptWithVoucherInput Clone() {
      return new AdoptWithVoucherInput(this);
    }

    /// <summary>Field number for the "tick" field.</summary>
    public const int TickFieldNumber = 1;
    private string tick_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tick {
      get { return tick_; }
      set {
        tick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AdoptWithVoucherInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AdoptWithVoucherInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tick != other.Tick) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Tick.Length != 0) hash ^= Tick.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Tick.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Tick);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Tick.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tick);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AdoptWithVoucherInput other) {
      if (other == null) {
        return;
      }
      if (other.Tick.Length != 0) {
        Tick = other.Tick;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Tick = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class VoucherInfo : pb::IMessage<VoucherInfo> {
    private static readonly pb::MessageParser<VoucherInfo> _parser = new pb::MessageParser<VoucherInfo>(() => new VoucherInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VoucherInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractImplReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoucherInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoucherInfo(VoucherInfo other) : this() {
      voucherId_ = other.voucherId_ != null ? other.voucherId_.Clone() : null;
      account_ = other.account_ != null ? other.account_.Clone() : null;
      attributes_ = other.attributes_ != null ? other.attributes_.Clone() : null;
      tick_ = other.tick_;
      adoptId_ = other.adoptId_ != null ? other.adoptId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoucherInfo Clone() {
      return new VoucherInfo(this);
    }

    /// <summary>Field number for the "voucher_id" field.</summary>
    public const int VoucherIdFieldNumber = 1;
    private global::AElf.Types.Hash voucherId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash VoucherId {
      get { return voucherId_; }
      set {
        voucherId_ = value;
      }
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 2;
    private global::AElf.Types.Address account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    /// <summary>Field number for the "attributes" field.</summary>
    public const int AttributesFieldNumber = 3;
    private global::Schrodinger.Attributes attributes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Schrodinger.Attributes Attributes {
      get { return attributes_; }
      set {
        attributes_ = value;
      }
    }

    /// <summary>Field number for the "tick" field.</summary>
    public const int TickFieldNumber = 4;
    private string tick_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tick {
      get { return tick_; }
      set {
        tick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "adopt_id" field.</summary>
    public const int AdoptIdFieldNumber = 5;
    private global::AElf.Types.Hash adoptId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash AdoptId {
      get { return adoptId_; }
      set {
        adoptId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VoucherInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VoucherInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(VoucherId, other.VoucherId)) return false;
      if (!object.Equals(Account, other.Account)) return false;
      if (!object.Equals(Attributes, other.Attributes)) return false;
      if (Tick != other.Tick) return false;
      if (!object.Equals(AdoptId, other.AdoptId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (voucherId_ != null) hash ^= VoucherId.GetHashCode();
      if (account_ != null) hash ^= Account.GetHashCode();
      if (attributes_ != null) hash ^= Attributes.GetHashCode();
      if (Tick.Length != 0) hash ^= Tick.GetHashCode();
      if (adoptId_ != null) hash ^= AdoptId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (voucherId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(VoucherId);
      }
      if (account_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Account);
      }
      if (attributes_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Attributes);
      }
      if (Tick.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Tick);
      }
      if (adoptId_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(AdoptId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (voucherId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VoucherId);
      }
      if (account_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
      }
      if (attributes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Attributes);
      }
      if (Tick.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tick);
      }
      if (adoptId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AdoptId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VoucherInfo other) {
      if (other == null) {
        return;
      }
      if (other.voucherId_ != null) {
        if (voucherId_ == null) {
          VoucherId = new global::AElf.Types.Hash();
        }
        VoucherId.MergeFrom(other.VoucherId);
      }
      if (other.account_ != null) {
        if (account_ == null) {
          Account = new global::AElf.Types.Address();
        }
        Account.MergeFrom(other.Account);
      }
      if (other.attributes_ != null) {
        if (attributes_ == null) {
          Attributes = new global::Schrodinger.Attributes();
        }
        Attributes.MergeFrom(other.Attributes);
      }
      if (other.Tick.Length != 0) {
        Tick = other.Tick;
      }
      if (other.adoptId_ != null) {
        if (adoptId_ == null) {
          AdoptId = new global::AElf.Types.Hash();
        }
        AdoptId.MergeFrom(other.AdoptId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (voucherId_ == null) {
              VoucherId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(VoucherId);
            break;
          }
          case 18: {
            if (account_ == null) {
              Account = new global::AElf.Types.Address();
            }
            input.ReadMessage(Account);
            break;
          }
          case 26: {
            if (attributes_ == null) {
              Attributes = new global::Schrodinger.Attributes();
            }
            input.ReadMessage(Attributes);
            break;
          }
          case 34: {
            Tick = input.ReadString();
            break;
          }
          case 42: {
            if (adoptId_ == null) {
              AdoptId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(AdoptId);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ConfirmVoucherInput : pb::IMessage<ConfirmVoucherInput> {
    private static readonly pb::MessageParser<ConfirmVoucherInput> _parser = new pb::MessageParser<ConfirmVoucherInput>(() => new ConfirmVoucherInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConfirmVoucherInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractImplReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfirmVoucherInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfirmVoucherInput(ConfirmVoucherInput other) : this() {
      voucherId_ = other.voucherId_ != null ? other.voucherId_.Clone() : null;
      signature_ = other.signature_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfirmVoucherInput Clone() {
      return new ConfirmVoucherInput(this);
    }

    /// <summary>Field number for the "voucher_id" field.</summary>
    public const int VoucherIdFieldNumber = 1;
    private global::AElf.Types.Hash voucherId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash VoucherId {
      get { return voucherId_; }
      set {
        voucherId_ = value;
      }
    }

    /// <summary>Field number for the "signature" field.</summary>
    public const int SignatureFieldNumber = 10000;
    private pb::ByteString signature_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Signature {
      get { return signature_; }
      set {
        signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConfirmVoucherInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConfirmVoucherInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(VoucherId, other.VoucherId)) return false;
      if (Signature != other.Signature) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (voucherId_ != null) hash ^= VoucherId.GetHashCode();
      if (Signature.Length != 0) hash ^= Signature.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (voucherId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(VoucherId);
      }
      if (Signature.Length != 0) {
        output.WriteRawTag(130, 241, 4);
        output.WriteBytes(Signature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (voucherId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VoucherId);
      }
      if (Signature.Length != 0) {
        size += 3 + pb::CodedOutputStream.ComputeBytesSize(Signature);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConfirmVoucherInput other) {
      if (other == null) {
        return;
      }
      if (other.voucherId_ != null) {
        if (voucherId_ == null) {
          VoucherId = new global::AElf.Types.Hash();
        }
        VoucherId.MergeFrom(other.VoucherId);
      }
      if (other.Signature.Length != 0) {
        Signature = other.Signature;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (voucherId_ == null) {
              VoucherId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(VoucherId);
            break;
          }
          case 80002: {
            Signature = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAdoptionVoucherAmountInput : pb::IMessage<GetAdoptionVoucherAmountInput> {
    private static readonly pb::MessageParser<GetAdoptionVoucherAmountInput> _parser = new pb::MessageParser<GetAdoptionVoucherAmountInput>(() => new GetAdoptionVoucherAmountInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAdoptionVoucherAmountInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractImplReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAdoptionVoucherAmountInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAdoptionVoucherAmountInput(GetAdoptionVoucherAmountInput other) : this() {
      tick_ = other.tick_;
      account_ = other.account_ != null ? other.account_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAdoptionVoucherAmountInput Clone() {
      return new GetAdoptionVoucherAmountInput(this);
    }

    /// <summary>Field number for the "tick" field.</summary>
    public const int TickFieldNumber = 1;
    private string tick_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tick {
      get { return tick_; }
      set {
        tick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 2;
    private global::AElf.Types.Address account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAdoptionVoucherAmountInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAdoptionVoucherAmountInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tick != other.Tick) return false;
      if (!object.Equals(Account, other.Account)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Tick.Length != 0) hash ^= Tick.GetHashCode();
      if (account_ != null) hash ^= Account.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Tick.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Tick);
      }
      if (account_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Account);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Tick.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tick);
      }
      if (account_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAdoptionVoucherAmountInput other) {
      if (other == null) {
        return;
      }
      if (other.Tick.Length != 0) {
        Tick = other.Tick;
      }
      if (other.account_ != null) {
        if (account_ == null) {
          Account = new global::AElf.Types.Address();
        }
        Account.MergeFrom(other.Account);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Tick = input.ReadString();
            break;
          }
          case 18: {
            if (account_ == null) {
              Account = new global::AElf.Types.Address();
            }
            input.ReadMessage(Account);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SetVoucherAdoptionConfigInput : pb::IMessage<SetVoucherAdoptionConfigInput> {
    private static readonly pb::MessageParser<SetVoucherAdoptionConfigInput> _parser = new pb::MessageParser<SetVoucherAdoptionConfigInput>(() => new SetVoucherAdoptionConfigInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetVoucherAdoptionConfigInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractImplReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetVoucherAdoptionConfigInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetVoucherAdoptionConfigInput(SetVoucherAdoptionConfigInput other) : this() {
      tick_ = other.tick_;
      commissionAmount_ = other.commissionAmount_;
      poolAmount_ = other.poolAmount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetVoucherAdoptionConfigInput Clone() {
      return new SetVoucherAdoptionConfigInput(this);
    }

    /// <summary>Field number for the "tick" field.</summary>
    public const int TickFieldNumber = 1;
    private string tick_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tick {
      get { return tick_; }
      set {
        tick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "commission_amount" field.</summary>
    public const int CommissionAmountFieldNumber = 2;
    private long commissionAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CommissionAmount {
      get { return commissionAmount_; }
      set {
        commissionAmount_ = value;
      }
    }

    /// <summary>Field number for the "pool_amount" field.</summary>
    public const int PoolAmountFieldNumber = 3;
    private long poolAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PoolAmount {
      get { return poolAmount_; }
      set {
        poolAmount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetVoucherAdoptionConfigInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetVoucherAdoptionConfigInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tick != other.Tick) return false;
      if (CommissionAmount != other.CommissionAmount) return false;
      if (PoolAmount != other.PoolAmount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Tick.Length != 0) hash ^= Tick.GetHashCode();
      if (CommissionAmount != 0L) hash ^= CommissionAmount.GetHashCode();
      if (PoolAmount != 0L) hash ^= PoolAmount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Tick.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Tick);
      }
      if (CommissionAmount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(CommissionAmount);
      }
      if (PoolAmount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(PoolAmount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Tick.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tick);
      }
      if (CommissionAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CommissionAmount);
      }
      if (PoolAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PoolAmount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetVoucherAdoptionConfigInput other) {
      if (other == null) {
        return;
      }
      if (other.Tick.Length != 0) {
        Tick = other.Tick;
      }
      if (other.CommissionAmount != 0L) {
        CommissionAmount = other.CommissionAmount;
      }
      if (other.PoolAmount != 0L) {
        PoolAmount = other.PoolAmount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Tick = input.ReadString();
            break;
          }
          case 16: {
            CommissionAmount = input.ReadInt64();
            break;
          }
          case 24: {
            PoolAmount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class VoucherAdoptionConfig : pb::IMessage<VoucherAdoptionConfig> {
    private static readonly pb::MessageParser<VoucherAdoptionConfig> _parser = new pb::MessageParser<VoucherAdoptionConfig>(() => new VoucherAdoptionConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VoucherAdoptionConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractImplReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoucherAdoptionConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoucherAdoptionConfig(VoucherAdoptionConfig other) : this() {
      commissionAmount_ = other.commissionAmount_;
      poolAmount_ = other.poolAmount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoucherAdoptionConfig Clone() {
      return new VoucherAdoptionConfig(this);
    }

    /// <summary>Field number for the "commission_amount" field.</summary>
    public const int CommissionAmountFieldNumber = 1;
    private long commissionAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CommissionAmount {
      get { return commissionAmount_; }
      set {
        commissionAmount_ = value;
      }
    }

    /// <summary>Field number for the "pool_amount" field.</summary>
    public const int PoolAmountFieldNumber = 2;
    private long poolAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PoolAmount {
      get { return poolAmount_; }
      set {
        poolAmount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VoucherAdoptionConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VoucherAdoptionConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CommissionAmount != other.CommissionAmount) return false;
      if (PoolAmount != other.PoolAmount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CommissionAmount != 0L) hash ^= CommissionAmount.GetHashCode();
      if (PoolAmount != 0L) hash ^= PoolAmount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CommissionAmount != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(CommissionAmount);
      }
      if (PoolAmount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(PoolAmount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CommissionAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CommissionAmount);
      }
      if (PoolAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PoolAmount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VoucherAdoptionConfig other) {
      if (other == null) {
        return;
      }
      if (other.CommissionAmount != 0L) {
        CommissionAmount = other.CommissionAmount;
      }
      if (other.PoolAmount != 0L) {
        PoolAmount = other.PoolAmount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CommissionAmount = input.ReadInt64();
            break;
          }
          case 16: {
            PoolAmount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AirdropVoucherInput : pb::IMessage<AirdropVoucherInput> {
    private static readonly pb::MessageParser<AirdropVoucherInput> _parser = new pb::MessageParser<AirdropVoucherInput>(() => new AirdropVoucherInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AirdropVoucherInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractImplReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AirdropVoucherInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AirdropVoucherInput(AirdropVoucherInput other) : this() {
      tick_ = other.tick_;
      list_ = other.list_.Clone();
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AirdropVoucherInput Clone() {
      return new AirdropVoucherInput(this);
    }

    /// <summary>Field number for the "tick" field.</summary>
    public const int TickFieldNumber = 1;
    private string tick_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tick {
      get { return tick_; }
      set {
        tick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "list" field.</summary>
    public const int ListFieldNumber = 2;
    private static readonly pb::FieldCodec<global::AElf.Types.Address> _repeated_list_codec
        = pb::FieldCodec.ForMessage(18, global::AElf.Types.Address.Parser);
    private readonly pbc::RepeatedField<global::AElf.Types.Address> list_ = new pbc::RepeatedField<global::AElf.Types.Address>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Types.Address> List {
      get { return list_; }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AirdropVoucherInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AirdropVoucherInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tick != other.Tick) return false;
      if(!list_.Equals(other.list_)) return false;
      if (Amount != other.Amount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Tick.Length != 0) hash ^= Tick.GetHashCode();
      hash ^= list_.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Tick.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Tick);
      }
      list_.WriteTo(output, _repeated_list_codec);
      if (Amount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Tick.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tick);
      }
      size += list_.CalculateSize(_repeated_list_codec);
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AirdropVoucherInput other) {
      if (other == null) {
        return;
      }
      if (other.Tick.Length != 0) {
        Tick = other.Tick;
      }
      list_.Add(other.list_);
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Tick = input.ReadString();
            break;
          }
          case 18: {
            list_.AddEntriesFrom(input, _repeated_list_codec);
            break;
          }
          case 24: {
            Amount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddressList : pb::IMessage<AddressList> {
    private static readonly pb::MessageParser<AddressList> _parser = new pb::MessageParser<AddressList>(() => new AddressList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddressList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractImplReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddressList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddressList(AddressList other) : this() {
      data_ = other.data_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddressList Clone() {
      return new AddressList(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::AElf.Types.Address> _repeated_data_codec
        = pb::FieldCodec.ForMessage(10, global::AElf.Types.Address.Parser);
    private readonly pbc::RepeatedField<global::AElf.Types.Address> data_ = new pbc::RepeatedField<global::AElf.Types.Address>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Types.Address> Data {
      get { return data_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddressList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddressList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!data_.Equals(other.data_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= data_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      data_.WriteTo(output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += data_.CalculateSize(_repeated_data_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddressList other) {
      if (other == null) {
        return;
      }
      data_.Add(other.data_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            data_.AddEntriesFrom(input, _repeated_data_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddAirdropControllerInput : pb::IMessage<AddAirdropControllerInput> {
    private static readonly pb::MessageParser<AddAirdropControllerInput> _parser = new pb::MessageParser<AddAirdropControllerInput>(() => new AddAirdropControllerInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddAirdropControllerInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractImplReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddAirdropControllerInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddAirdropControllerInput(AddAirdropControllerInput other) : this() {
      tick_ = other.tick_;
      list_ = other.list_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddAirdropControllerInput Clone() {
      return new AddAirdropControllerInput(this);
    }

    /// <summary>Field number for the "tick" field.</summary>
    public const int TickFieldNumber = 1;
    private string tick_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tick {
      get { return tick_; }
      set {
        tick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "list" field.</summary>
    public const int ListFieldNumber = 2;
    private static readonly pb::FieldCodec<global::AElf.Types.Address> _repeated_list_codec
        = pb::FieldCodec.ForMessage(18, global::AElf.Types.Address.Parser);
    private readonly pbc::RepeatedField<global::AElf.Types.Address> list_ = new pbc::RepeatedField<global::AElf.Types.Address>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Types.Address> List {
      get { return list_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddAirdropControllerInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddAirdropControllerInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tick != other.Tick) return false;
      if(!list_.Equals(other.list_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Tick.Length != 0) hash ^= Tick.GetHashCode();
      hash ^= list_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Tick.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Tick);
      }
      list_.WriteTo(output, _repeated_list_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Tick.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tick);
      }
      size += list_.CalculateSize(_repeated_list_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddAirdropControllerInput other) {
      if (other == null) {
        return;
      }
      if (other.Tick.Length != 0) {
        Tick = other.Tick;
      }
      list_.Add(other.list_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Tick = input.ReadString();
            break;
          }
          case 18: {
            list_.AddEntriesFrom(input, _repeated_list_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RemoveAirdropControllerInput : pb::IMessage<RemoveAirdropControllerInput> {
    private static readonly pb::MessageParser<RemoveAirdropControllerInput> _parser = new pb::MessageParser<RemoveAirdropControllerInput>(() => new RemoveAirdropControllerInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveAirdropControllerInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractImplReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveAirdropControllerInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveAirdropControllerInput(RemoveAirdropControllerInput other) : this() {
      tick_ = other.tick_;
      list_ = other.list_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveAirdropControllerInput Clone() {
      return new RemoveAirdropControllerInput(this);
    }

    /// <summary>Field number for the "tick" field.</summary>
    public const int TickFieldNumber = 1;
    private string tick_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tick {
      get { return tick_; }
      set {
        tick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "list" field.</summary>
    public const int ListFieldNumber = 2;
    private static readonly pb::FieldCodec<global::AElf.Types.Address> _repeated_list_codec
        = pb::FieldCodec.ForMessage(18, global::AElf.Types.Address.Parser);
    private readonly pbc::RepeatedField<global::AElf.Types.Address> list_ = new pbc::RepeatedField<global::AElf.Types.Address>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AElf.Types.Address> List {
      get { return list_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveAirdropControllerInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveAirdropControllerInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tick != other.Tick) return false;
      if(!list_.Equals(other.list_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Tick.Length != 0) hash ^= Tick.GetHashCode();
      hash ^= list_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Tick.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Tick);
      }
      list_.WriteTo(output, _repeated_list_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Tick.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tick);
      }
      size += list_.CalculateSize(_repeated_list_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveAirdropControllerInput other) {
      if (other == null) {
        return;
      }
      if (other.Tick.Length != 0) {
        Tick = other.Tick;
      }
      list_.Add(other.list_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Tick = input.ReadString();
            break;
          }
          case 18: {
            list_.AddEntriesFrom(input, _repeated_list_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RerollConfig : pb::IMessage<RerollConfig> {
    private static readonly pb::MessageParser<RerollConfig> _parser = new pb::MessageParser<RerollConfig>(() => new RerollConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RerollConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractImplReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RerollConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RerollConfig(RerollConfig other) : this() {
      rate_ = other.rate_;
      index_ = other.index_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RerollConfig Clone() {
      return new RerollConfig(this);
    }

    /// <summary>Field number for the "rate" field.</summary>
    public const int RateFieldNumber = 1;
    private long rate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Rate {
      get { return rate_; }
      set {
        rate_ = value;
      }
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 2;
    private long index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RerollConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RerollConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Rate != other.Rate) return false;
      if (Index != other.Index) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Rate != 0L) hash ^= Rate.GetHashCode();
      if (Index != 0L) hash ^= Index.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Rate != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Rate);
      }
      if (Index != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Index);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Rate != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Rate);
      }
      if (Index != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Index);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RerollConfig other) {
      if (other == null) {
        return;
      }
      if (other.Rate != 0L) {
        Rate = other.Rate;
      }
      if (other.Index != 0L) {
        Index = other.Index;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Rate = input.ReadInt64();
            break;
          }
          case 16: {
            Index = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SetRerollConfigInput : pb::IMessage<SetRerollConfigInput> {
    private static readonly pb::MessageParser<SetRerollConfigInput> _parser = new pb::MessageParser<SetRerollConfigInput>(() => new SetRerollConfigInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetRerollConfigInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractImplReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetRerollConfigInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetRerollConfigInput(SetRerollConfigInput other) : this() {
      tick_ = other.tick_;
      rate_ = other.rate_;
      index_ = other.index_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetRerollConfigInput Clone() {
      return new SetRerollConfigInput(this);
    }

    /// <summary>Field number for the "tick" field.</summary>
    public const int TickFieldNumber = 1;
    private string tick_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tick {
      get { return tick_; }
      set {
        tick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rate" field.</summary>
    public const int RateFieldNumber = 2;
    private long rate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Rate {
      get { return rate_; }
      set {
        rate_ = value;
      }
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 3;
    private long index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetRerollConfigInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetRerollConfigInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tick != other.Tick) return false;
      if (Rate != other.Rate) return false;
      if (Index != other.Index) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Tick.Length != 0) hash ^= Tick.GetHashCode();
      if (Rate != 0L) hash ^= Rate.GetHashCode();
      if (Index != 0L) hash ^= Index.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Tick.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Tick);
      }
      if (Rate != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Rate);
      }
      if (Index != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Index);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Tick.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tick);
      }
      if (Rate != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Rate);
      }
      if (Index != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Index);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetRerollConfigInput other) {
      if (other == null) {
        return;
      }
      if (other.Tick.Length != 0) {
        Tick = other.Tick;
      }
      if (other.Rate != 0L) {
        Rate = other.Rate;
      }
      if (other.Index != 0L) {
        Index = other.Index;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Tick = input.ReadString();
            break;
          }
          case 16: {
            Rate = input.ReadInt64();
            break;
          }
          case 24: {
            Index = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MergeRates : pb::IMessage<MergeRates> {
    private static readonly pb::MessageParser<MergeRates> _parser = new pb::MessageParser<MergeRates>(() => new MergeRates());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MergeRates> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractImplReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeRates() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeRates(MergeRates other) : this() {
      data_ = other.data_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeRates Clone() {
      return new MergeRates(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Schrodinger.MergeRate> _repeated_data_codec
        = pb::FieldCodec.ForMessage(10, global::Schrodinger.MergeRate.Parser);
    private readonly pbc::RepeatedField<global::Schrodinger.MergeRate> data_ = new pbc::RepeatedField<global::Schrodinger.MergeRate>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Schrodinger.MergeRate> Data {
      get { return data_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MergeRates);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MergeRates other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!data_.Equals(other.data_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= data_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      data_.WriteTo(output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += data_.CalculateSize(_repeated_data_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MergeRates other) {
      if (other == null) {
        return;
      }
      data_.Add(other.data_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            data_.AddEntriesFrom(input, _repeated_data_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MergeRate : pb::IMessage<MergeRate> {
    private static readonly pb::MessageParser<MergeRate> _parser = new pb::MessageParser<MergeRate>(() => new MergeRate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MergeRate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractImplReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeRate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeRate(MergeRate other) : this() {
      level_ = other.level_;
      rate_ = other.rate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeRate Clone() {
      return new MergeRate(this);
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 1;
    private long level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "rate" field.</summary>
    public const int RateFieldNumber = 2;
    private long rate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Rate {
      get { return rate_; }
      set {
        rate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MergeRate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MergeRate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Level != other.Level) return false;
      if (Rate != other.Rate) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Level != 0L) hash ^= Level.GetHashCode();
      if (Rate != 0L) hash ^= Rate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Level != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Level);
      }
      if (Rate != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Rate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Level != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Level);
      }
      if (Rate != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Rate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MergeRate other) {
      if (other == null) {
        return;
      }
      if (other.Level != 0L) {
        Level = other.Level;
      }
      if (other.Rate != 0L) {
        Rate = other.Rate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Level = input.ReadInt64();
            break;
          }
          case 16: {
            Rate = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SetMergeRatesConfigInput : pb::IMessage<SetMergeRatesConfigInput> {
    private static readonly pb::MessageParser<SetMergeRatesConfigInput> _parser = new pb::MessageParser<SetMergeRatesConfigInput>(() => new SetMergeRatesConfigInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetMergeRatesConfigInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractImplReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetMergeRatesConfigInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetMergeRatesConfigInput(SetMergeRatesConfigInput other) : this() {
      tick_ = other.tick_;
      mergeRates_ = other.mergeRates_.Clone();
      maximumLevel_ = other.maximumLevel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetMergeRatesConfigInput Clone() {
      return new SetMergeRatesConfigInput(this);
    }

    /// <summary>Field number for the "tick" field.</summary>
    public const int TickFieldNumber = 1;
    private string tick_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tick {
      get { return tick_; }
      set {
        tick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "merge_rates" field.</summary>
    public const int MergeRatesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Schrodinger.MergeRate> _repeated_mergeRates_codec
        = pb::FieldCodec.ForMessage(18, global::Schrodinger.MergeRate.Parser);
    private readonly pbc::RepeatedField<global::Schrodinger.MergeRate> mergeRates_ = new pbc::RepeatedField<global::Schrodinger.MergeRate>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Schrodinger.MergeRate> MergeRates {
      get { return mergeRates_; }
    }

    /// <summary>Field number for the "maximum_level" field.</summary>
    public const int MaximumLevelFieldNumber = 3;
    private long maximumLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MaximumLevel {
      get { return maximumLevel_; }
      set {
        maximumLevel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetMergeRatesConfigInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetMergeRatesConfigInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tick != other.Tick) return false;
      if(!mergeRates_.Equals(other.mergeRates_)) return false;
      if (MaximumLevel != other.MaximumLevel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Tick.Length != 0) hash ^= Tick.GetHashCode();
      hash ^= mergeRates_.GetHashCode();
      if (MaximumLevel != 0L) hash ^= MaximumLevel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Tick.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Tick);
      }
      mergeRates_.WriteTo(output, _repeated_mergeRates_codec);
      if (MaximumLevel != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(MaximumLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Tick.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tick);
      }
      size += mergeRates_.CalculateSize(_repeated_mergeRates_codec);
      if (MaximumLevel != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaximumLevel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetMergeRatesConfigInput other) {
      if (other == null) {
        return;
      }
      if (other.Tick.Length != 0) {
        Tick = other.Tick;
      }
      mergeRates_.Add(other.mergeRates_);
      if (other.MaximumLevel != 0L) {
        MaximumLevel = other.MaximumLevel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Tick = input.ReadString();
            break;
          }
          case 18: {
            mergeRates_.AddEntriesFrom(input, _repeated_mergeRates_codec);
            break;
          }
          case 24: {
            MaximumLevel = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SetMergeConfigInput : pb::IMessage<SetMergeConfigInput> {
    private static readonly pb::MessageParser<SetMergeConfigInput> _parser = new pb::MessageParser<SetMergeConfigInput>(() => new SetMergeConfigInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetMergeConfigInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractImplReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetMergeConfigInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetMergeConfigInput(SetMergeConfigInput other) : this() {
      tick_ = other.tick_;
      commissionAmount_ = other.commissionAmount_;
      poolAmount_ = other.poolAmount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetMergeConfigInput Clone() {
      return new SetMergeConfigInput(this);
    }

    /// <summary>Field number for the "tick" field.</summary>
    public const int TickFieldNumber = 1;
    private string tick_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tick {
      get { return tick_; }
      set {
        tick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "commission_amount" field.</summary>
    public const int CommissionAmountFieldNumber = 2;
    private long commissionAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CommissionAmount {
      get { return commissionAmount_; }
      set {
        commissionAmount_ = value;
      }
    }

    /// <summary>Field number for the "pool_amount" field.</summary>
    public const int PoolAmountFieldNumber = 3;
    private long poolAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PoolAmount {
      get { return poolAmount_; }
      set {
        poolAmount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetMergeConfigInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetMergeConfigInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tick != other.Tick) return false;
      if (CommissionAmount != other.CommissionAmount) return false;
      if (PoolAmount != other.PoolAmount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Tick.Length != 0) hash ^= Tick.GetHashCode();
      if (CommissionAmount != 0L) hash ^= CommissionAmount.GetHashCode();
      if (PoolAmount != 0L) hash ^= PoolAmount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Tick.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Tick);
      }
      if (CommissionAmount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(CommissionAmount);
      }
      if (PoolAmount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(PoolAmount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Tick.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tick);
      }
      if (CommissionAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CommissionAmount);
      }
      if (PoolAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PoolAmount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetMergeConfigInput other) {
      if (other == null) {
        return;
      }
      if (other.Tick.Length != 0) {
        Tick = other.Tick;
      }
      if (other.CommissionAmount != 0L) {
        CommissionAmount = other.CommissionAmount;
      }
      if (other.PoolAmount != 0L) {
        PoolAmount = other.PoolAmount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Tick = input.ReadString();
            break;
          }
          case 16: {
            CommissionAmount = input.ReadInt64();
            break;
          }
          case 24: {
            PoolAmount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MergeConfig : pb::IMessage<MergeConfig> {
    private static readonly pb::MessageParser<MergeConfig> _parser = new pb::MessageParser<MergeConfig>(() => new MergeConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MergeConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractImplReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeConfig(MergeConfig other) : this() {
      commissionAmount_ = other.commissionAmount_;
      poolAmount_ = other.poolAmount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeConfig Clone() {
      return new MergeConfig(this);
    }

    /// <summary>Field number for the "commission_amount" field.</summary>
    public const int CommissionAmountFieldNumber = 1;
    private long commissionAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CommissionAmount {
      get { return commissionAmount_; }
      set {
        commissionAmount_ = value;
      }
    }

    /// <summary>Field number for the "pool_amount" field.</summary>
    public const int PoolAmountFieldNumber = 2;
    private long poolAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PoolAmount {
      get { return poolAmount_; }
      set {
        poolAmount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MergeConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MergeConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CommissionAmount != other.CommissionAmount) return false;
      if (PoolAmount != other.PoolAmount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CommissionAmount != 0L) hash ^= CommissionAmount.GetHashCode();
      if (PoolAmount != 0L) hash ^= PoolAmount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CommissionAmount != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(CommissionAmount);
      }
      if (PoolAmount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(PoolAmount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CommissionAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CommissionAmount);
      }
      if (PoolAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PoolAmount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MergeConfig other) {
      if (other == null) {
        return;
      }
      if (other.CommissionAmount != 0L) {
        CommissionAmount = other.CommissionAmount;
      }
      if (other.PoolAmount != 0L) {
        PoolAmount = other.PoolAmount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CommissionAmount = input.ReadInt64();
            break;
          }
          case 16: {
            PoolAmount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetMergeConfigOutput : pb::IMessage<GetMergeConfigOutput> {
    private static readonly pb::MessageParser<GetMergeConfigOutput> _parser = new pb::MessageParser<GetMergeConfigOutput>(() => new GetMergeConfigOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMergeConfigOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractImplReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMergeConfigOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMergeConfigOutput(GetMergeConfigOutput other) : this() {
      tick_ = other.tick_;
      config_ = other.config_ != null ? other.config_.Clone() : null;
      mergeRates_ = other.mergeRates_ != null ? other.mergeRates_.Clone() : null;
      maximumLevel_ = other.maximumLevel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMergeConfigOutput Clone() {
      return new GetMergeConfigOutput(this);
    }

    /// <summary>Field number for the "tick" field.</summary>
    public const int TickFieldNumber = 1;
    private string tick_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tick {
      get { return tick_; }
      set {
        tick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 2;
    private global::Schrodinger.MergeConfig config_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Schrodinger.MergeConfig Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    /// <summary>Field number for the "merge_rates" field.</summary>
    public const int MergeRatesFieldNumber = 3;
    private global::Schrodinger.MergeRates mergeRates_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Schrodinger.MergeRates MergeRates {
      get { return mergeRates_; }
      set {
        mergeRates_ = value;
      }
    }

    /// <summary>Field number for the "maximum_level" field.</summary>
    public const int MaximumLevelFieldNumber = 4;
    private long maximumLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MaximumLevel {
      get { return maximumLevel_; }
      set {
        maximumLevel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMergeConfigOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMergeConfigOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tick != other.Tick) return false;
      if (!object.Equals(Config, other.Config)) return false;
      if (!object.Equals(MergeRates, other.MergeRates)) return false;
      if (MaximumLevel != other.MaximumLevel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Tick.Length != 0) hash ^= Tick.GetHashCode();
      if (config_ != null) hash ^= Config.GetHashCode();
      if (mergeRates_ != null) hash ^= MergeRates.GetHashCode();
      if (MaximumLevel != 0L) hash ^= MaximumLevel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Tick.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Tick);
      }
      if (config_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (mergeRates_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(MergeRates);
      }
      if (MaximumLevel != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(MaximumLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Tick.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tick);
      }
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (mergeRates_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MergeRates);
      }
      if (MaximumLevel != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaximumLevel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMergeConfigOutput other) {
      if (other == null) {
        return;
      }
      if (other.Tick.Length != 0) {
        Tick = other.Tick;
      }
      if (other.config_ != null) {
        if (config_ == null) {
          Config = new global::Schrodinger.MergeConfig();
        }
        Config.MergeFrom(other.Config);
      }
      if (other.mergeRates_ != null) {
        if (mergeRates_ == null) {
          MergeRates = new global::Schrodinger.MergeRates();
        }
        MergeRates.MergeFrom(other.MergeRates);
      }
      if (other.MaximumLevel != 0L) {
        MaximumLevel = other.MaximumLevel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Tick = input.ReadString();
            break;
          }
          case 18: {
            if (config_ == null) {
              Config = new global::Schrodinger.MergeConfig();
            }
            input.ReadMessage(Config);
            break;
          }
          case 26: {
            if (mergeRates_ == null) {
              MergeRates = new global::Schrodinger.MergeRates();
            }
            input.ReadMessage(MergeRates);
            break;
          }
          case 32: {
            MaximumLevel = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MergeInput : pb::IMessage<MergeInput> {
    private static readonly pb::MessageParser<MergeInput> _parser = new pb::MessageParser<MergeInput>(() => new MergeInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MergeInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractImplReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeInput(MergeInput other) : this() {
      tick_ = other.tick_;
      adoptIdA_ = other.adoptIdA_ != null ? other.adoptIdA_.Clone() : null;
      adoptIdB_ = other.adoptIdB_ != null ? other.adoptIdB_.Clone() : null;
      level_ = other.level_;
      signature_ = other.signature_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeInput Clone() {
      return new MergeInput(this);
    }

    /// <summary>Field number for the "tick" field.</summary>
    public const int TickFieldNumber = 1;
    private string tick_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tick {
      get { return tick_; }
      set {
        tick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "adopt_id_a" field.</summary>
    public const int AdoptIdAFieldNumber = 2;
    private global::AElf.Types.Hash adoptIdA_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash AdoptIdA {
      get { return adoptIdA_; }
      set {
        adoptIdA_ = value;
      }
    }

    /// <summary>Field number for the "adopt_id_b" field.</summary>
    public const int AdoptIdBFieldNumber = 3;
    private global::AElf.Types.Hash adoptIdB_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash AdoptIdB {
      get { return adoptIdB_; }
      set {
        adoptIdB_ = value;
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 4;
    private long level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "signature" field.</summary>
    public const int SignatureFieldNumber = 10000;
    private pb::ByteString signature_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Signature {
      get { return signature_; }
      set {
        signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MergeInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MergeInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tick != other.Tick) return false;
      if (!object.Equals(AdoptIdA, other.AdoptIdA)) return false;
      if (!object.Equals(AdoptIdB, other.AdoptIdB)) return false;
      if (Level != other.Level) return false;
      if (Signature != other.Signature) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Tick.Length != 0) hash ^= Tick.GetHashCode();
      if (adoptIdA_ != null) hash ^= AdoptIdA.GetHashCode();
      if (adoptIdB_ != null) hash ^= AdoptIdB.GetHashCode();
      if (Level != 0L) hash ^= Level.GetHashCode();
      if (Signature.Length != 0) hash ^= Signature.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Tick.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Tick);
      }
      if (adoptIdA_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AdoptIdA);
      }
      if (adoptIdB_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AdoptIdB);
      }
      if (Level != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Level);
      }
      if (Signature.Length != 0) {
        output.WriteRawTag(130, 241, 4);
        output.WriteBytes(Signature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Tick.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tick);
      }
      if (adoptIdA_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AdoptIdA);
      }
      if (adoptIdB_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AdoptIdB);
      }
      if (Level != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Level);
      }
      if (Signature.Length != 0) {
        size += 3 + pb::CodedOutputStream.ComputeBytesSize(Signature);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MergeInput other) {
      if (other == null) {
        return;
      }
      if (other.Tick.Length != 0) {
        Tick = other.Tick;
      }
      if (other.adoptIdA_ != null) {
        if (adoptIdA_ == null) {
          AdoptIdA = new global::AElf.Types.Hash();
        }
        AdoptIdA.MergeFrom(other.AdoptIdA);
      }
      if (other.adoptIdB_ != null) {
        if (adoptIdB_ == null) {
          AdoptIdB = new global::AElf.Types.Hash();
        }
        AdoptIdB.MergeFrom(other.AdoptIdB);
      }
      if (other.Level != 0L) {
        Level = other.Level;
      }
      if (other.Signature.Length != 0) {
        Signature = other.Signature;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Tick = input.ReadString();
            break;
          }
          case 18: {
            if (adoptIdA_ == null) {
              AdoptIdA = new global::AElf.Types.Hash();
            }
            input.ReadMessage(AdoptIdA);
            break;
          }
          case 26: {
            if (adoptIdB_ == null) {
              AdoptIdB = new global::AElf.Types.Hash();
            }
            input.ReadMessage(AdoptIdB);
            break;
          }
          case 32: {
            Level = input.ReadInt64();
            break;
          }
          case 80002: {
            Signature = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RedeemInput : pb::IMessage<RedeemInput> {
    private static readonly pb::MessageParser<RedeemInput> _parser = new pb::MessageParser<RedeemInput>(() => new RedeemInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RedeemInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractImplReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedeemInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedeemInput(RedeemInput other) : this() {
      tick_ = other.tick_;
      adoptId_ = other.adoptId_ != null ? other.adoptId_.Clone() : null;
      level_ = other.level_;
      signature_ = other.signature_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedeemInput Clone() {
      return new RedeemInput(this);
    }

    /// <summary>Field number for the "tick" field.</summary>
    public const int TickFieldNumber = 1;
    private string tick_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tick {
      get { return tick_; }
      set {
        tick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "adopt_id" field.</summary>
    public const int AdoptIdFieldNumber = 2;
    private global::AElf.Types.Hash adoptId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash AdoptId {
      get { return adoptId_; }
      set {
        adoptId_ = value;
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 3;
    private long level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "signature" field.</summary>
    public const int SignatureFieldNumber = 10000;
    private pb::ByteString signature_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Signature {
      get { return signature_; }
      set {
        signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RedeemInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RedeemInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tick != other.Tick) return false;
      if (!object.Equals(AdoptId, other.AdoptId)) return false;
      if (Level != other.Level) return false;
      if (Signature != other.Signature) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Tick.Length != 0) hash ^= Tick.GetHashCode();
      if (adoptId_ != null) hash ^= AdoptId.GetHashCode();
      if (Level != 0L) hash ^= Level.GetHashCode();
      if (Signature.Length != 0) hash ^= Signature.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Tick.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Tick);
      }
      if (adoptId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AdoptId);
      }
      if (Level != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Level);
      }
      if (Signature.Length != 0) {
        output.WriteRawTag(130, 241, 4);
        output.WriteBytes(Signature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Tick.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tick);
      }
      if (adoptId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AdoptId);
      }
      if (Level != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Level);
      }
      if (Signature.Length != 0) {
        size += 3 + pb::CodedOutputStream.ComputeBytesSize(Signature);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RedeemInput other) {
      if (other == null) {
        return;
      }
      if (other.Tick.Length != 0) {
        Tick = other.Tick;
      }
      if (other.adoptId_ != null) {
        if (adoptId_ == null) {
          AdoptId = new global::AElf.Types.Hash();
        }
        AdoptId.MergeFrom(other.AdoptId);
      }
      if (other.Level != 0L) {
        Level = other.Level;
      }
      if (other.Signature.Length != 0) {
        Signature = other.Signature;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Tick = input.ReadString();
            break;
          }
          case 18: {
            if (adoptId_ == null) {
              AdoptId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(AdoptId);
            break;
          }
          case 24: {
            Level = input.ReadInt64();
            break;
          }
          case 80002: {
            Signature = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// log event
  /// </summary>
  public sealed partial class RewardConfigSet : pb::IMessage<RewardConfigSet> {
    private static readonly pb::MessageParser<RewardConfigSet> _parser = new pb::MessageParser<RewardConfigSet>(() => new RewardConfigSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RewardConfigSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractImplReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RewardConfigSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RewardConfigSet(RewardConfigSet other) : this() {
      tick_ = other.tick_;
      list_ = other.list_ != null ? other.list_.Clone() : null;
      pool_ = other.pool_ != null ? other.pool_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RewardConfigSet Clone() {
      return new RewardConfigSet(this);
    }

    /// <summary>Field number for the "tick" field.</summary>
    public const int TickFieldNumber = 1;
    private string tick_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tick {
      get { return tick_; }
      set {
        tick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "list" field.</summary>
    public const int ListFieldNumber = 2;
    private global::Schrodinger.RewardList list_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Schrodinger.RewardList List {
      get { return list_; }
      set {
        list_ = value;
      }
    }

    /// <summary>Field number for the "pool" field.</summary>
    public const int PoolFieldNumber = 3;
    private global::AElf.Types.Address pool_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Pool {
      get { return pool_; }
      set {
        pool_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RewardConfigSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RewardConfigSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tick != other.Tick) return false;
      if (!object.Equals(List, other.List)) return false;
      if (!object.Equals(Pool, other.Pool)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Tick.Length != 0) hash ^= Tick.GetHashCode();
      if (list_ != null) hash ^= List.GetHashCode();
      if (pool_ != null) hash ^= Pool.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Tick.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Tick);
      }
      if (list_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(List);
      }
      if (pool_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Pool);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Tick.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tick);
      }
      if (list_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(List);
      }
      if (pool_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pool);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RewardConfigSet other) {
      if (other == null) {
        return;
      }
      if (other.Tick.Length != 0) {
        Tick = other.Tick;
      }
      if (other.list_ != null) {
        if (list_ == null) {
          List = new global::Schrodinger.RewardList();
        }
        List.MergeFrom(other.List);
      }
      if (other.pool_ != null) {
        if (pool_ == null) {
          Pool = new global::AElf.Types.Address();
        }
        Pool.MergeFrom(other.Pool);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Tick = input.ReadString();
            break;
          }
          case 18: {
            if (list_ == null) {
              List = new global::Schrodinger.RewardList();
            }
            input.ReadMessage(List);
            break;
          }
          case 26: {
            if (pool_ == null) {
              Pool = new global::AElf.Types.Address();
            }
            input.ReadMessage(Pool);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Spun : pb::IMessage<Spun> {
    private static readonly pb::MessageParser<Spun> _parser = new pb::MessageParser<Spun>(() => new Spun());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Spun> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractImplReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Spun() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Spun(Spun other) : this() {
      tick_ = other.tick_;
      spinInfo_ = other.spinInfo_ != null ? other.spinInfo_.Clone() : null;
      seed_ = other.seed_ != null ? other.seed_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Spun Clone() {
      return new Spun(this);
    }

    /// <summary>Field number for the "tick" field.</summary>
    public const int TickFieldNumber = 1;
    private string tick_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tick {
      get { return tick_; }
      set {
        tick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "spin_info" field.</summary>
    public const int SpinInfoFieldNumber = 2;
    private global::Schrodinger.SpinInfo spinInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Schrodinger.SpinInfo SpinInfo {
      get { return spinInfo_; }
      set {
        spinInfo_ = value;
      }
    }

    /// <summary>Field number for the "seed" field.</summary>
    public const int SeedFieldNumber = 3;
    private global::AElf.Types.Hash seed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash Seed {
      get { return seed_; }
      set {
        seed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Spun);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Spun other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tick != other.Tick) return false;
      if (!object.Equals(SpinInfo, other.SpinInfo)) return false;
      if (!object.Equals(Seed, other.Seed)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Tick.Length != 0) hash ^= Tick.GetHashCode();
      if (spinInfo_ != null) hash ^= SpinInfo.GetHashCode();
      if (seed_ != null) hash ^= Seed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Tick.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Tick);
      }
      if (spinInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SpinInfo);
      }
      if (seed_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Seed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Tick.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tick);
      }
      if (spinInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SpinInfo);
      }
      if (seed_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Seed);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Spun other) {
      if (other == null) {
        return;
      }
      if (other.Tick.Length != 0) {
        Tick = other.Tick;
      }
      if (other.spinInfo_ != null) {
        if (spinInfo_ == null) {
          SpinInfo = new global::Schrodinger.SpinInfo();
        }
        SpinInfo.MergeFrom(other.SpinInfo);
      }
      if (other.seed_ != null) {
        if (seed_ == null) {
          Seed = new global::AElf.Types.Hash();
        }
        Seed.MergeFrom(other.Seed);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Tick = input.ReadString();
            break;
          }
          case 18: {
            if (spinInfo_ == null) {
              SpinInfo = new global::Schrodinger.SpinInfo();
            }
            input.ReadMessage(SpinInfo);
            break;
          }
          case 26: {
            if (seed_ == null) {
              Seed = new global::AElf.Types.Hash();
            }
            input.ReadMessage(Seed);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AdoptedWithVoucher : pb::IMessage<AdoptedWithVoucher> {
    private static readonly pb::MessageParser<AdoptedWithVoucher> _parser = new pb::MessageParser<AdoptedWithVoucher>(() => new AdoptedWithVoucher());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AdoptedWithVoucher> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractImplReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdoptedWithVoucher() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdoptedWithVoucher(AdoptedWithVoucher other) : this() {
      voucherInfo_ = other.voucherInfo_ != null ? other.voucherInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdoptedWithVoucher Clone() {
      return new AdoptedWithVoucher(this);
    }

    /// <summary>Field number for the "voucher_info" field.</summary>
    public const int VoucherInfoFieldNumber = 1;
    private global::Schrodinger.VoucherInfo voucherInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Schrodinger.VoucherInfo VoucherInfo {
      get { return voucherInfo_; }
      set {
        voucherInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AdoptedWithVoucher);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AdoptedWithVoucher other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(VoucherInfo, other.VoucherInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (voucherInfo_ != null) hash ^= VoucherInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (voucherInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(VoucherInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (voucherInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VoucherInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AdoptedWithVoucher other) {
      if (other == null) {
        return;
      }
      if (other.voucherInfo_ != null) {
        if (voucherInfo_ == null) {
          VoucherInfo = new global::Schrodinger.VoucherInfo();
        }
        VoucherInfo.MergeFrom(other.VoucherInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (voucherInfo_ == null) {
              VoucherInfo = new global::Schrodinger.VoucherInfo();
            }
            input.ReadMessage(VoucherInfo);
            break;
          }
        }
      }
    }

  }

  public sealed partial class VoucherConfirmed : pb::IMessage<VoucherConfirmed> {
    private static readonly pb::MessageParser<VoucherConfirmed> _parser = new pb::MessageParser<VoucherConfirmed>(() => new VoucherConfirmed());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VoucherConfirmed> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractImplReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoucherConfirmed() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoucherConfirmed(VoucherConfirmed other) : this() {
      voucherInfo_ = other.voucherInfo_ != null ? other.voucherInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoucherConfirmed Clone() {
      return new VoucherConfirmed(this);
    }

    /// <summary>Field number for the "voucher_info" field.</summary>
    public const int VoucherInfoFieldNumber = 1;
    private global::Schrodinger.VoucherInfo voucherInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Schrodinger.VoucherInfo VoucherInfo {
      get { return voucherInfo_; }
      set {
        voucherInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VoucherConfirmed);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VoucherConfirmed other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(VoucherInfo, other.VoucherInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (voucherInfo_ != null) hash ^= VoucherInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (voucherInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(VoucherInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (voucherInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VoucherInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VoucherConfirmed other) {
      if (other == null) {
        return;
      }
      if (other.voucherInfo_ != null) {
        if (voucherInfo_ == null) {
          VoucherInfo = new global::Schrodinger.VoucherInfo();
        }
        VoucherInfo.MergeFrom(other.VoucherInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (voucherInfo_ == null) {
              VoucherInfo = new global::Schrodinger.VoucherInfo();
            }
            input.ReadMessage(VoucherInfo);
            break;
          }
        }
      }
    }

  }

  public sealed partial class VoucherAirdropped : pb::IMessage<VoucherAirdropped> {
    private static readonly pb::MessageParser<VoucherAirdropped> _parser = new pb::MessageParser<VoucherAirdropped>(() => new VoucherAirdropped());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VoucherAirdropped> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractImplReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoucherAirdropped() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoucherAirdropped(VoucherAirdropped other) : this() {
      tick_ = other.tick_;
      list_ = other.list_ != null ? other.list_.Clone() : null;
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoucherAirdropped Clone() {
      return new VoucherAirdropped(this);
    }

    /// <summary>Field number for the "tick" field.</summary>
    public const int TickFieldNumber = 1;
    private string tick_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tick {
      get { return tick_; }
      set {
        tick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "list" field.</summary>
    public const int ListFieldNumber = 2;
    private global::Schrodinger.AddressList list_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Schrodinger.AddressList List {
      get { return list_; }
      set {
        list_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VoucherAirdropped);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VoucherAirdropped other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tick != other.Tick) return false;
      if (!object.Equals(List, other.List)) return false;
      if (Amount != other.Amount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Tick.Length != 0) hash ^= Tick.GetHashCode();
      if (list_ != null) hash ^= List.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Tick.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Tick);
      }
      if (list_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(List);
      }
      if (Amount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Tick.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tick);
      }
      if (list_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(List);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VoucherAirdropped other) {
      if (other == null) {
        return;
      }
      if (other.Tick.Length != 0) {
        Tick = other.Tick;
      }
      if (other.list_ != null) {
        if (list_ == null) {
          List = new global::Schrodinger.AddressList();
        }
        List.MergeFrom(other.List);
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Tick = input.ReadString();
            break;
          }
          case 18: {
            if (list_ == null) {
              List = new global::Schrodinger.AddressList();
            }
            input.ReadMessage(List);
            break;
          }
          case 24: {
            Amount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AirdropControllerAdded : pb::IMessage<AirdropControllerAdded> {
    private static readonly pb::MessageParser<AirdropControllerAdded> _parser = new pb::MessageParser<AirdropControllerAdded>(() => new AirdropControllerAdded());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AirdropControllerAdded> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractImplReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AirdropControllerAdded() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AirdropControllerAdded(AirdropControllerAdded other) : this() {
      tick_ = other.tick_;
      addresses_ = other.addresses_ != null ? other.addresses_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AirdropControllerAdded Clone() {
      return new AirdropControllerAdded(this);
    }

    /// <summary>Field number for the "tick" field.</summary>
    public const int TickFieldNumber = 1;
    private string tick_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tick {
      get { return tick_; }
      set {
        tick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "addresses" field.</summary>
    public const int AddressesFieldNumber = 2;
    private global::Schrodinger.AddressList addresses_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Schrodinger.AddressList Addresses {
      get { return addresses_; }
      set {
        addresses_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AirdropControllerAdded);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AirdropControllerAdded other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tick != other.Tick) return false;
      if (!object.Equals(Addresses, other.Addresses)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Tick.Length != 0) hash ^= Tick.GetHashCode();
      if (addresses_ != null) hash ^= Addresses.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Tick.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Tick);
      }
      if (addresses_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Addresses);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Tick.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tick);
      }
      if (addresses_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Addresses);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AirdropControllerAdded other) {
      if (other == null) {
        return;
      }
      if (other.Tick.Length != 0) {
        Tick = other.Tick;
      }
      if (other.addresses_ != null) {
        if (addresses_ == null) {
          Addresses = new global::Schrodinger.AddressList();
        }
        Addresses.MergeFrom(other.Addresses);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Tick = input.ReadString();
            break;
          }
          case 18: {
            if (addresses_ == null) {
              Addresses = new global::Schrodinger.AddressList();
            }
            input.ReadMessage(Addresses);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AirdropControllerRemoved : pb::IMessage<AirdropControllerRemoved> {
    private static readonly pb::MessageParser<AirdropControllerRemoved> _parser = new pb::MessageParser<AirdropControllerRemoved>(() => new AirdropControllerRemoved());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AirdropControllerRemoved> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractImplReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AirdropControllerRemoved() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AirdropControllerRemoved(AirdropControllerRemoved other) : this() {
      tick_ = other.tick_;
      addresses_ = other.addresses_ != null ? other.addresses_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AirdropControllerRemoved Clone() {
      return new AirdropControllerRemoved(this);
    }

    /// <summary>Field number for the "tick" field.</summary>
    public const int TickFieldNumber = 1;
    private string tick_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tick {
      get { return tick_; }
      set {
        tick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "addresses" field.</summary>
    public const int AddressesFieldNumber = 2;
    private global::Schrodinger.AddressList addresses_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Schrodinger.AddressList Addresses {
      get { return addresses_; }
      set {
        addresses_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AirdropControllerRemoved);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AirdropControllerRemoved other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tick != other.Tick) return false;
      if (!object.Equals(Addresses, other.Addresses)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Tick.Length != 0) hash ^= Tick.GetHashCode();
      if (addresses_ != null) hash ^= Addresses.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Tick.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Tick);
      }
      if (addresses_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Addresses);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Tick.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tick);
      }
      if (addresses_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Addresses);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AirdropControllerRemoved other) {
      if (other == null) {
        return;
      }
      if (other.Tick.Length != 0) {
        Tick = other.Tick;
      }
      if (other.addresses_ != null) {
        if (addresses_ == null) {
          Addresses = new global::Schrodinger.AddressList();
        }
        Addresses.MergeFrom(other.Addresses);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Tick = input.ReadString();
            break;
          }
          case 18: {
            if (addresses_ == null) {
              Addresses = new global::Schrodinger.AddressList();
            }
            input.ReadMessage(Addresses);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RerollConfigSet : pb::IMessage<RerollConfigSet> {
    private static readonly pb::MessageParser<RerollConfigSet> _parser = new pb::MessageParser<RerollConfigSet>(() => new RerollConfigSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RerollConfigSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractImplReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RerollConfigSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RerollConfigSet(RerollConfigSet other) : this() {
      tick_ = other.tick_;
      config_ = other.config_ != null ? other.config_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RerollConfigSet Clone() {
      return new RerollConfigSet(this);
    }

    /// <summary>Field number for the "tick" field.</summary>
    public const int TickFieldNumber = 1;
    private string tick_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tick {
      get { return tick_; }
      set {
        tick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 2;
    private global::Schrodinger.RerollConfig config_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Schrodinger.RerollConfig Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RerollConfigSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RerollConfigSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tick != other.Tick) return false;
      if (!object.Equals(Config, other.Config)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Tick.Length != 0) hash ^= Tick.GetHashCode();
      if (config_ != null) hash ^= Config.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Tick.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Tick);
      }
      if (config_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Tick.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tick);
      }
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RerollConfigSet other) {
      if (other == null) {
        return;
      }
      if (other.Tick.Length != 0) {
        Tick = other.Tick;
      }
      if (other.config_ != null) {
        if (config_ == null) {
          Config = new global::Schrodinger.RerollConfig();
        }
        Config.MergeFrom(other.Config);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Tick = input.ReadString();
            break;
          }
          case 18: {
            if (config_ == null) {
              Config = new global::Schrodinger.RerollConfig();
            }
            input.ReadMessage(Config);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MergeRatesConfigSet : pb::IMessage<MergeRatesConfigSet> {
    private static readonly pb::MessageParser<MergeRatesConfigSet> _parser = new pb::MessageParser<MergeRatesConfigSet>(() => new MergeRatesConfigSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MergeRatesConfigSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractImplReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeRatesConfigSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeRatesConfigSet(MergeRatesConfigSet other) : this() {
      tick_ = other.tick_;
      mergeRates_ = other.mergeRates_ != null ? other.mergeRates_.Clone() : null;
      maximumLevel_ = other.maximumLevel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeRatesConfigSet Clone() {
      return new MergeRatesConfigSet(this);
    }

    /// <summary>Field number for the "tick" field.</summary>
    public const int TickFieldNumber = 1;
    private string tick_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tick {
      get { return tick_; }
      set {
        tick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "merge_rates" field.</summary>
    public const int MergeRatesFieldNumber = 2;
    private global::Schrodinger.MergeRates mergeRates_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Schrodinger.MergeRates MergeRates {
      get { return mergeRates_; }
      set {
        mergeRates_ = value;
      }
    }

    /// <summary>Field number for the "maximum_level" field.</summary>
    public const int MaximumLevelFieldNumber = 3;
    private long maximumLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MaximumLevel {
      get { return maximumLevel_; }
      set {
        maximumLevel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MergeRatesConfigSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MergeRatesConfigSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tick != other.Tick) return false;
      if (!object.Equals(MergeRates, other.MergeRates)) return false;
      if (MaximumLevel != other.MaximumLevel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Tick.Length != 0) hash ^= Tick.GetHashCode();
      if (mergeRates_ != null) hash ^= MergeRates.GetHashCode();
      if (MaximumLevel != 0L) hash ^= MaximumLevel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Tick.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Tick);
      }
      if (mergeRates_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MergeRates);
      }
      if (MaximumLevel != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(MaximumLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Tick.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tick);
      }
      if (mergeRates_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MergeRates);
      }
      if (MaximumLevel != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaximumLevel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MergeRatesConfigSet other) {
      if (other == null) {
        return;
      }
      if (other.Tick.Length != 0) {
        Tick = other.Tick;
      }
      if (other.mergeRates_ != null) {
        if (mergeRates_ == null) {
          MergeRates = new global::Schrodinger.MergeRates();
        }
        MergeRates.MergeFrom(other.MergeRates);
      }
      if (other.MaximumLevel != 0L) {
        MaximumLevel = other.MaximumLevel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Tick = input.ReadString();
            break;
          }
          case 18: {
            if (mergeRates_ == null) {
              MergeRates = new global::Schrodinger.MergeRates();
            }
            input.ReadMessage(MergeRates);
            break;
          }
          case 24: {
            MaximumLevel = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MergeConfigSet : pb::IMessage<MergeConfigSet> {
    private static readonly pb::MessageParser<MergeConfigSet> _parser = new pb::MessageParser<MergeConfigSet>(() => new MergeConfigSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MergeConfigSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractImplReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeConfigSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeConfigSet(MergeConfigSet other) : this() {
      tick_ = other.tick_;
      config_ = other.config_ != null ? other.config_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeConfigSet Clone() {
      return new MergeConfigSet(this);
    }

    /// <summary>Field number for the "tick" field.</summary>
    public const int TickFieldNumber = 1;
    private string tick_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tick {
      get { return tick_; }
      set {
        tick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 2;
    private global::Schrodinger.MergeConfig config_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Schrodinger.MergeConfig Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MergeConfigSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MergeConfigSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tick != other.Tick) return false;
      if (!object.Equals(Config, other.Config)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Tick.Length != 0) hash ^= Tick.GetHashCode();
      if (config_ != null) hash ^= Config.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Tick.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Tick);
      }
      if (config_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Tick.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tick);
      }
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MergeConfigSet other) {
      if (other == null) {
        return;
      }
      if (other.Tick.Length != 0) {
        Tick = other.Tick;
      }
      if (other.config_ != null) {
        if (config_ == null) {
          Config = new global::Schrodinger.MergeConfig();
        }
        Config.MergeFrom(other.Config);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Tick = input.ReadString();
            break;
          }
          case 18: {
            if (config_ == null) {
              Config = new global::Schrodinger.MergeConfig();
            }
            input.ReadMessage(Config);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Merged : pb::IMessage<Merged> {
    private static readonly pb::MessageParser<Merged> _parser = new pb::MessageParser<Merged>(() => new Merged());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Merged> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractImplReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Merged() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Merged(Merged other) : this() {
      tick_ = other.tick_;
      adoptIdA_ = other.adoptIdA_ != null ? other.adoptIdA_.Clone() : null;
      adoptIdB_ = other.adoptIdB_ != null ? other.adoptIdB_.Clone() : null;
      symbolA_ = other.symbolA_;
      symbolB_ = other.symbolB_;
      amountA_ = other.amountA_;
      amountB_ = other.amountB_;
      adoptInfo_ = other.adoptInfo_ != null ? other.adoptInfo_.Clone() : null;
      lossAmount_ = other.lossAmount_;
      commissionAmount_ = other.commissionAmount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Merged Clone() {
      return new Merged(this);
    }

    /// <summary>Field number for the "tick" field.</summary>
    public const int TickFieldNumber = 1;
    private string tick_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tick {
      get { return tick_; }
      set {
        tick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "adopt_id_a" field.</summary>
    public const int AdoptIdAFieldNumber = 2;
    private global::AElf.Types.Hash adoptIdA_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash AdoptIdA {
      get { return adoptIdA_; }
      set {
        adoptIdA_ = value;
      }
    }

    /// <summary>Field number for the "adopt_id_b" field.</summary>
    public const int AdoptIdBFieldNumber = 3;
    private global::AElf.Types.Hash adoptIdB_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash AdoptIdB {
      get { return adoptIdB_; }
      set {
        adoptIdB_ = value;
      }
    }

    /// <summary>Field number for the "symbol_a" field.</summary>
    public const int SymbolAFieldNumber = 4;
    private string symbolA_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SymbolA {
      get { return symbolA_; }
      set {
        symbolA_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "symbol_b" field.</summary>
    public const int SymbolBFieldNumber = 5;
    private string symbolB_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SymbolB {
      get { return symbolB_; }
      set {
        symbolB_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount_a" field.</summary>
    public const int AmountAFieldNumber = 6;
    private long amountA_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AmountA {
      get { return amountA_; }
      set {
        amountA_ = value;
      }
    }

    /// <summary>Field number for the "amount_b" field.</summary>
    public const int AmountBFieldNumber = 7;
    private long amountB_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AmountB {
      get { return amountB_; }
      set {
        amountB_ = value;
      }
    }

    /// <summary>Field number for the "adopt_info" field.</summary>
    public const int AdoptInfoFieldNumber = 8;
    private global::Schrodinger.AdoptInfo adoptInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Schrodinger.AdoptInfo AdoptInfo {
      get { return adoptInfo_; }
      set {
        adoptInfo_ = value;
      }
    }

    /// <summary>Field number for the "loss_amount" field.</summary>
    public const int LossAmountFieldNumber = 9;
    private long lossAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LossAmount {
      get { return lossAmount_; }
      set {
        lossAmount_ = value;
      }
    }

    /// <summary>Field number for the "commission_amount" field.</summary>
    public const int CommissionAmountFieldNumber = 10;
    private long commissionAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CommissionAmount {
      get { return commissionAmount_; }
      set {
        commissionAmount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Merged);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Merged other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tick != other.Tick) return false;
      if (!object.Equals(AdoptIdA, other.AdoptIdA)) return false;
      if (!object.Equals(AdoptIdB, other.AdoptIdB)) return false;
      if (SymbolA != other.SymbolA) return false;
      if (SymbolB != other.SymbolB) return false;
      if (AmountA != other.AmountA) return false;
      if (AmountB != other.AmountB) return false;
      if (!object.Equals(AdoptInfo, other.AdoptInfo)) return false;
      if (LossAmount != other.LossAmount) return false;
      if (CommissionAmount != other.CommissionAmount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Tick.Length != 0) hash ^= Tick.GetHashCode();
      if (adoptIdA_ != null) hash ^= AdoptIdA.GetHashCode();
      if (adoptIdB_ != null) hash ^= AdoptIdB.GetHashCode();
      if (SymbolA.Length != 0) hash ^= SymbolA.GetHashCode();
      if (SymbolB.Length != 0) hash ^= SymbolB.GetHashCode();
      if (AmountA != 0L) hash ^= AmountA.GetHashCode();
      if (AmountB != 0L) hash ^= AmountB.GetHashCode();
      if (adoptInfo_ != null) hash ^= AdoptInfo.GetHashCode();
      if (LossAmount != 0L) hash ^= LossAmount.GetHashCode();
      if (CommissionAmount != 0L) hash ^= CommissionAmount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Tick.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Tick);
      }
      if (adoptIdA_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AdoptIdA);
      }
      if (adoptIdB_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AdoptIdB);
      }
      if (SymbolA.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SymbolA);
      }
      if (SymbolB.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(SymbolB);
      }
      if (AmountA != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(AmountA);
      }
      if (AmountB != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(AmountB);
      }
      if (adoptInfo_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(AdoptInfo);
      }
      if (LossAmount != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(LossAmount);
      }
      if (CommissionAmount != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(CommissionAmount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Tick.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tick);
      }
      if (adoptIdA_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AdoptIdA);
      }
      if (adoptIdB_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AdoptIdB);
      }
      if (SymbolA.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SymbolA);
      }
      if (SymbolB.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SymbolB);
      }
      if (AmountA != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AmountA);
      }
      if (AmountB != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AmountB);
      }
      if (adoptInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AdoptInfo);
      }
      if (LossAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LossAmount);
      }
      if (CommissionAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CommissionAmount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Merged other) {
      if (other == null) {
        return;
      }
      if (other.Tick.Length != 0) {
        Tick = other.Tick;
      }
      if (other.adoptIdA_ != null) {
        if (adoptIdA_ == null) {
          AdoptIdA = new global::AElf.Types.Hash();
        }
        AdoptIdA.MergeFrom(other.AdoptIdA);
      }
      if (other.adoptIdB_ != null) {
        if (adoptIdB_ == null) {
          AdoptIdB = new global::AElf.Types.Hash();
        }
        AdoptIdB.MergeFrom(other.AdoptIdB);
      }
      if (other.SymbolA.Length != 0) {
        SymbolA = other.SymbolA;
      }
      if (other.SymbolB.Length != 0) {
        SymbolB = other.SymbolB;
      }
      if (other.AmountA != 0L) {
        AmountA = other.AmountA;
      }
      if (other.AmountB != 0L) {
        AmountB = other.AmountB;
      }
      if (other.adoptInfo_ != null) {
        if (adoptInfo_ == null) {
          AdoptInfo = new global::Schrodinger.AdoptInfo();
        }
        AdoptInfo.MergeFrom(other.AdoptInfo);
      }
      if (other.LossAmount != 0L) {
        LossAmount = other.LossAmount;
      }
      if (other.CommissionAmount != 0L) {
        CommissionAmount = other.CommissionAmount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Tick = input.ReadString();
            break;
          }
          case 18: {
            if (adoptIdA_ == null) {
              AdoptIdA = new global::AElf.Types.Hash();
            }
            input.ReadMessage(AdoptIdA);
            break;
          }
          case 26: {
            if (adoptIdB_ == null) {
              AdoptIdB = new global::AElf.Types.Hash();
            }
            input.ReadMessage(AdoptIdB);
            break;
          }
          case 34: {
            SymbolA = input.ReadString();
            break;
          }
          case 42: {
            SymbolB = input.ReadString();
            break;
          }
          case 48: {
            AmountA = input.ReadInt64();
            break;
          }
          case 56: {
            AmountB = input.ReadInt64();
            break;
          }
          case 66: {
            if (adoptInfo_ == null) {
              AdoptInfo = new global::Schrodinger.AdoptInfo();
            }
            input.ReadMessage(AdoptInfo);
            break;
          }
          case 72: {
            LossAmount = input.ReadInt64();
            break;
          }
          case 80: {
            CommissionAmount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class VoucherAdoptionConfigSet : pb::IMessage<VoucherAdoptionConfigSet> {
    private static readonly pb::MessageParser<VoucherAdoptionConfigSet> _parser = new pb::MessageParser<VoucherAdoptionConfigSet>(() => new VoucherAdoptionConfigSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VoucherAdoptionConfigSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractImplReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoucherAdoptionConfigSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoucherAdoptionConfigSet(VoucherAdoptionConfigSet other) : this() {
      tick_ = other.tick_;
      config_ = other.config_ != null ? other.config_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoucherAdoptionConfigSet Clone() {
      return new VoucherAdoptionConfigSet(this);
    }

    /// <summary>Field number for the "tick" field.</summary>
    public const int TickFieldNumber = 1;
    private string tick_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tick {
      get { return tick_; }
      set {
        tick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 2;
    private global::Schrodinger.VoucherAdoptionConfig config_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Schrodinger.VoucherAdoptionConfig Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VoucherAdoptionConfigSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VoucherAdoptionConfigSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tick != other.Tick) return false;
      if (!object.Equals(Config, other.Config)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Tick.Length != 0) hash ^= Tick.GetHashCode();
      if (config_ != null) hash ^= Config.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Tick.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Tick);
      }
      if (config_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Tick.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tick);
      }
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VoucherAdoptionConfigSet other) {
      if (other == null) {
        return;
      }
      if (other.Tick.Length != 0) {
        Tick = other.Tick;
      }
      if (other.config_ != null) {
        if (config_ == null) {
          Config = new global::Schrodinger.VoucherAdoptionConfig();
        }
        Config.MergeFrom(other.Config);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Tick = input.ReadString();
            break;
          }
          case 18: {
            if (config_ == null) {
              Config = new global::Schrodinger.VoucherAdoptionConfig();
            }
            input.ReadMessage(Config);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Redeemed : pb::IMessage<Redeemed> {
    private static readonly pb::MessageParser<Redeemed> _parser = new pb::MessageParser<Redeemed>(() => new Redeemed());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Redeemed> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractImplReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Redeemed() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Redeemed(Redeemed other) : this() {
      tick_ = other.tick_;
      adoptId_ = other.adoptId_ != null ? other.adoptId_.Clone() : null;
      level_ = other.level_;
      account_ = other.account_ != null ? other.account_.Clone() : null;
      symbol_ = other.symbol_;
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Redeemed Clone() {
      return new Redeemed(this);
    }

    /// <summary>Field number for the "tick" field.</summary>
    public const int TickFieldNumber = 1;
    private string tick_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tick {
      get { return tick_; }
      set {
        tick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "adopt_id" field.</summary>
    public const int AdoptIdFieldNumber = 2;
    private global::AElf.Types.Hash adoptId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash AdoptId {
      get { return adoptId_; }
      set {
        adoptId_ = value;
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 3;
    private long level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 4;
    private global::AElf.Types.Address account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 5;
    private string symbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 6;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Redeemed);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Redeemed other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tick != other.Tick) return false;
      if (!object.Equals(AdoptId, other.AdoptId)) return false;
      if (Level != other.Level) return false;
      if (!object.Equals(Account, other.Account)) return false;
      if (Symbol != other.Symbol) return false;
      if (Amount != other.Amount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Tick.Length != 0) hash ^= Tick.GetHashCode();
      if (adoptId_ != null) hash ^= AdoptId.GetHashCode();
      if (Level != 0L) hash ^= Level.GetHashCode();
      if (account_ != null) hash ^= Account.GetHashCode();
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Tick.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Tick);
      }
      if (adoptId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AdoptId);
      }
      if (Level != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Level);
      }
      if (account_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Account);
      }
      if (Symbol.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Symbol);
      }
      if (Amount != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Tick.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tick);
      }
      if (adoptId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AdoptId);
      }
      if (Level != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Level);
      }
      if (account_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
      }
      if (Symbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Redeemed other) {
      if (other == null) {
        return;
      }
      if (other.Tick.Length != 0) {
        Tick = other.Tick;
      }
      if (other.adoptId_ != null) {
        if (adoptId_ == null) {
          AdoptId = new global::AElf.Types.Hash();
        }
        AdoptId.MergeFrom(other.AdoptId);
      }
      if (other.Level != 0L) {
        Level = other.Level;
      }
      if (other.account_ != null) {
        if (account_ == null) {
          Account = new global::AElf.Types.Address();
        }
        Account.MergeFrom(other.Account);
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Tick = input.ReadString();
            break;
          }
          case 18: {
            if (adoptId_ == null) {
              AdoptId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(AdoptId);
            break;
          }
          case 24: {
            Level = input.ReadInt64();
            break;
          }
          case 34: {
            if (account_ == null) {
              Account = new global::AElf.Types.Address();
            }
            input.ReadMessage(Account);
            break;
          }
          case 42: {
            Symbol = input.ReadString();
            break;
          }
          case 48: {
            Amount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
