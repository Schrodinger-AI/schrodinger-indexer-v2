// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: schrodinger_contract.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Schrodinger {

  /// <summary>Holder for reflection information generated from schrodinger_contract.proto</summary>
  public static partial class SchrodingerContractReflection {

    #region Descriptor
    /// <summary>File descriptor for schrodinger_contract.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SchrodingerContractReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChpzY2hyb2Rpbmdlcl9jb250cmFjdC5wcm90bxoPYWVsZi9jb3JlLnByb3Rv",
            "GhJhZWxmL29wdGlvbnMucHJvdG8aC2FjczEyLnByb3RvGhtnb29nbGUvcHJv",
            "dG9idWYvZW1wdHkucHJvdG8aH2dvb2dsZS9wcm90b2J1Zi90aW1lc3RhbXAu",
            "cHJvdG8iGwoJSm9pbklucHV0Eg4KBmRvbWFpbhgBIAEoCSKBAwoPSW5pdGlh",
            "bGl6ZUlucHV0EhwKBWFkbWluGAEgASgLMg0uYWVsZi5BZGRyZXNzEiYKD3Bv",
            "aW50c19jb250cmFjdBgCIAEoCzINLmFlbGYuQWRkcmVzcxIrChdwb2ludHNf",
            "Y29udHJhY3RfZGFwcF9pZBgDIAEoCzIKLmFlbGYuSGFzaBIPCgdtYXhfZ2Vu",
            "GAQgASgFEhYKDmltYWdlX21heF9zaXplGAUgASgDEhcKD2ltYWdlX21heF9j",
            "b3VudBgGIAEoAxIcChR0cmFpdF90eXBlX21heF9jb3VudBgHIAEoAxIdChV0",
            "cmFpdF92YWx1ZV9tYXhfY291bnQYCCABKAMSHAoUYXR0cmlidXRlX21heF9s",
            "ZW5ndGgYCSABKAMSHgoWbWF4X2F0dHJpYnV0ZXNfcGVyX2dlbhgKIAEoBRIi",
            "ChpmaXhlZF90cmFpdF90eXBlX21heF9jb3VudBgLIAEoAxIaChJpbWFnZV91",
            "cmlfbWF4X3NpemUYDCABKAMihAQKC0RlcGxveUlucHV0EgwKBHRpY2sYASAB",
            "KAkSFgoObWF4X2dlbmVyYXRpb24YAiABKAUSFAoMdG90YWxfc3VwcGx5GAMg",
            "ASgDEhAKCGRlY2ltYWxzGAQgASgFEhEKCWxvc3NfcmF0ZRgFIAEoAxIXCg9j",
            "b21taXNzaW9uX3JhdGUYBiABKAMSKAoPYXR0cmlidXRlX2xpc3RzGAcgASgL",
            "Mg8uQXR0cmlidXRlTGlzdHMSEwoLaW1hZ2VfY291bnQYCCABKAUSIAoJcmVj",
            "aXBpZW50GAkgASgLMg0uYWVsZi5BZGRyZXNzEh0KBmlzc3VlchgKIAEoCzIN",
            "LmFlbGYuQWRkcmVzcxINCgVpbWFnZRgLIAEoCRI3Chdjcm9zc19nZW5lcmF0",
            "aW9uX2NvbmZpZxgMIAEoCzIWLkNyb3NzR2VuZXJhdGlvbkNvbmZpZxIZChFp",
            "c193ZWlnaHRfZW5hYmxlZBgNIAEoCBIcCgVhZG1pbhgOIAEoCzINLmFlbGYu",
            "QWRkcmVzcxIaChJhdHRyaWJ1dGVzX3Blcl9nZW4YDyABKAUSDgoGZG9tYWlu",
            "GBAgASgJEiAKCXNpZ25hdG9yeRgRIAEoCzINLmFlbGYuQWRkcmVzcxIRCglp",
            "bWFnZV91cmkYEiABKAkSGQoRbWF4X2dlbl9sb3NzX3JhdGUYEyABKAMiYwoV",
            "RGVwbG95SW5zY3JpcHRpb25JbmZvEgkKAXAYASABKAkSCgoCb3AYAiABKAkS",
            "DAoEdGljaxgDIAEoCRILCgNtYXgYBCABKAkSCwoDbGltGAUgASgJEgsKA2dl",
            "bhgGIAEoCSJVChRBZG9wdEluc2NyaXB0aW9uSW5mbxIJCgFwGAEgASgJEgoK",
            "Am9wGAIgASgJEgwKBHRpY2sYAyABKAkSCwoDYW10GAQgASgJEgsKA2dlbhgF",
            "IAEoCSJjCg5BdHRyaWJ1dGVMaXN0cxInChBmaXhlZF9hdHRyaWJ1dGVzGAEg",
            "AygLMg0uQXR0cmlidXRlU2V0EigKEXJhbmRvbV9hdHRyaWJ1dGVzGAIgAygL",
            "Mg0uQXR0cmlidXRlU2V0IiwKDUF0dHJpYnV0ZVNldHMSGwoEZGF0YRgBIAMo",
            "CzINLkF0dHJpYnV0ZVNldCJTCgxBdHRyaWJ1dGVTZXQSIgoKdHJhaXRfdHlw",
            "ZRgBIAEoCzIOLkF0dHJpYnV0ZUluZm8SHwoGdmFsdWVzGAIgASgLMg8uQXR0",
            "cmlidXRlSW5mb3MiLgoOQXR0cmlidXRlSW5mb3MSHAoEZGF0YRgBIAMoCzIO",
            "LkF0dHJpYnV0ZUluZm8iLQoNQXR0cmlidXRlSW5mbxIMCgRuYW1lGAEgASgJ",
            "Eg4KBndlaWdodBgCIAEoAyKWAQoVQ3Jvc3NHZW5lcmF0aW9uQ29uZmlnEgsK",
            "A2dlbhgBIAEoBRIeChZjcm9zc19nZW5lcmF0aW9uX2ZpeGVkGAIgASgIEiQK",
            "HGNyb3NzX2dlbmVyYXRpb25fcHJvYmFiaWxpdHkYAyABKAMSDwoHd2VpZ2h0",
            "cxgEIAMoAxIZChFpc193ZWlnaHRfZW5hYmxlZBgFIAEoCCJnCg1FeHRlcm5h",
            "bEluZm9zEigKBXZhbHVlGAEgAygLMhkuRXh0ZXJuYWxJbmZvcy5WYWx1ZUVu",
            "dHJ5GiwKClZhbHVlRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJ",
            "OgI4ASI8CgpBZG9wdElucHV0Eg4KBnBhcmVudBgBIAEoCRIOCgZhbW91bnQY",
            "AiABKAMSDgoGZG9tYWluGAMgASgJIo0DCglBZG9wdEluZm8SHAoIYWRvcHRf",
            "aWQYASABKAsyCi5hZWxmLkhhc2gSDgoGcGFyZW50GAIgASgJEhIKCnBhcmVu",
            "dF9nZW4YAyABKAUSFAoMaW5wdXRfYW1vdW50GAQgASgDEhUKDW91dHB1dF9h",
            "bW91bnQYBSABKAMSJgoRcGFyZW50X2F0dHJpYnV0ZXMYBiABKAsyCy5BdHRy",
            "aWJ1dGVzEhMKC2ltYWdlX2NvdW50GAcgASgDEhQKDGJsb2NrX2hlaWdodBgI",
            "IAEoAxIOCgZzeW1ib2wYCSABKAkSEgoKdG9rZW5fbmFtZRgKIAEoCRIfCgph",
            "dHRyaWJ1dGVzGAsgASgLMgsuQXR0cmlidXRlcxILCgNnZW4YDCABKAUSHgoH",
            "YWRvcHRlchgNIAEoCzINLmFlbGYuQWRkcmVzcxIUCgxpc19jb25maXJtZWQY",
            "DiABKAgSEwoLaXNfcmVyb2xsZWQYDyABKAgSEgoKaXNfdXBkYXRlZBgQIAEo",
            "CBINCgVsZXZlbBgRIAEoAyImCgpBdHRyaWJ1dGVzEhgKBGRhdGEYASADKAsy",
            "Ci5BdHRyaWJ1dGUiLgoJQXR0cmlidXRlEhIKCnRyYWl0X3R5cGUYASABKAkS",
            "DQoFdmFsdWUYAiABKAkiYgoMQ29uZmlybUlucHV0EhwKCGFkb3B0X2lkGAEg",
            "ASgLMgouYWVsZi5IYXNoEg0KBWltYWdlGAIgASgJEhEKCWltYWdlX3VyaRgD",
            "IAEoCRISCglzaWduYXR1cmUYkE4gASgMIj0KC1Jlcm9sbElucHV0Eg4KBnN5",
            "bWJvbBgBIAEoCRIOCgZhbW91bnQYAiABKAMSDgoGZG9tYWluGAMgASgJIkAK",
            "EEFkb3B0TWF4R2VuSW5wdXQSDAoEdGljaxgBIAEoCRIOCgZhbW91bnQYAiAB",
            "KAMSDgoGZG9tYWluGAMgASgJIkcKEVNldEF0dHJpYnV0ZUlucHV0EgwKBHRp",
            "Y2sYASABKAkSJAoNYXR0cmlidXRlX3NldBgCIAEoCzINLkF0dHJpYnV0ZVNl",
            "dCJEChhTZXRBdHRyaWJ1dGVzUGVyR2VuSW5wdXQSDAoEdGljaxgBIAEoCRIa",
            "ChJhdHRyaWJ1dGVzX3Blcl9nZW4YAiABKAUiGgoKU3RyaW5nTGlzdBIMCgRk",
            "YXRhGAEgAygJIjIKFVNldE1heEdlbmVyYXRpb25JbnB1dBIMCgR0aWNrGAEg",
            "ASgJEgsKA2dlbhgCIAEoBSJkCg1TZXRSYXRlc0lucHV0EgwKBHRpY2sYASAB",
            "KAkSEQoJbG9zc19yYXRlGAIgASgDEhcKD2NvbW1pc3Npb25fcmF0ZRgDIAEo",
            "AxIZChFtYXhfZ2VuX2xvc3NfcmF0ZRgEIAEoAyJDChFTZXRSZWNpcGllbnRJ",
            "bnB1dBIMCgR0aWNrGAEgASgJEiAKCXJlY2lwaWVudBgCIAEoCzINLmFlbGYu",
            "QWRkcmVzcyI3ChJTZXRJbWFnZUNvdW50SW5wdXQSDAoEdGljaxgBIAEoCRIT",
            "CgtpbWFnZV9jb3VudBgCIAEoBSJGChhTZXRJbnNjcmlwdGlvbkFkbWluSW5w",
            "dXQSDAoEdGljaxgBIAEoCRIcCgVhZG1pbhgCIAEoCzINLmFlbGYuQWRkcmVz",
            "cyJVCh1TZXRDcm9zc0dlbmVyYXRpb25Db25maWdJbnB1dBIMCgR0aWNrGAEg",
            "ASgJEiYKBmNvbmZpZxgCIAEoCzIWLkNyb3NzR2VuZXJhdGlvbkNvbmZpZyI7",
            "ChdHZXRBdHRyaWJ1dGVWYWx1ZXNJbnB1dBIMCgR0aWNrGAEgASgJEhIKCnRy",
            "YWl0X3R5cGUYAiABKAkiPwocU2V0UG9pbnRzUHJvcG9ydGlvbkxpc3RJbnB1",
            "dBIfCgRkYXRhGAEgAygLMhEuUG9pbnRzUHJvcG9ydGlvbiI7ChBQb2ludHNQ",
            "cm9wb3J0aW9uEhMKC2FjdGlvbl9uYW1lGAEgASgJEhIKCnByb3BvcnRpb24Y",
            "AiABKAMiTgoQQmF0Y2hTZXR0bGVJbnB1dBITCgthY3Rpb25fbmFtZRgBIAEo",
            "CRIlChB1c2VyX3BvaW50c19saXN0GAIgAygLMgsuVXNlclBvaW50cyJ0CgpV",
            "c2VyUG9pbnRzEiMKDHVzZXJfYWRkcmVzcxgBIAEoCzINLmFlbGYuQWRkcmVz",
            "cxITCgt1c2VyX3BvaW50cxgCIAEoAxIsChF1c2VyX3BvaW50c192YWx1ZRgD",
            "IAEoCzIRLmFlbGYuQmlnSW50VmFsdWUi0gIKD0luc2NyaXB0aW9uSW5mbxIQ",
            "CghhbmNlc3RvchgBIAEoCRIQCghkZWNpbWFscxgCIAEoBRIPCgdtYXhfZ2Vu",
            "GAMgASgFEhEKCWxvc3NfcmF0ZRgEIAEoAxIXCg9jb21taXNzaW9uX3JhdGUY",
            "BSABKAMSIAoJcmVjaXBpZW50GAYgASgLMg0uYWVsZi5BZGRyZXNzEhwKBWFk",
            "bWluGAcgASgLMg0uYWVsZi5BZGRyZXNzEjcKF2Nyb3NzX2dlbmVyYXRpb25f",
            "Y29uZmlnGAggASgLMhYuQ3Jvc3NHZW5lcmF0aW9uQ29uZmlnEhkKEWlzX3dl",
            "aWdodF9lbmFibGVkGAkgASgIEhMKC2ltYWdlX2NvdW50GAogASgFEhoKEmF0",
            "dHJpYnV0ZXNfcGVyX2dlbhgLIAEoBRIZChFtYXhfZ2VuX2xvc3NfcmF0ZRgM",
            "IAEoAyKsAQoSR2V0VG9rZW5JbmZvT3V0cHV0EhwKCGFkb3B0X2lkGAEgASgL",
            "MgouYWVsZi5IYXNoEg4KBnBhcmVudBgCIAEoCRISCgpwYXJlbnRfZ2VuGAMg",
            "ASgFEiYKEXBhcmVudF9hdHRyaWJ1dGVzGAQgASgLMgsuQXR0cmlidXRlcxIf",
            "CgphdHRyaWJ1dGVzGAUgASgLMgsuQXR0cmlidXRlcxILCgNnZW4YBiABKAUi",
            "uAEKF1NldEF0dHJpYnV0ZUNvbmZpZ0lucHV0EhwKFHRyYWl0X3R5cGVfbWF4",
            "X2NvdW50GAEgASgDEh0KFXRyYWl0X3ZhbHVlX21heF9jb3VudBgCIAEoAxIc",
            "ChRhdHRyaWJ1dGVfbWF4X2xlbmd0aBgDIAEoAxIeChZtYXhfYXR0cmlidXRl",
            "c19wZXJfZ2VuGAQgASgFEiIKGmZpeGVkX3RyYWl0X3R5cGVfbWF4X2NvdW50",
            "GAUgASgDIoUCCgZDb25maWcSDwoHbWF4X2dlbhgBIAEoBRIWCg5pbWFnZV9t",
            "YXhfc2l6ZRgCIAEoAxIXCg9pbWFnZV9tYXhfY291bnQYAyABKAMSHAoUdHJh",
            "aXRfdHlwZV9tYXhfY291bnQYBCABKAMSHQoVdHJhaXRfdmFsdWVfbWF4X2Nv",
            "dW50GAUgASgDEhwKFGF0dHJpYnV0ZV9tYXhfbGVuZ3RoGAYgASgDEh4KFm1h",
            "eF9hdHRyaWJ1dGVzX3Blcl9nZW4YByABKAUSIgoaZml4ZWRfdHJhaXRfdHlw",
            "ZV9tYXhfY291bnQYCCABKAMSGgoSaW1hZ2VfdXJpX21heF9zaXplGAkgASgD",
            "IkMKEVNldFNpZ25hdG9yeUlucHV0EgwKBHRpY2sYASABKAkSIAoJc2lnbmF0",
            "b3J5GAIgASgLMg0uYWVsZi5BZGRyZXNzIjYKE0FjY2VwdFJlZmVycmFsSW5w",
            "dXQSHwoIcmVmZXJyZXIYASABKAsyDS5hZWxmLkFkZHJlc3MiYwohVHJhbnNm",
            "ZXJGcm9tUmVjZWl2aW5nQWRkcmVzc0lucHV0EgwKBHRpY2sYASABKAkSDgoG",
            "YW1vdW50GAIgASgDEiAKCXJlY2lwaWVudBgDIAEoCzINLmFlbGYuQWRkcmVz",
            "cyJeCgtUcmFpdFZhbHVlcxIkChFsb3dlcl93ZWlnaHRfc3VtcxgBIAEoCzIJ",
            "LkxvbmdMaXN0EikKEHRyYWl0X3ZhbHVlX2xpc3QYAiABKAsyDy5BdHRyaWJ1",
            "dGVJbmZvcyIYCghMb25nTGlzdBIMCgRkYXRhGAEgAygDIiwKG1NldE9mZmlj",
            "aWFsRG9tYWluQWxpYXNJbnB1dBINCgVhbGlhcxgBIAEoCSJBCgZKb2luZWQS",
            "DgoGZG9tYWluGAIgASgJEiEKCnJlZ2lzdHJhbnQYAyABKAsyDS5hZWxmLkFk",
            "ZHJlc3M6BKC7GAEi6wQKCERlcGxveWVkEgwKBHRpY2sYASABKAkSEAoIYW5j",
            "ZXN0b3IYAiABKAkSFgoObWF4X2dlbmVyYXRpb24YAyABKAUSFAoMdG90YWxf",
            "c3VwcGx5GAQgASgDEhAKCGRlY2ltYWxzGAUgASgFEigKD2F0dHJpYnV0ZV9s",
            "aXN0cxgGIAEoCzIPLkF0dHJpYnV0ZUxpc3RzEhMKC2ltYWdlX2NvdW50GAcg",
            "ASgFEh0KBmlzc3VlchgIIAEoCzINLmFlbGYuQWRkcmVzcxIcCgVvd25lchgJ",
            "IAEoCzINLmFlbGYuQWRkcmVzcxIWCg5pc3N1ZV9jaGFpbl9pZBgKIAEoBRIm",
            "Cg5leHRlcm5hbF9pbmZvcxgLIAEoCzIOLkV4dGVybmFsSW5mb3MSEgoKdG9r",
            "ZW5fbmFtZRgMIAEoCRIfCghkZXBsb3llchgNIAEoCzINLmFlbGYuQWRkcmVz",
            "cxI3Chdjcm9zc19nZW5lcmF0aW9uX2NvbmZpZxgOIAEoCzIWLkNyb3NzR2Vu",
            "ZXJhdGlvbkNvbmZpZxIZChFpc193ZWlnaHRfZW5hYmxlZBgPIAEoCBIcCgVh",
            "ZG1pbhgQIAEoCzINLmFlbGYuQWRkcmVzcxIRCglsb3NzX3JhdGUYESABKAMS",
            "FwoPY29tbWlzc2lvbl9yYXRlGBIgASgDEhoKEmF0dHJpYnV0ZXNfcGVyX2dl",
            "bhgTIAEoBRIgCglzaWduYXRvcnkYFCABKAsyDS5hZWxmLkFkZHJlc3MSEQoJ",
            "aW1hZ2VfdXJpGBUgASgJEhkKEW1heF9nZW5fbG9zc19yYXRlGBYgASgDOgSg",
            "uxgBIt0CCgdBZG9wdGVkEhwKCGFkb3B0X2lkGAEgASgLMgouYWVsZi5IYXNo",
            "Eg4KBnBhcmVudBgCIAEoCRISCgpwYXJlbnRfZ2VuGAMgASgFEhQKDGlucHV0",
            "X2Ftb3VudBgEIAEoAxITCgtsb3NzX2Ftb3VudBgFIAEoAxIZChFjb21taXNz",
            "aW9uX2Ftb3VudBgGIAEoAxIVCg1vdXRwdXRfYW1vdW50GAcgASgDEhMKC2lt",
            "YWdlX2NvdW50GAggASgDEh4KB2Fkb3B0ZXIYCSABKAsyDS5hZWxmLkFkZHJl",
            "c3MSFAoMYmxvY2tfaGVpZ2h0GAogASgDEh8KCmF0dHJpYnV0ZXMYCyABKAsy",
            "Cy5BdHRyaWJ1dGVzEgsKA2dlbhgMIAEoBRIQCghhbmNlc3RvchgNIAEoCRIO",
            "CgZzeW1ib2wYDiABKAkSEgoKdG9rZW5fbmFtZRgPIAEoCToEoLsYASLqAgoJ",
            "Q29uZmlybWVkEhwKCGFkb3B0X2lkGAEgASgLMgouYWVsZi5IYXNoEg4KBnBh",
            "cmVudBgCIAEoCRIOCgZzeW1ib2wYAyABKAkSFAoMdG90YWxfc3VwcGx5GAQg",
            "ASgDEhAKCGRlY2ltYWxzGAUgASgFEgsKA2dlbhgGIAEoBRIfCgphdHRyaWJ1",
            "dGVzGAcgASgLMgsuQXR0cmlidXRlcxIdCgZpc3N1ZXIYCCABKAsyDS5hZWxm",
            "LkFkZHJlc3MSHAoFb3duZXIYCSABKAsyDS5hZWxmLkFkZHJlc3MSFgoOaXNz",
            "dWVfY2hhaW5faWQYCiABKAUSJgoOZXh0ZXJuYWxfaW5mb3MYCyABKAsyDi5F",
            "eHRlcm5hbEluZm9zEhIKCnRva2VuX25hbWUYDCABKAkSHwoIZGVwbG95ZXIY",
            "DSABKAsyDS5hZWxmLkFkZHJlc3MSEQoJaW1hZ2VfdXJpGA4gASgJOgSguxgB",
            "ImQKCFJlcm9sbGVkEg4KBnN5bWJvbBgBIAEoCRIQCghhbmNlc3RvchgCIAEo",
            "CRIOCgZhbW91bnQYAyABKAMSIAoJcmVjaXBpZW50GAQgASgLMg0uYWVsZi5B",
            "ZGRyZXNzOgSguxgBInkKEUZpeGVkQXR0cmlidXRlU2V0EgwKBHRpY2sYASAB",
            "KAkSKAoRcmVtb3ZlZF9hdHRyaWJ1dGUYAiABKAsyDS5BdHRyaWJ1dGVTZXQS",
            "JgoPYWRkZWRfYXR0cmlidXRlGAMgASgLMg0uQXR0cmlidXRlU2V0OgSguxgB",
            "InoKElJhbmRvbUF0dHJpYnV0ZVNldBIMCgR0aWNrGAEgASgJEigKEXJlbW92",
            "ZWRfYXR0cmlidXRlGAIgASgLMg0uQXR0cmlidXRlU2V0EiYKD2FkZGVkX2F0",
            "dHJpYnV0ZRgDIAEoCzINLkF0dHJpYnV0ZVNldDoEoLsYASJMChpBdHRyaWJ1",
            "dGVzUGVyR2VuZXJhdGlvblNldBIMCgR0aWNrGAEgASgJEhoKEmF0dHJpYnV0",
            "ZXNfcGVyX2dlbhgCIAEoBToEoLsYASI4Cg1JbWFnZUNvdW50U2V0EgwKBHRp",
            "Y2sYASABKAkSEwoLaW1hZ2VfY291bnQYAiABKAU6BKC7GAEiMwoQTWF4R2Vu",
            "ZXJhdGlvblNldBIMCgR0aWNrGAEgASgJEgsKA2dlbhgCIAEoBToEoLsYASJl",
            "CghSYXRlc1NldBIMCgR0aWNrGAEgASgJEhEKCWxvc3NfcmF0ZRgCIAEoAxIX",
            "Cg9jb21taXNzaW9uX3JhdGUYAyABKAMSGQoRbWF4X2dlbl9sb3NzX3JhdGUY",
            "BCABKAM6BKC7GAEiRAoMUmVjaXBpZW50U2V0EgwKBHRpY2sYASABKAkSIAoJ",
            "cmVjaXBpZW50GAIgASgLMg0uYWVsZi5BZGRyZXNzOgSguxgBIkcKE0luc2Ny",
            "aXB0aW9uQWRtaW5TZXQSDAoEdGljaxgBIAEoCRIcCgVhZG1pbhgCIAEoCzIN",
            "LmFlbGYuQWRkcmVzczoEoLsYASJnChhDcm9zc0dlbmVyYXRpb25Db25maWdT",
            "ZXQSDAoEdGljaxgBIAEoCRI3Chdjcm9zc19nZW5lcmF0aW9uX2NvbmZpZxgC",
            "IAEoCzIWLkNyb3NzR2VuZXJhdGlvbkNvbmZpZzoEoLsYASIqCglDb25maWdT",
            "ZXQSFwoGY29uZmlnGAEgASgLMgcuQ29uZmlnOgSguxgBIi8KFk1heEdlbmVy",
            "YXRpb25Db25maWdTZXQSDwoHbWF4X2dlbhgBIAEoBToEoLsYASIvCg9JbWFn",
            "ZU1heFNpemVTZXQSFgoOaW1hZ2VfbWF4X3NpemUYASABKAM6BKC7GAEiMQoQ",
            "SW1hZ2VNYXhDb3VudFNldBIXCg9pbWFnZV9tYXhfY291bnQYASABKAM6BKC7",
            "GAEiuQEKEkF0dHJpYnV0ZUNvbmZpZ1NldBIcChR0cmFpdF90eXBlX21heF9j",
            "b3VudBgBIAEoAxIdChV0cmFpdF92YWx1ZV9tYXhfY291bnQYAiABKAMSHAoU",
            "YXR0cmlidXRlX21heF9sZW5ndGgYAyABKAMSHgoWbWF4X2F0dHJpYnV0ZXNf",
            "cGVyX2dlbhgEIAEoBRIiChpmaXhlZF90cmFpdF90eXBlX21heF9jb3VudBgF",
            "IAEoAzoEoLsYASIuCghBZG1pblNldBIcCgVhZG1pbhgBIAEoCzINLmFlbGYu",
            "QWRkcmVzczoEoLsYASJECgxTaWduYXRvcnlTZXQSDAoEdGljaxgBIAEoCRIg",
            "CglzaWduYXRvcnkYAiABKAsyDS5hZWxmLkFkZHJlc3M6BKC7GAEiNgoSSW1h",
            "Z2VVcmlNYXhTaXplU2V0EhoKEmltYWdlX3VyaV9tYXhfc2l6ZRgBIAEoAzoE",
            "oLsYASJZChBSZWZlcnJhbEFjY2VwdGVkEh8KCHJlZmVycmVyGAEgASgLMg0u",
            "YWVsZi5BZGRyZXNzEh4KB2ludml0ZWUYAiABKAsyDS5hZWxmLkFkZHJlc3M6",
            "BKC7GAEiLQoWT2ZmaWNpYWxEb21haW5BbGlhc1NldBINCgVhbGlhcxgBIAEo",
            "CToEoLsYASJ2ChBBZG9wdGlvblJlcm9sbGVkEhwKCGFkb3B0X2lkGAEgASgL",
            "MgouYWVsZi5IYXNoEg4KBnN5bWJvbBgCIAEoCRIOCgZhbW91bnQYAyABKAMS",
            "HgoHYWNjb3VudBgEIAEoCzINLmFlbGYuQWRkcmVzczoEoLsYASLlAgoPQWRv",
            "cHRpb25VcGRhdGVkEhwKCGFkb3B0X2lkGAEgASgLMgouYWVsZi5IYXNoEg4K",
            "BnBhcmVudBgCIAEoCRISCgpwYXJlbnRfZ2VuGAMgASgFEhQKDGlucHV0X2Ft",
            "b3VudBgEIAEoAxITCgtsb3NzX2Ftb3VudBgFIAEoAxIZChFjb21taXNzaW9u",
            "X2Ftb3VudBgGIAEoAxIVCg1vdXRwdXRfYW1vdW50GAcgASgDEhMKC2ltYWdl",
            "X2NvdW50GAggASgDEh4KB2Fkb3B0ZXIYCSABKAsyDS5hZWxmLkFkZHJlc3MS",
            "FAoMYmxvY2tfaGVpZ2h0GAogASgDEh8KCmF0dHJpYnV0ZXMYCyABKAsyCy5B",
            "dHRyaWJ1dGVzEgsKA2dlbhgMIAEoBRIQCghhbmNlc3RvchgNIAEoCRIOCgZz",
            "eW1ib2wYDiABKAkSEgoKdG9rZW5fbmFtZRgPIAEoCToEoLsYATLJGwoTU2No",
            "cm9kaW5nZXJDb250cmFjdBI4CgpJbml0aWFsaXplEhAuSW5pdGlhbGl6ZUlu",
            "cHV0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IgASMAoGRGVwbG95EgwuRGVw",
            "bG95SW5wdXQaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiABIyCgdDb25maXJt",
            "Eg0uQ29uZmlybUlucHV0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IgASMAoG",
            "UmVyb2xsEgwuUmVyb2xsSW5wdXQaFi5nb29nbGUucHJvdG9idWYuRW1wdHki",
            "ABI6CgtBZG9wdE1heEdlbhIRLkFkb3B0TWF4R2VuSW5wdXQaFi5nb29nbGUu",
            "cHJvdG9idWYuRW1wdHkiABI2Cg5SZXJvbGxBZG9wdGlvbhIKLmFlbGYuSGFz",
            "aBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIAEkEKEVNldEZpeGVkQXR0cmli",
            "dXRlEhIuU2V0QXR0cmlidXRlSW5wdXQaFi5nb29nbGUucHJvdG9idWYuRW1w",
            "dHkiABJCChJTZXRSYW5kb21BdHRyaWJ1dGUSEi5TZXRBdHRyaWJ1dGVJbnB1",
            "dBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIAEkoKE1NldEF0dHJpYnV0ZXNQ",
            "ZXJHZW4SGS5TZXRBdHRyaWJ1dGVzUGVyR2VuSW5wdXQaFi5nb29nbGUucHJv",
            "dG9idWYuRW1wdHkiABJEChBTZXRNYXhHZW5lcmF0aW9uEhYuU2V0TWF4R2Vu",
            "ZXJhdGlvbklucHV0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IgASNAoIU2V0",
            "UmF0ZXMSDi5TZXRSYXRlc0lucHV0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5",
            "IgASPAoMU2V0UmVjaXBpZW50EhIuU2V0UmVjaXBpZW50SW5wdXQaFi5nb29n",
            "bGUucHJvdG9idWYuRW1wdHkiABI+Cg1TZXRJbWFnZUNvdW50EhMuU2V0SW1h",
            "Z2VDb3VudElucHV0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IgASSgoTU2V0",
            "SW5zY3JpcHRpb25BZG1pbhIZLlNldEluc2NyaXB0aW9uQWRtaW5JbnB1dBoW",
            "Lmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIAElQKGFNldENyb3NzR2VuZXJhdGlv",
            "bkNvbmZpZxIeLlNldENyb3NzR2VuZXJhdGlvbkNvbmZpZ0lucHV0GhYuZ29v",
            "Z2xlLnByb3RvYnVmLkVtcHR5IgASPAoMU2V0U2lnbmF0b3J5EhIuU2V0U2ln",
            "bmF0b3J5SW5wdXQaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiABJCCgxHZXRT",
            "aWduYXRvcnkSHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUaDS5hZWxm",
            "LkFkZHJlc3MiBYiJ9wEBEksKEkdldEluc2NyaXB0aW9uSW5mbxIcLmdvb2ds",
            "ZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRoQLkluc2NyaXB0aW9uSW5mbyIFiIn3",
            "AQESTAoHR2V0VGljaxIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRoc",
            "Lmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZSIFiIn3AQESTgoJR2V0UGFy",
            "ZW50EhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlGhwuZ29vZ2xlLnBy",
            "b3RvYnVmLlN0cmluZ1ZhbHVlIgWIifcBARJJChFHZXRBdHRyaWJ1dGVUeXBl",
            "cxIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRoPLkF0dHJpYnV0ZUlu",
            "Zm9zIgWIifcBARJGChJHZXRBdHRyaWJ1dGVWYWx1ZXMSGC5HZXRBdHRyaWJ1",
            "dGVWYWx1ZXNJbnB1dBoPLkF0dHJpYnV0ZUluZm9zIgWIifcBARItCgxHZXRB",
            "ZG9wdEluZm8SCi5hZWxmLkhhc2gaCi5BZG9wdEluZm8iBYiJ9wEBEkgKDEdl",
            "dFRva2VuSW5mbxIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRoTLkdl",
            "dFRva2VuSW5mb091dHB1dCIFiIn3AQESUgoOR2V0U3ltYm9sQ291bnQSHC5n",
            "b29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUaGy5nb29nbGUucHJvdG9idWYu",
            "SW50NjRWYWx1ZSIFiIn3AQESLgoJU2V0Q29uZmlnEgcuQ29uZmlnGhYuZ29v",
            "Z2xlLnByb3RvYnVmLkVtcHR5IgASMwoIU2V0QWRtaW4SDS5hZWxmLkFkZHJl",
            "c3MaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiABI4CghHZXRBZG1pbhIWLmdv",
            "b2dsZS5wcm90b2J1Zi5FbXB0eRoNLmFlbGYuQWRkcmVzcyIFiIn3AQESTwoW",
            "U2V0TWF4R2VuZXJhdGlvbkNvbmZpZxIbLmdvb2dsZS5wcm90b2J1Zi5JbnQz",
            "MlZhbHVlGhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IgASSAoPU2V0SW1hZ2VN",
            "YXhTaXplEhsuZ29vZ2xlLnByb3RvYnVmLkludDY0VmFsdWUaFi5nb29nbGUu",
            "cHJvdG9idWYuRW1wdHkiABJJChBTZXRJbWFnZU1heENvdW50EhsuZ29vZ2xl",
            "LnByb3RvYnVmLkludDY0VmFsdWUaFi5nb29nbGUucHJvdG9idWYuRW1wdHki",
            "ABJIChJTZXRBdHRyaWJ1dGVDb25maWcSGC5TZXRBdHRyaWJ1dGVDb25maWdJ",
            "bnB1dBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIAEjMKCUdldENvbmZpZxIW",
            "Lmdvb2dsZS5wcm90b2J1Zi5FbXB0eRoHLkNvbmZpZyIFiIn3AQESSwoSU2V0",
            "SW1hZ2VVcmlNYXhTaXplEhsuZ29vZ2xlLnByb3RvYnVmLkludDY0VmFsdWUa",
            "Fi5nb29nbGUucHJvdG9idWYuRW1wdHkiABJQChJHZXRJbWFnZVVyaU1heFNp",
            "emUSFi5nb29nbGUucHJvdG9idWYuRW1wdHkaGy5nb29nbGUucHJvdG9idWYu",
            "SW50NjRWYWx1ZSIFiIn3AQESPwoXU2V0UG9pbnRzQ29udHJhY3REQXBwSWQS",
            "Ci5hZWxmLkhhc2gaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiABI8ChFTZXRQ",
            "b2ludHNDb250cmFjdBINLmFlbGYuQWRkcmVzcxoWLmdvb2dsZS5wcm90b2J1",
            "Zi5FbXB0eSIAElIKF1NldFBvaW50c1Byb3BvcnRpb25MaXN0Eh0uU2V0UG9p",
            "bnRzUHJvcG9ydGlvbkxpc3RJbnB1dBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0",
            "eSIAEj8KFFNldFBvaW50c1NldHRsZUFkbWluEg0uYWVsZi5BZGRyZXNzGhYu",
            "Z29vZ2xlLnByb3RvYnVmLkVtcHR5IgASOgoLQmF0Y2hTZXR0bGUSES5CYXRj",
            "aFNldHRsZUlucHV0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IgASLAoESm9p",
            "bhIKLkpvaW5JbnB1dBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIAEkAKDkFj",
            "Y2VwdFJlZmVycmFsEhQuQWNjZXB0UmVmZXJyYWxJbnB1dBoWLmdvb2dsZS5w",
            "cm90b2J1Zi5FbXB0eSIAEkQKF0dldFBvaW50c0NvbnRyYWN0REFwcElkEhYu",
            "Z29vZ2xlLnByb3RvYnVmLkVtcHR5GgouYWVsZi5IYXNoIgWIifcBARJBChFH",
            "ZXRQb2ludHNDb250cmFjdBIWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRoNLmFl",
            "bGYuQWRkcmVzcyIFiIn3AQESQQoNR2V0Sm9pblJlY29yZBINLmFlbGYuQWRk",
            "cmVzcxoaLmdvb2dsZS5wcm90b2J1Zi5Cb29sVmFsdWUiBYiJ9wEBElcKE0dl",
            "dFBvaW50c1Byb3BvcnRpb24SHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFs",
            "dWUaGy5nb29nbGUucHJvdG9idWYuSW50NjRWYWx1ZSIFiIn3AQESRAoUR2V0",
            "UG9pbnRzU2V0dGxlQWRtaW4SFi5nb29nbGUucHJvdG9idWYuRW1wdHkaDS5h",
            "ZWxmLkFkZHJlc3MiBYiJ9wEBElwKHFRyYW5zZmVyRnJvbVJlY2VpdmluZ0Fk",
            "ZHJlc3MSIi5UcmFuc2ZlckZyb21SZWNlaXZpbmdBZGRyZXNzSW5wdXQaFi5n",
            "b29nbGUucHJvdG9idWYuRW1wdHkiABJJChNHZXRSZWNlaXZpbmdBZGRyZXNz",
            "EhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlGg0uYWVsZi5BZGRyZXNz",
            "IgWIifcBARJQChZTZXRPZmZpY2lhbERvbWFpbkFsaWFzEhwuU2V0T2ZmaWNp",
            "YWxEb21haW5BbGlhc0lucHV0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IgAS",
            "VQoWR2V0T2ZmaWNpYWxEb21haW5BbGlhcxIWLmdvb2dsZS5wcm90b2J1Zi5F",
            "bXB0eRocLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZSIFiIn3AQEaEMrK",
            "9gELYWNzMTIucHJvdG9CDqoCC1NjaHJvZGluZ2VyYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::AElf.Types.CoreReflection.Descriptor, global::AElf.OptionsReflection.Descriptor, global::AElf.Standards.ACS12.Acs12Reflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.JoinInput), global::Schrodinger.JoinInput.Parser, new[]{ "Domain" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.InitializeInput), global::Schrodinger.InitializeInput.Parser, new[]{ "Admin", "PointsContract", "PointsContractDappId", "MaxGen", "ImageMaxSize", "ImageMaxCount", "TraitTypeMaxCount", "TraitValueMaxCount", "AttributeMaxLength", "MaxAttributesPerGen", "FixedTraitTypeMaxCount", "ImageUriMaxSize" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.DeployInput), global::Schrodinger.DeployInput.Parser, new[]{ "Tick", "MaxGeneration", "TotalSupply", "Decimals", "LossRate", "CommissionRate", "AttributeLists", "ImageCount", "Recipient", "Issuer", "Image", "CrossGenerationConfig", "IsWeightEnabled", "Admin", "AttributesPerGen", "Domain", "Signatory", "ImageUri", "MaxGenLossRate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.DeployInscriptionInfo), global::Schrodinger.DeployInscriptionInfo.Parser, new[]{ "P", "Op", "Tick", "Max", "Lim", "Gen" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.AdoptInscriptionInfo), global::Schrodinger.AdoptInscriptionInfo.Parser, new[]{ "P", "Op", "Tick", "Amt", "Gen" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.AttributeLists), global::Schrodinger.AttributeLists.Parser, new[]{ "FixedAttributes", "RandomAttributes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.AttributeSets), global::Schrodinger.AttributeSets.Parser, new[]{ "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.AttributeSet), global::Schrodinger.AttributeSet.Parser, new[]{ "TraitType", "Values" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.AttributeInfos), global::Schrodinger.AttributeInfos.Parser, new[]{ "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.AttributeInfo), global::Schrodinger.AttributeInfo.Parser, new[]{ "Name", "Weight" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.CrossGenerationConfig), global::Schrodinger.CrossGenerationConfig.Parser, new[]{ "Gen", "CrossGenerationFixed", "CrossGenerationProbability", "Weights", "IsWeightEnabled" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.ExternalInfos), global::Schrodinger.ExternalInfos.Parser, new[]{ "Value" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.AdoptInput), global::Schrodinger.AdoptInput.Parser, new[]{ "Parent", "Amount", "Domain" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.AdoptInfo), global::Schrodinger.AdoptInfo.Parser, new[]{ "AdoptId", "Parent", "ParentGen", "InputAmount", "OutputAmount", "ParentAttributes", "ImageCount", "BlockHeight", "Symbol", "TokenName", "Attributes", "Gen", "Adopter", "IsConfirmed", "IsRerolled", "IsUpdated", "Level" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.Attributes), global::Schrodinger.Attributes.Parser, new[]{ "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.Attribute), global::Schrodinger.Attribute.Parser, new[]{ "TraitType", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.ConfirmInput), global::Schrodinger.ConfirmInput.Parser, new[]{ "AdoptId", "Image", "ImageUri", "Signature" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.RerollInput), global::Schrodinger.RerollInput.Parser, new[]{ "Symbol", "Amount", "Domain" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.AdoptMaxGenInput), global::Schrodinger.AdoptMaxGenInput.Parser, new[]{ "Tick", "Amount", "Domain" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.SetAttributeInput), global::Schrodinger.SetAttributeInput.Parser, new[]{ "Tick", "AttributeSet" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.SetAttributesPerGenInput), global::Schrodinger.SetAttributesPerGenInput.Parser, new[]{ "Tick", "AttributesPerGen" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.StringList), global::Schrodinger.StringList.Parser, new[]{ "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.SetMaxGenerationInput), global::Schrodinger.SetMaxGenerationInput.Parser, new[]{ "Tick", "Gen" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.SetRatesInput), global::Schrodinger.SetRatesInput.Parser, new[]{ "Tick", "LossRate", "CommissionRate", "MaxGenLossRate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.SetRecipientInput), global::Schrodinger.SetRecipientInput.Parser, new[]{ "Tick", "Recipient" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.SetImageCountInput), global::Schrodinger.SetImageCountInput.Parser, new[]{ "Tick", "ImageCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.SetInscriptionAdminInput), global::Schrodinger.SetInscriptionAdminInput.Parser, new[]{ "Tick", "Admin" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.SetCrossGenerationConfigInput), global::Schrodinger.SetCrossGenerationConfigInput.Parser, new[]{ "Tick", "Config" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.GetAttributeValuesInput), global::Schrodinger.GetAttributeValuesInput.Parser, new[]{ "Tick", "TraitType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.SetPointsProportionListInput), global::Schrodinger.SetPointsProportionListInput.Parser, new[]{ "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.PointsProportion), global::Schrodinger.PointsProportion.Parser, new[]{ "ActionName", "Proportion" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.BatchSettleInput), global::Schrodinger.BatchSettleInput.Parser, new[]{ "ActionName", "UserPointsList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.UserPoints), global::Schrodinger.UserPoints.Parser, new[]{ "UserAddress", "UserPoints_", "UserPointsValue" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.InscriptionInfo), global::Schrodinger.InscriptionInfo.Parser, new[]{ "Ancestor", "Decimals", "MaxGen", "LossRate", "CommissionRate", "Recipient", "Admin", "CrossGenerationConfig", "IsWeightEnabled", "ImageCount", "AttributesPerGen", "MaxGenLossRate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.GetTokenInfoOutput), global::Schrodinger.GetTokenInfoOutput.Parser, new[]{ "AdoptId", "Parent", "ParentGen", "ParentAttributes", "Attributes", "Gen" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.SetAttributeConfigInput), global::Schrodinger.SetAttributeConfigInput.Parser, new[]{ "TraitTypeMaxCount", "TraitValueMaxCount", "AttributeMaxLength", "MaxAttributesPerGen", "FixedTraitTypeMaxCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.Config), global::Schrodinger.Config.Parser, new[]{ "MaxGen", "ImageMaxSize", "ImageMaxCount", "TraitTypeMaxCount", "TraitValueMaxCount", "AttributeMaxLength", "MaxAttributesPerGen", "FixedTraitTypeMaxCount", "ImageUriMaxSize" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.SetSignatoryInput), global::Schrodinger.SetSignatoryInput.Parser, new[]{ "Tick", "Signatory" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.AcceptReferralInput), global::Schrodinger.AcceptReferralInput.Parser, new[]{ "Referrer" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.TransferFromReceivingAddressInput), global::Schrodinger.TransferFromReceivingAddressInput.Parser, new[]{ "Tick", "Amount", "Recipient" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.TraitValues), global::Schrodinger.TraitValues.Parser, new[]{ "LowerWeightSums", "TraitValueList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.LongList), global::Schrodinger.LongList.Parser, new[]{ "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.SetOfficialDomainAliasInput), global::Schrodinger.SetOfficialDomainAliasInput.Parser, new[]{ "Alias" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.Joined), global::Schrodinger.Joined.Parser, new[]{ "Domain", "Registrant" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.Deployed), global::Schrodinger.Deployed.Parser, new[]{ "Tick", "Ancestor", "MaxGeneration", "TotalSupply", "Decimals", "AttributeLists", "ImageCount", "Issuer", "Owner", "IssueChainId", "ExternalInfos", "TokenName", "Deployer", "CrossGenerationConfig", "IsWeightEnabled", "Admin", "LossRate", "CommissionRate", "AttributesPerGen", "Signatory", "ImageUri", "MaxGenLossRate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.Adopted), global::Schrodinger.Adopted.Parser, new[]{ "AdoptId", "Parent", "ParentGen", "InputAmount", "LossAmount", "CommissionAmount", "OutputAmount", "ImageCount", "Adopter", "BlockHeight", "Attributes", "Gen", "Ancestor", "Symbol", "TokenName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.Confirmed), global::Schrodinger.Confirmed.Parser, new[]{ "AdoptId", "Parent", "Symbol", "TotalSupply", "Decimals", "Gen", "Attributes", "Issuer", "Owner", "IssueChainId", "ExternalInfos", "TokenName", "Deployer", "ImageUri" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.Rerolled), global::Schrodinger.Rerolled.Parser, new[]{ "Symbol", "Ancestor", "Amount", "Recipient" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.FixedAttributeSet), global::Schrodinger.FixedAttributeSet.Parser, new[]{ "Tick", "RemovedAttribute", "AddedAttribute" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.RandomAttributeSet), global::Schrodinger.RandomAttributeSet.Parser, new[]{ "Tick", "RemovedAttribute", "AddedAttribute" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.AttributesPerGenerationSet), global::Schrodinger.AttributesPerGenerationSet.Parser, new[]{ "Tick", "AttributesPerGen" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.ImageCountSet), global::Schrodinger.ImageCountSet.Parser, new[]{ "Tick", "ImageCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.MaxGenerationSet), global::Schrodinger.MaxGenerationSet.Parser, new[]{ "Tick", "Gen" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.RatesSet), global::Schrodinger.RatesSet.Parser, new[]{ "Tick", "LossRate", "CommissionRate", "MaxGenLossRate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.RecipientSet), global::Schrodinger.RecipientSet.Parser, new[]{ "Tick", "Recipient" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.InscriptionAdminSet), global::Schrodinger.InscriptionAdminSet.Parser, new[]{ "Tick", "Admin" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.CrossGenerationConfigSet), global::Schrodinger.CrossGenerationConfigSet.Parser, new[]{ "Tick", "CrossGenerationConfig" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.ConfigSet), global::Schrodinger.ConfigSet.Parser, new[]{ "Config" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.MaxGenerationConfigSet), global::Schrodinger.MaxGenerationConfigSet.Parser, new[]{ "MaxGen" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.ImageMaxSizeSet), global::Schrodinger.ImageMaxSizeSet.Parser, new[]{ "ImageMaxSize" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.ImageMaxCountSet), global::Schrodinger.ImageMaxCountSet.Parser, new[]{ "ImageMaxCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.AttributeConfigSet), global::Schrodinger.AttributeConfigSet.Parser, new[]{ "TraitTypeMaxCount", "TraitValueMaxCount", "AttributeMaxLength", "MaxAttributesPerGen", "FixedTraitTypeMaxCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.AdminSet), global::Schrodinger.AdminSet.Parser, new[]{ "Admin" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.SignatorySet), global::Schrodinger.SignatorySet.Parser, new[]{ "Tick", "Signatory" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.ImageUriMaxSizeSet), global::Schrodinger.ImageUriMaxSizeSet.Parser, new[]{ "ImageUriMaxSize" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.ReferralAccepted), global::Schrodinger.ReferralAccepted.Parser, new[]{ "Referrer", "Invitee" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.OfficialDomainAliasSet), global::Schrodinger.OfficialDomainAliasSet.Parser, new[]{ "Alias" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.AdoptionRerolled), global::Schrodinger.AdoptionRerolled.Parser, new[]{ "AdoptId", "Symbol", "Amount", "Account" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Schrodinger.AdoptionUpdated), global::Schrodinger.AdoptionUpdated.Parser, new[]{ "AdoptId", "Parent", "ParentGen", "InputAmount", "LossAmount", "CommissionAmount", "OutputAmount", "ImageCount", "Adopter", "BlockHeight", "Attributes", "Gen", "Ancestor", "Symbol", "TokenName" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class JoinInput : pb::IMessage<JoinInput> {
    private static readonly pb::MessageParser<JoinInput> _parser = new pb::MessageParser<JoinInput>(() => new JoinInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JoinInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinInput(JoinInput other) : this() {
      domain_ = other.domain_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinInput Clone() {
      return new JoinInput(this);
    }

    /// <summary>Field number for the "domain" field.</summary>
    public const int DomainFieldNumber = 1;
    private string domain_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Domain {
      get { return domain_; }
      set {
        domain_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JoinInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JoinInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Domain != other.Domain) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Domain.Length != 0) hash ^= Domain.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Domain.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Domain);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Domain.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Domain);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JoinInput other) {
      if (other == null) {
        return;
      }
      if (other.Domain.Length != 0) {
        Domain = other.Domain;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Domain = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InitializeInput : pb::IMessage<InitializeInput> {
    private static readonly pb::MessageParser<InitializeInput> _parser = new pb::MessageParser<InitializeInput>(() => new InitializeInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InitializeInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitializeInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitializeInput(InitializeInput other) : this() {
      admin_ = other.admin_ != null ? other.admin_.Clone() : null;
      pointsContract_ = other.pointsContract_ != null ? other.pointsContract_.Clone() : null;
      pointsContractDappId_ = other.pointsContractDappId_ != null ? other.pointsContractDappId_.Clone() : null;
      maxGen_ = other.maxGen_;
      imageMaxSize_ = other.imageMaxSize_;
      imageMaxCount_ = other.imageMaxCount_;
      traitTypeMaxCount_ = other.traitTypeMaxCount_;
      traitValueMaxCount_ = other.traitValueMaxCount_;
      attributeMaxLength_ = other.attributeMaxLength_;
      maxAttributesPerGen_ = other.maxAttributesPerGen_;
      fixedTraitTypeMaxCount_ = other.fixedTraitTypeMaxCount_;
      imageUriMaxSize_ = other.imageUriMaxSize_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitializeInput Clone() {
      return new InitializeInput(this);
    }

    /// <summary>Field number for the "admin" field.</summary>
    public const int AdminFieldNumber = 1;
    private global::AElf.Types.Address admin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Admin {
      get { return admin_; }
      set {
        admin_ = value;
      }
    }

    /// <summary>Field number for the "points_contract" field.</summary>
    public const int PointsContractFieldNumber = 2;
    private global::AElf.Types.Address pointsContract_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address PointsContract {
      get { return pointsContract_; }
      set {
        pointsContract_ = value;
      }
    }

    /// <summary>Field number for the "points_contract_dapp_id" field.</summary>
    public const int PointsContractDappIdFieldNumber = 3;
    private global::AElf.Types.Hash pointsContractDappId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash PointsContractDappId {
      get { return pointsContractDappId_; }
      set {
        pointsContractDappId_ = value;
      }
    }

    /// <summary>Field number for the "max_gen" field.</summary>
    public const int MaxGenFieldNumber = 4;
    private int maxGen_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxGen {
      get { return maxGen_; }
      set {
        maxGen_ = value;
      }
    }

    /// <summary>Field number for the "image_max_size" field.</summary>
    public const int ImageMaxSizeFieldNumber = 5;
    private long imageMaxSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ImageMaxSize {
      get { return imageMaxSize_; }
      set {
        imageMaxSize_ = value;
      }
    }

    /// <summary>Field number for the "image_max_count" field.</summary>
    public const int ImageMaxCountFieldNumber = 6;
    private long imageMaxCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ImageMaxCount {
      get { return imageMaxCount_; }
      set {
        imageMaxCount_ = value;
      }
    }

    /// <summary>Field number for the "trait_type_max_count" field.</summary>
    public const int TraitTypeMaxCountFieldNumber = 7;
    private long traitTypeMaxCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TraitTypeMaxCount {
      get { return traitTypeMaxCount_; }
      set {
        traitTypeMaxCount_ = value;
      }
    }

    /// <summary>Field number for the "trait_value_max_count" field.</summary>
    public const int TraitValueMaxCountFieldNumber = 8;
    private long traitValueMaxCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TraitValueMaxCount {
      get { return traitValueMaxCount_; }
      set {
        traitValueMaxCount_ = value;
      }
    }

    /// <summary>Field number for the "attribute_max_length" field.</summary>
    public const int AttributeMaxLengthFieldNumber = 9;
    private long attributeMaxLength_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AttributeMaxLength {
      get { return attributeMaxLength_; }
      set {
        attributeMaxLength_ = value;
      }
    }

    /// <summary>Field number for the "max_attributes_per_gen" field.</summary>
    public const int MaxAttributesPerGenFieldNumber = 10;
    private int maxAttributesPerGen_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxAttributesPerGen {
      get { return maxAttributesPerGen_; }
      set {
        maxAttributesPerGen_ = value;
      }
    }

    /// <summary>Field number for the "fixed_trait_type_max_count" field.</summary>
    public const int FixedTraitTypeMaxCountFieldNumber = 11;
    private long fixedTraitTypeMaxCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FixedTraitTypeMaxCount {
      get { return fixedTraitTypeMaxCount_; }
      set {
        fixedTraitTypeMaxCount_ = value;
      }
    }

    /// <summary>Field number for the "image_uri_max_size" field.</summary>
    public const int ImageUriMaxSizeFieldNumber = 12;
    private long imageUriMaxSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ImageUriMaxSize {
      get { return imageUriMaxSize_; }
      set {
        imageUriMaxSize_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InitializeInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InitializeInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Admin, other.Admin)) return false;
      if (!object.Equals(PointsContract, other.PointsContract)) return false;
      if (!object.Equals(PointsContractDappId, other.PointsContractDappId)) return false;
      if (MaxGen != other.MaxGen) return false;
      if (ImageMaxSize != other.ImageMaxSize) return false;
      if (ImageMaxCount != other.ImageMaxCount) return false;
      if (TraitTypeMaxCount != other.TraitTypeMaxCount) return false;
      if (TraitValueMaxCount != other.TraitValueMaxCount) return false;
      if (AttributeMaxLength != other.AttributeMaxLength) return false;
      if (MaxAttributesPerGen != other.MaxAttributesPerGen) return false;
      if (FixedTraitTypeMaxCount != other.FixedTraitTypeMaxCount) return false;
      if (ImageUriMaxSize != other.ImageUriMaxSize) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (admin_ != null) hash ^= Admin.GetHashCode();
      if (pointsContract_ != null) hash ^= PointsContract.GetHashCode();
      if (pointsContractDappId_ != null) hash ^= PointsContractDappId.GetHashCode();
      if (MaxGen != 0) hash ^= MaxGen.GetHashCode();
      if (ImageMaxSize != 0L) hash ^= ImageMaxSize.GetHashCode();
      if (ImageMaxCount != 0L) hash ^= ImageMaxCount.GetHashCode();
      if (TraitTypeMaxCount != 0L) hash ^= TraitTypeMaxCount.GetHashCode();
      if (TraitValueMaxCount != 0L) hash ^= TraitValueMaxCount.GetHashCode();
      if (AttributeMaxLength != 0L) hash ^= AttributeMaxLength.GetHashCode();
      if (MaxAttributesPerGen != 0) hash ^= MaxAttributesPerGen.GetHashCode();
      if (FixedTraitTypeMaxCount != 0L) hash ^= FixedTraitTypeMaxCount.GetHashCode();
      if (ImageUriMaxSize != 0L) hash ^= ImageUriMaxSize.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (admin_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Admin);
      }
      if (pointsContract_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PointsContract);
      }
      if (pointsContractDappId_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PointsContractDappId);
      }
      if (MaxGen != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MaxGen);
      }
      if (ImageMaxSize != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(ImageMaxSize);
      }
      if (ImageMaxCount != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(ImageMaxCount);
      }
      if (TraitTypeMaxCount != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(TraitTypeMaxCount);
      }
      if (TraitValueMaxCount != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(TraitValueMaxCount);
      }
      if (AttributeMaxLength != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(AttributeMaxLength);
      }
      if (MaxAttributesPerGen != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(MaxAttributesPerGen);
      }
      if (FixedTraitTypeMaxCount != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(FixedTraitTypeMaxCount);
      }
      if (ImageUriMaxSize != 0L) {
        output.WriteRawTag(96);
        output.WriteInt64(ImageUriMaxSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (admin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Admin);
      }
      if (pointsContract_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PointsContract);
      }
      if (pointsContractDappId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PointsContractDappId);
      }
      if (MaxGen != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxGen);
      }
      if (ImageMaxSize != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ImageMaxSize);
      }
      if (ImageMaxCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ImageMaxCount);
      }
      if (TraitTypeMaxCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TraitTypeMaxCount);
      }
      if (TraitValueMaxCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TraitValueMaxCount);
      }
      if (AttributeMaxLength != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AttributeMaxLength);
      }
      if (MaxAttributesPerGen != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxAttributesPerGen);
      }
      if (FixedTraitTypeMaxCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FixedTraitTypeMaxCount);
      }
      if (ImageUriMaxSize != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ImageUriMaxSize);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InitializeInput other) {
      if (other == null) {
        return;
      }
      if (other.admin_ != null) {
        if (admin_ == null) {
          Admin = new global::AElf.Types.Address();
        }
        Admin.MergeFrom(other.Admin);
      }
      if (other.pointsContract_ != null) {
        if (pointsContract_ == null) {
          PointsContract = new global::AElf.Types.Address();
        }
        PointsContract.MergeFrom(other.PointsContract);
      }
      if (other.pointsContractDappId_ != null) {
        if (pointsContractDappId_ == null) {
          PointsContractDappId = new global::AElf.Types.Hash();
        }
        PointsContractDappId.MergeFrom(other.PointsContractDappId);
      }
      if (other.MaxGen != 0) {
        MaxGen = other.MaxGen;
      }
      if (other.ImageMaxSize != 0L) {
        ImageMaxSize = other.ImageMaxSize;
      }
      if (other.ImageMaxCount != 0L) {
        ImageMaxCount = other.ImageMaxCount;
      }
      if (other.TraitTypeMaxCount != 0L) {
        TraitTypeMaxCount = other.TraitTypeMaxCount;
      }
      if (other.TraitValueMaxCount != 0L) {
        TraitValueMaxCount = other.TraitValueMaxCount;
      }
      if (other.AttributeMaxLength != 0L) {
        AttributeMaxLength = other.AttributeMaxLength;
      }
      if (other.MaxAttributesPerGen != 0) {
        MaxAttributesPerGen = other.MaxAttributesPerGen;
      }
      if (other.FixedTraitTypeMaxCount != 0L) {
        FixedTraitTypeMaxCount = other.FixedTraitTypeMaxCount;
      }
      if (other.ImageUriMaxSize != 0L) {
        ImageUriMaxSize = other.ImageUriMaxSize;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (admin_ == null) {
              Admin = new global::AElf.Types.Address();
            }
            input.ReadMessage(Admin);
            break;
          }
          case 18: {
            if (pointsContract_ == null) {
              PointsContract = new global::AElf.Types.Address();
            }
            input.ReadMessage(PointsContract);
            break;
          }
          case 26: {
            if (pointsContractDappId_ == null) {
              PointsContractDappId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PointsContractDappId);
            break;
          }
          case 32: {
            MaxGen = input.ReadInt32();
            break;
          }
          case 40: {
            ImageMaxSize = input.ReadInt64();
            break;
          }
          case 48: {
            ImageMaxCount = input.ReadInt64();
            break;
          }
          case 56: {
            TraitTypeMaxCount = input.ReadInt64();
            break;
          }
          case 64: {
            TraitValueMaxCount = input.ReadInt64();
            break;
          }
          case 72: {
            AttributeMaxLength = input.ReadInt64();
            break;
          }
          case 80: {
            MaxAttributesPerGen = input.ReadInt32();
            break;
          }
          case 88: {
            FixedTraitTypeMaxCount = input.ReadInt64();
            break;
          }
          case 96: {
            ImageUriMaxSize = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeployInput : pb::IMessage<DeployInput> {
    private static readonly pb::MessageParser<DeployInput> _parser = new pb::MessageParser<DeployInput>(() => new DeployInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeployInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployInput(DeployInput other) : this() {
      tick_ = other.tick_;
      maxGeneration_ = other.maxGeneration_;
      totalSupply_ = other.totalSupply_;
      decimals_ = other.decimals_;
      lossRate_ = other.lossRate_;
      commissionRate_ = other.commissionRate_;
      attributeLists_ = other.attributeLists_ != null ? other.attributeLists_.Clone() : null;
      imageCount_ = other.imageCount_;
      recipient_ = other.recipient_ != null ? other.recipient_.Clone() : null;
      issuer_ = other.issuer_ != null ? other.issuer_.Clone() : null;
      image_ = other.image_;
      crossGenerationConfig_ = other.crossGenerationConfig_ != null ? other.crossGenerationConfig_.Clone() : null;
      isWeightEnabled_ = other.isWeightEnabled_;
      admin_ = other.admin_ != null ? other.admin_.Clone() : null;
      attributesPerGen_ = other.attributesPerGen_;
      domain_ = other.domain_;
      signatory_ = other.signatory_ != null ? other.signatory_.Clone() : null;
      imageUri_ = other.imageUri_;
      maxGenLossRate_ = other.maxGenLossRate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployInput Clone() {
      return new DeployInput(this);
    }

    /// <summary>Field number for the "tick" field.</summary>
    public const int TickFieldNumber = 1;
    private string tick_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tick {
      get { return tick_; }
      set {
        tick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "max_generation" field.</summary>
    public const int MaxGenerationFieldNumber = 2;
    private int maxGeneration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxGeneration {
      get { return maxGeneration_; }
      set {
        maxGeneration_ = value;
      }
    }

    /// <summary>Field number for the "total_supply" field.</summary>
    public const int TotalSupplyFieldNumber = 3;
    private long totalSupply_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalSupply {
      get { return totalSupply_; }
      set {
        totalSupply_ = value;
      }
    }

    /// <summary>Field number for the "decimals" field.</summary>
    public const int DecimalsFieldNumber = 4;
    private int decimals_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Decimals {
      get { return decimals_; }
      set {
        decimals_ = value;
      }
    }

    /// <summary>Field number for the "loss_rate" field.</summary>
    public const int LossRateFieldNumber = 5;
    private long lossRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LossRate {
      get { return lossRate_; }
      set {
        lossRate_ = value;
      }
    }

    /// <summary>Field number for the "commission_rate" field.</summary>
    public const int CommissionRateFieldNumber = 6;
    private long commissionRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CommissionRate {
      get { return commissionRate_; }
      set {
        commissionRate_ = value;
      }
    }

    /// <summary>Field number for the "attribute_lists" field.</summary>
    public const int AttributeListsFieldNumber = 7;
    private global::Schrodinger.AttributeLists attributeLists_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Schrodinger.AttributeLists AttributeLists {
      get { return attributeLists_; }
      set {
        attributeLists_ = value;
      }
    }

    /// <summary>Field number for the "image_count" field.</summary>
    public const int ImageCountFieldNumber = 8;
    private int imageCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ImageCount {
      get { return imageCount_; }
      set {
        imageCount_ = value;
      }
    }

    /// <summary>Field number for the "recipient" field.</summary>
    public const int RecipientFieldNumber = 9;
    private global::AElf.Types.Address recipient_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Recipient {
      get { return recipient_; }
      set {
        recipient_ = value;
      }
    }

    /// <summary>Field number for the "issuer" field.</summary>
    public const int IssuerFieldNumber = 10;
    private global::AElf.Types.Address issuer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Issuer {
      get { return issuer_; }
      set {
        issuer_ = value;
      }
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int ImageFieldNumber = 11;
    private string image_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Image {
      get { return image_; }
      set {
        image_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cross_generation_config" field.</summary>
    public const int CrossGenerationConfigFieldNumber = 12;
    private global::Schrodinger.CrossGenerationConfig crossGenerationConfig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Schrodinger.CrossGenerationConfig CrossGenerationConfig {
      get { return crossGenerationConfig_; }
      set {
        crossGenerationConfig_ = value;
      }
    }

    /// <summary>Field number for the "is_weight_enabled" field.</summary>
    public const int IsWeightEnabledFieldNumber = 13;
    private bool isWeightEnabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsWeightEnabled {
      get { return isWeightEnabled_; }
      set {
        isWeightEnabled_ = value;
      }
    }

    /// <summary>Field number for the "admin" field.</summary>
    public const int AdminFieldNumber = 14;
    private global::AElf.Types.Address admin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Admin {
      get { return admin_; }
      set {
        admin_ = value;
      }
    }

    /// <summary>Field number for the "attributes_per_gen" field.</summary>
    public const int AttributesPerGenFieldNumber = 15;
    private int attributesPerGen_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AttributesPerGen {
      get { return attributesPerGen_; }
      set {
        attributesPerGen_ = value;
      }
    }

    /// <summary>Field number for the "domain" field.</summary>
    public const int DomainFieldNumber = 16;
    private string domain_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Domain {
      get { return domain_; }
      set {
        domain_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "signatory" field.</summary>
    public const int SignatoryFieldNumber = 17;
    private global::AElf.Types.Address signatory_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Signatory {
      get { return signatory_; }
      set {
        signatory_ = value;
      }
    }

    /// <summary>Field number for the "image_uri" field.</summary>
    public const int ImageUriFieldNumber = 18;
    private string imageUri_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImageUri {
      get { return imageUri_; }
      set {
        imageUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "max_gen_loss_rate" field.</summary>
    public const int MaxGenLossRateFieldNumber = 19;
    private long maxGenLossRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MaxGenLossRate {
      get { return maxGenLossRate_; }
      set {
        maxGenLossRate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeployInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeployInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tick != other.Tick) return false;
      if (MaxGeneration != other.MaxGeneration) return false;
      if (TotalSupply != other.TotalSupply) return false;
      if (Decimals != other.Decimals) return false;
      if (LossRate != other.LossRate) return false;
      if (CommissionRate != other.CommissionRate) return false;
      if (!object.Equals(AttributeLists, other.AttributeLists)) return false;
      if (ImageCount != other.ImageCount) return false;
      if (!object.Equals(Recipient, other.Recipient)) return false;
      if (!object.Equals(Issuer, other.Issuer)) return false;
      if (Image != other.Image) return false;
      if (!object.Equals(CrossGenerationConfig, other.CrossGenerationConfig)) return false;
      if (IsWeightEnabled != other.IsWeightEnabled) return false;
      if (!object.Equals(Admin, other.Admin)) return false;
      if (AttributesPerGen != other.AttributesPerGen) return false;
      if (Domain != other.Domain) return false;
      if (!object.Equals(Signatory, other.Signatory)) return false;
      if (ImageUri != other.ImageUri) return false;
      if (MaxGenLossRate != other.MaxGenLossRate) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Tick.Length != 0) hash ^= Tick.GetHashCode();
      if (MaxGeneration != 0) hash ^= MaxGeneration.GetHashCode();
      if (TotalSupply != 0L) hash ^= TotalSupply.GetHashCode();
      if (Decimals != 0) hash ^= Decimals.GetHashCode();
      if (LossRate != 0L) hash ^= LossRate.GetHashCode();
      if (CommissionRate != 0L) hash ^= CommissionRate.GetHashCode();
      if (attributeLists_ != null) hash ^= AttributeLists.GetHashCode();
      if (ImageCount != 0) hash ^= ImageCount.GetHashCode();
      if (recipient_ != null) hash ^= Recipient.GetHashCode();
      if (issuer_ != null) hash ^= Issuer.GetHashCode();
      if (Image.Length != 0) hash ^= Image.GetHashCode();
      if (crossGenerationConfig_ != null) hash ^= CrossGenerationConfig.GetHashCode();
      if (IsWeightEnabled != false) hash ^= IsWeightEnabled.GetHashCode();
      if (admin_ != null) hash ^= Admin.GetHashCode();
      if (AttributesPerGen != 0) hash ^= AttributesPerGen.GetHashCode();
      if (Domain.Length != 0) hash ^= Domain.GetHashCode();
      if (signatory_ != null) hash ^= Signatory.GetHashCode();
      if (ImageUri.Length != 0) hash ^= ImageUri.GetHashCode();
      if (MaxGenLossRate != 0L) hash ^= MaxGenLossRate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Tick.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Tick);
      }
      if (MaxGeneration != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MaxGeneration);
      }
      if (TotalSupply != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(TotalSupply);
      }
      if (Decimals != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Decimals);
      }
      if (LossRate != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(LossRate);
      }
      if (CommissionRate != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(CommissionRate);
      }
      if (attributeLists_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(AttributeLists);
      }
      if (ImageCount != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(ImageCount);
      }
      if (recipient_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Recipient);
      }
      if (issuer_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Issuer);
      }
      if (Image.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Image);
      }
      if (crossGenerationConfig_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(CrossGenerationConfig);
      }
      if (IsWeightEnabled != false) {
        output.WriteRawTag(104);
        output.WriteBool(IsWeightEnabled);
      }
      if (admin_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(Admin);
      }
      if (AttributesPerGen != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(AttributesPerGen);
      }
      if (Domain.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(Domain);
      }
      if (signatory_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(Signatory);
      }
      if (ImageUri.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(ImageUri);
      }
      if (MaxGenLossRate != 0L) {
        output.WriteRawTag(152, 1);
        output.WriteInt64(MaxGenLossRate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Tick.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tick);
      }
      if (MaxGeneration != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxGeneration);
      }
      if (TotalSupply != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalSupply);
      }
      if (Decimals != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Decimals);
      }
      if (LossRate != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LossRate);
      }
      if (CommissionRate != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CommissionRate);
      }
      if (attributeLists_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AttributeLists);
      }
      if (ImageCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ImageCount);
      }
      if (recipient_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Recipient);
      }
      if (issuer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Issuer);
      }
      if (Image.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Image);
      }
      if (crossGenerationConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CrossGenerationConfig);
      }
      if (IsWeightEnabled != false) {
        size += 1 + 1;
      }
      if (admin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Admin);
      }
      if (AttributesPerGen != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AttributesPerGen);
      }
      if (Domain.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Domain);
      }
      if (signatory_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Signatory);
      }
      if (ImageUri.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ImageUri);
      }
      if (MaxGenLossRate != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(MaxGenLossRate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeployInput other) {
      if (other == null) {
        return;
      }
      if (other.Tick.Length != 0) {
        Tick = other.Tick;
      }
      if (other.MaxGeneration != 0) {
        MaxGeneration = other.MaxGeneration;
      }
      if (other.TotalSupply != 0L) {
        TotalSupply = other.TotalSupply;
      }
      if (other.Decimals != 0) {
        Decimals = other.Decimals;
      }
      if (other.LossRate != 0L) {
        LossRate = other.LossRate;
      }
      if (other.CommissionRate != 0L) {
        CommissionRate = other.CommissionRate;
      }
      if (other.attributeLists_ != null) {
        if (attributeLists_ == null) {
          AttributeLists = new global::Schrodinger.AttributeLists();
        }
        AttributeLists.MergeFrom(other.AttributeLists);
      }
      if (other.ImageCount != 0) {
        ImageCount = other.ImageCount;
      }
      if (other.recipient_ != null) {
        if (recipient_ == null) {
          Recipient = new global::AElf.Types.Address();
        }
        Recipient.MergeFrom(other.Recipient);
      }
      if (other.issuer_ != null) {
        if (issuer_ == null) {
          Issuer = new global::AElf.Types.Address();
        }
        Issuer.MergeFrom(other.Issuer);
      }
      if (other.Image.Length != 0) {
        Image = other.Image;
      }
      if (other.crossGenerationConfig_ != null) {
        if (crossGenerationConfig_ == null) {
          CrossGenerationConfig = new global::Schrodinger.CrossGenerationConfig();
        }
        CrossGenerationConfig.MergeFrom(other.CrossGenerationConfig);
      }
      if (other.IsWeightEnabled != false) {
        IsWeightEnabled = other.IsWeightEnabled;
      }
      if (other.admin_ != null) {
        if (admin_ == null) {
          Admin = new global::AElf.Types.Address();
        }
        Admin.MergeFrom(other.Admin);
      }
      if (other.AttributesPerGen != 0) {
        AttributesPerGen = other.AttributesPerGen;
      }
      if (other.Domain.Length != 0) {
        Domain = other.Domain;
      }
      if (other.signatory_ != null) {
        if (signatory_ == null) {
          Signatory = new global::AElf.Types.Address();
        }
        Signatory.MergeFrom(other.Signatory);
      }
      if (other.ImageUri.Length != 0) {
        ImageUri = other.ImageUri;
      }
      if (other.MaxGenLossRate != 0L) {
        MaxGenLossRate = other.MaxGenLossRate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Tick = input.ReadString();
            break;
          }
          case 16: {
            MaxGeneration = input.ReadInt32();
            break;
          }
          case 24: {
            TotalSupply = input.ReadInt64();
            break;
          }
          case 32: {
            Decimals = input.ReadInt32();
            break;
          }
          case 40: {
            LossRate = input.ReadInt64();
            break;
          }
          case 48: {
            CommissionRate = input.ReadInt64();
            break;
          }
          case 58: {
            if (attributeLists_ == null) {
              AttributeLists = new global::Schrodinger.AttributeLists();
            }
            input.ReadMessage(AttributeLists);
            break;
          }
          case 64: {
            ImageCount = input.ReadInt32();
            break;
          }
          case 74: {
            if (recipient_ == null) {
              Recipient = new global::AElf.Types.Address();
            }
            input.ReadMessage(Recipient);
            break;
          }
          case 82: {
            if (issuer_ == null) {
              Issuer = new global::AElf.Types.Address();
            }
            input.ReadMessage(Issuer);
            break;
          }
          case 90: {
            Image = input.ReadString();
            break;
          }
          case 98: {
            if (crossGenerationConfig_ == null) {
              CrossGenerationConfig = new global::Schrodinger.CrossGenerationConfig();
            }
            input.ReadMessage(CrossGenerationConfig);
            break;
          }
          case 104: {
            IsWeightEnabled = input.ReadBool();
            break;
          }
          case 114: {
            if (admin_ == null) {
              Admin = new global::AElf.Types.Address();
            }
            input.ReadMessage(Admin);
            break;
          }
          case 120: {
            AttributesPerGen = input.ReadInt32();
            break;
          }
          case 130: {
            Domain = input.ReadString();
            break;
          }
          case 138: {
            if (signatory_ == null) {
              Signatory = new global::AElf.Types.Address();
            }
            input.ReadMessage(Signatory);
            break;
          }
          case 146: {
            ImageUri = input.ReadString();
            break;
          }
          case 152: {
            MaxGenLossRate = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeployInscriptionInfo : pb::IMessage<DeployInscriptionInfo> {
    private static readonly pb::MessageParser<DeployInscriptionInfo> _parser = new pb::MessageParser<DeployInscriptionInfo>(() => new DeployInscriptionInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeployInscriptionInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployInscriptionInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployInscriptionInfo(DeployInscriptionInfo other) : this() {
      p_ = other.p_;
      op_ = other.op_;
      tick_ = other.tick_;
      max_ = other.max_;
      lim_ = other.lim_;
      gen_ = other.gen_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployInscriptionInfo Clone() {
      return new DeployInscriptionInfo(this);
    }

    /// <summary>Field number for the "p" field.</summary>
    public const int PFieldNumber = 1;
    private string p_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string P {
      get { return p_; }
      set {
        p_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "op" field.</summary>
    public const int OpFieldNumber = 2;
    private string op_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Op {
      get { return op_; }
      set {
        op_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tick" field.</summary>
    public const int TickFieldNumber = 3;
    private string tick_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tick {
      get { return tick_; }
      set {
        tick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "max" field.</summary>
    public const int MaxFieldNumber = 4;
    private string max_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Max {
      get { return max_; }
      set {
        max_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lim" field.</summary>
    public const int LimFieldNumber = 5;
    private string lim_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Lim {
      get { return lim_; }
      set {
        lim_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gen" field.</summary>
    public const int GenFieldNumber = 6;
    private string gen_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Gen {
      get { return gen_; }
      set {
        gen_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeployInscriptionInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeployInscriptionInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (P != other.P) return false;
      if (Op != other.Op) return false;
      if (Tick != other.Tick) return false;
      if (Max != other.Max) return false;
      if (Lim != other.Lim) return false;
      if (Gen != other.Gen) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (P.Length != 0) hash ^= P.GetHashCode();
      if (Op.Length != 0) hash ^= Op.GetHashCode();
      if (Tick.Length != 0) hash ^= Tick.GetHashCode();
      if (Max.Length != 0) hash ^= Max.GetHashCode();
      if (Lim.Length != 0) hash ^= Lim.GetHashCode();
      if (Gen.Length != 0) hash ^= Gen.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (P.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(P);
      }
      if (Op.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Op);
      }
      if (Tick.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Tick);
      }
      if (Max.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Max);
      }
      if (Lim.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Lim);
      }
      if (Gen.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Gen);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (P.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(P);
      }
      if (Op.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Op);
      }
      if (Tick.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tick);
      }
      if (Max.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Max);
      }
      if (Lim.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Lim);
      }
      if (Gen.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Gen);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeployInscriptionInfo other) {
      if (other == null) {
        return;
      }
      if (other.P.Length != 0) {
        P = other.P;
      }
      if (other.Op.Length != 0) {
        Op = other.Op;
      }
      if (other.Tick.Length != 0) {
        Tick = other.Tick;
      }
      if (other.Max.Length != 0) {
        Max = other.Max;
      }
      if (other.Lim.Length != 0) {
        Lim = other.Lim;
      }
      if (other.Gen.Length != 0) {
        Gen = other.Gen;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            P = input.ReadString();
            break;
          }
          case 18: {
            Op = input.ReadString();
            break;
          }
          case 26: {
            Tick = input.ReadString();
            break;
          }
          case 34: {
            Max = input.ReadString();
            break;
          }
          case 42: {
            Lim = input.ReadString();
            break;
          }
          case 50: {
            Gen = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AdoptInscriptionInfo : pb::IMessage<AdoptInscriptionInfo> {
    private static readonly pb::MessageParser<AdoptInscriptionInfo> _parser = new pb::MessageParser<AdoptInscriptionInfo>(() => new AdoptInscriptionInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AdoptInscriptionInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdoptInscriptionInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdoptInscriptionInfo(AdoptInscriptionInfo other) : this() {
      p_ = other.p_;
      op_ = other.op_;
      tick_ = other.tick_;
      amt_ = other.amt_;
      gen_ = other.gen_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdoptInscriptionInfo Clone() {
      return new AdoptInscriptionInfo(this);
    }

    /// <summary>Field number for the "p" field.</summary>
    public const int PFieldNumber = 1;
    private string p_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string P {
      get { return p_; }
      set {
        p_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "op" field.</summary>
    public const int OpFieldNumber = 2;
    private string op_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Op {
      get { return op_; }
      set {
        op_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tick" field.</summary>
    public const int TickFieldNumber = 3;
    private string tick_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tick {
      get { return tick_; }
      set {
        tick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amt" field.</summary>
    public const int AmtFieldNumber = 4;
    private string amt_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Amt {
      get { return amt_; }
      set {
        amt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gen" field.</summary>
    public const int GenFieldNumber = 5;
    private string gen_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Gen {
      get { return gen_; }
      set {
        gen_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AdoptInscriptionInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AdoptInscriptionInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (P != other.P) return false;
      if (Op != other.Op) return false;
      if (Tick != other.Tick) return false;
      if (Amt != other.Amt) return false;
      if (Gen != other.Gen) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (P.Length != 0) hash ^= P.GetHashCode();
      if (Op.Length != 0) hash ^= Op.GetHashCode();
      if (Tick.Length != 0) hash ^= Tick.GetHashCode();
      if (Amt.Length != 0) hash ^= Amt.GetHashCode();
      if (Gen.Length != 0) hash ^= Gen.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (P.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(P);
      }
      if (Op.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Op);
      }
      if (Tick.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Tick);
      }
      if (Amt.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Amt);
      }
      if (Gen.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Gen);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (P.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(P);
      }
      if (Op.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Op);
      }
      if (Tick.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tick);
      }
      if (Amt.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Amt);
      }
      if (Gen.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Gen);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AdoptInscriptionInfo other) {
      if (other == null) {
        return;
      }
      if (other.P.Length != 0) {
        P = other.P;
      }
      if (other.Op.Length != 0) {
        Op = other.Op;
      }
      if (other.Tick.Length != 0) {
        Tick = other.Tick;
      }
      if (other.Amt.Length != 0) {
        Amt = other.Amt;
      }
      if (other.Gen.Length != 0) {
        Gen = other.Gen;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            P = input.ReadString();
            break;
          }
          case 18: {
            Op = input.ReadString();
            break;
          }
          case 26: {
            Tick = input.ReadString();
            break;
          }
          case 34: {
            Amt = input.ReadString();
            break;
          }
          case 42: {
            Gen = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AttributeLists : pb::IMessage<AttributeLists> {
    private static readonly pb::MessageParser<AttributeLists> _parser = new pb::MessageParser<AttributeLists>(() => new AttributeLists());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AttributeLists> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttributeLists() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttributeLists(AttributeLists other) : this() {
      fixedAttributes_ = other.fixedAttributes_.Clone();
      randomAttributes_ = other.randomAttributes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttributeLists Clone() {
      return new AttributeLists(this);
    }

    /// <summary>Field number for the "fixed_attributes" field.</summary>
    public const int FixedAttributesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Schrodinger.AttributeSet> _repeated_fixedAttributes_codec
        = pb::FieldCodec.ForMessage(10, global::Schrodinger.AttributeSet.Parser);
    private readonly pbc::RepeatedField<global::Schrodinger.AttributeSet> fixedAttributes_ = new pbc::RepeatedField<global::Schrodinger.AttributeSet>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Schrodinger.AttributeSet> FixedAttributes {
      get { return fixedAttributes_; }
    }

    /// <summary>Field number for the "random_attributes" field.</summary>
    public const int RandomAttributesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Schrodinger.AttributeSet> _repeated_randomAttributes_codec
        = pb::FieldCodec.ForMessage(18, global::Schrodinger.AttributeSet.Parser);
    private readonly pbc::RepeatedField<global::Schrodinger.AttributeSet> randomAttributes_ = new pbc::RepeatedField<global::Schrodinger.AttributeSet>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Schrodinger.AttributeSet> RandomAttributes {
      get { return randomAttributes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AttributeLists);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AttributeLists other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!fixedAttributes_.Equals(other.fixedAttributes_)) return false;
      if(!randomAttributes_.Equals(other.randomAttributes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= fixedAttributes_.GetHashCode();
      hash ^= randomAttributes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      fixedAttributes_.WriteTo(output, _repeated_fixedAttributes_codec);
      randomAttributes_.WriteTo(output, _repeated_randomAttributes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += fixedAttributes_.CalculateSize(_repeated_fixedAttributes_codec);
      size += randomAttributes_.CalculateSize(_repeated_randomAttributes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AttributeLists other) {
      if (other == null) {
        return;
      }
      fixedAttributes_.Add(other.fixedAttributes_);
      randomAttributes_.Add(other.randomAttributes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            fixedAttributes_.AddEntriesFrom(input, _repeated_fixedAttributes_codec);
            break;
          }
          case 18: {
            randomAttributes_.AddEntriesFrom(input, _repeated_randomAttributes_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AttributeSets : pb::IMessage<AttributeSets> {
    private static readonly pb::MessageParser<AttributeSets> _parser = new pb::MessageParser<AttributeSets>(() => new AttributeSets());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AttributeSets> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttributeSets() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttributeSets(AttributeSets other) : this() {
      data_ = other.data_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttributeSets Clone() {
      return new AttributeSets(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Schrodinger.AttributeSet> _repeated_data_codec
        = pb::FieldCodec.ForMessage(10, global::Schrodinger.AttributeSet.Parser);
    private readonly pbc::RepeatedField<global::Schrodinger.AttributeSet> data_ = new pbc::RepeatedField<global::Schrodinger.AttributeSet>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Schrodinger.AttributeSet> Data {
      get { return data_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AttributeSets);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AttributeSets other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!data_.Equals(other.data_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= data_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      data_.WriteTo(output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += data_.CalculateSize(_repeated_data_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AttributeSets other) {
      if (other == null) {
        return;
      }
      data_.Add(other.data_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            data_.AddEntriesFrom(input, _repeated_data_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AttributeSet : pb::IMessage<AttributeSet> {
    private static readonly pb::MessageParser<AttributeSet> _parser = new pb::MessageParser<AttributeSet>(() => new AttributeSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AttributeSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttributeSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttributeSet(AttributeSet other) : this() {
      traitType_ = other.traitType_ != null ? other.traitType_.Clone() : null;
      values_ = other.values_ != null ? other.values_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttributeSet Clone() {
      return new AttributeSet(this);
    }

    /// <summary>Field number for the "trait_type" field.</summary>
    public const int TraitTypeFieldNumber = 1;
    private global::Schrodinger.AttributeInfo traitType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Schrodinger.AttributeInfo TraitType {
      get { return traitType_; }
      set {
        traitType_ = value;
      }
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 2;
    private global::Schrodinger.AttributeInfos values_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Schrodinger.AttributeInfos Values {
      get { return values_; }
      set {
        values_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AttributeSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AttributeSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TraitType, other.TraitType)) return false;
      if (!object.Equals(Values, other.Values)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (traitType_ != null) hash ^= TraitType.GetHashCode();
      if (values_ != null) hash ^= Values.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (traitType_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TraitType);
      }
      if (values_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Values);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (traitType_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TraitType);
      }
      if (values_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Values);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AttributeSet other) {
      if (other == null) {
        return;
      }
      if (other.traitType_ != null) {
        if (traitType_ == null) {
          TraitType = new global::Schrodinger.AttributeInfo();
        }
        TraitType.MergeFrom(other.TraitType);
      }
      if (other.values_ != null) {
        if (values_ == null) {
          Values = new global::Schrodinger.AttributeInfos();
        }
        Values.MergeFrom(other.Values);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (traitType_ == null) {
              TraitType = new global::Schrodinger.AttributeInfo();
            }
            input.ReadMessage(TraitType);
            break;
          }
          case 18: {
            if (values_ == null) {
              Values = new global::Schrodinger.AttributeInfos();
            }
            input.ReadMessage(Values);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AttributeInfos : pb::IMessage<AttributeInfos> {
    private static readonly pb::MessageParser<AttributeInfos> _parser = new pb::MessageParser<AttributeInfos>(() => new AttributeInfos());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AttributeInfos> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttributeInfos() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttributeInfos(AttributeInfos other) : this() {
      data_ = other.data_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttributeInfos Clone() {
      return new AttributeInfos(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Schrodinger.AttributeInfo> _repeated_data_codec
        = pb::FieldCodec.ForMessage(10, global::Schrodinger.AttributeInfo.Parser);
    private readonly pbc::RepeatedField<global::Schrodinger.AttributeInfo> data_ = new pbc::RepeatedField<global::Schrodinger.AttributeInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Schrodinger.AttributeInfo> Data {
      get { return data_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AttributeInfos);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AttributeInfos other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!data_.Equals(other.data_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= data_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      data_.WriteTo(output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += data_.CalculateSize(_repeated_data_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AttributeInfos other) {
      if (other == null) {
        return;
      }
      data_.Add(other.data_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            data_.AddEntriesFrom(input, _repeated_data_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AttributeInfo : pb::IMessage<AttributeInfo> {
    private static readonly pb::MessageParser<AttributeInfo> _parser = new pb::MessageParser<AttributeInfo>(() => new AttributeInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AttributeInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttributeInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttributeInfo(AttributeInfo other) : this() {
      name_ = other.name_;
      weight_ = other.weight_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttributeInfo Clone() {
      return new AttributeInfo(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "weight" field.</summary>
    public const int WeightFieldNumber = 2;
    private long weight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Weight {
      get { return weight_; }
      set {
        weight_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AttributeInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AttributeInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Weight != other.Weight) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Weight != 0L) hash ^= Weight.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Weight != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Weight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Weight != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Weight);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AttributeInfo other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Weight != 0L) {
        Weight = other.Weight;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Weight = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CrossGenerationConfig : pb::IMessage<CrossGenerationConfig> {
    private static readonly pb::MessageParser<CrossGenerationConfig> _parser = new pb::MessageParser<CrossGenerationConfig>(() => new CrossGenerationConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CrossGenerationConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrossGenerationConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrossGenerationConfig(CrossGenerationConfig other) : this() {
      gen_ = other.gen_;
      crossGenerationFixed_ = other.crossGenerationFixed_;
      crossGenerationProbability_ = other.crossGenerationProbability_;
      weights_ = other.weights_.Clone();
      isWeightEnabled_ = other.isWeightEnabled_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrossGenerationConfig Clone() {
      return new CrossGenerationConfig(this);
    }

    /// <summary>Field number for the "gen" field.</summary>
    public const int GenFieldNumber = 1;
    private int gen_;
    /// <summary>
    /// cross generation limit, 0 means no cross generation mechanism
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Gen {
      get { return gen_; }
      set {
        gen_ = value;
      }
    }

    /// <summary>Field number for the "cross_generation_fixed" field.</summary>
    public const int CrossGenerationFixedFieldNumber = 2;
    private bool crossGenerationFixed_;
    /// <summary>
    /// whether the cross generation quantity is fixed
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CrossGenerationFixed {
      get { return crossGenerationFixed_; }
      set {
        crossGenerationFixed_ = value;
      }
    }

    /// <summary>Field number for the "cross_generation_probability" field.</summary>
    public const int CrossGenerationProbabilityFieldNumber = 3;
    private long crossGenerationProbability_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CrossGenerationProbability {
      get { return crossGenerationProbability_; }
      set {
        crossGenerationProbability_ = value;
      }
    }

    /// <summary>Field number for the "weights" field.</summary>
    public const int WeightsFieldNumber = 4;
    private static readonly pb::FieldCodec<long> _repeated_weights_codec
        = pb::FieldCodec.ForInt64(34);
    private readonly pbc::RepeatedField<long> weights_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// determine the cross generation quantity
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> Weights {
      get { return weights_; }
    }

    /// <summary>Field number for the "is_weight_enabled" field.</summary>
    public const int IsWeightEnabledFieldNumber = 5;
    private bool isWeightEnabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsWeightEnabled {
      get { return isWeightEnabled_; }
      set {
        isWeightEnabled_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CrossGenerationConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CrossGenerationConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Gen != other.Gen) return false;
      if (CrossGenerationFixed != other.CrossGenerationFixed) return false;
      if (CrossGenerationProbability != other.CrossGenerationProbability) return false;
      if(!weights_.Equals(other.weights_)) return false;
      if (IsWeightEnabled != other.IsWeightEnabled) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Gen != 0) hash ^= Gen.GetHashCode();
      if (CrossGenerationFixed != false) hash ^= CrossGenerationFixed.GetHashCode();
      if (CrossGenerationProbability != 0L) hash ^= CrossGenerationProbability.GetHashCode();
      hash ^= weights_.GetHashCode();
      if (IsWeightEnabled != false) hash ^= IsWeightEnabled.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Gen != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Gen);
      }
      if (CrossGenerationFixed != false) {
        output.WriteRawTag(16);
        output.WriteBool(CrossGenerationFixed);
      }
      if (CrossGenerationProbability != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(CrossGenerationProbability);
      }
      weights_.WriteTo(output, _repeated_weights_codec);
      if (IsWeightEnabled != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsWeightEnabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Gen != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Gen);
      }
      if (CrossGenerationFixed != false) {
        size += 1 + 1;
      }
      if (CrossGenerationProbability != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CrossGenerationProbability);
      }
      size += weights_.CalculateSize(_repeated_weights_codec);
      if (IsWeightEnabled != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CrossGenerationConfig other) {
      if (other == null) {
        return;
      }
      if (other.Gen != 0) {
        Gen = other.Gen;
      }
      if (other.CrossGenerationFixed != false) {
        CrossGenerationFixed = other.CrossGenerationFixed;
      }
      if (other.CrossGenerationProbability != 0L) {
        CrossGenerationProbability = other.CrossGenerationProbability;
      }
      weights_.Add(other.weights_);
      if (other.IsWeightEnabled != false) {
        IsWeightEnabled = other.IsWeightEnabled;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Gen = input.ReadInt32();
            break;
          }
          case 16: {
            CrossGenerationFixed = input.ReadBool();
            break;
          }
          case 24: {
            CrossGenerationProbability = input.ReadInt64();
            break;
          }
          case 34:
          case 32: {
            weights_.AddEntriesFrom(input, _repeated_weights_codec);
            break;
          }
          case 40: {
            IsWeightEnabled = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ExternalInfos : pb::IMessage<ExternalInfos> {
    private static readonly pb::MessageParser<ExternalInfos> _parser = new pb::MessageParser<ExternalInfos>(() => new ExternalInfos());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExternalInfos> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExternalInfos() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExternalInfos(ExternalInfos other) : this() {
      value_ = other.value_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExternalInfos Clone() {
      return new ExternalInfos(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private static readonly pbc::MapField<string, string>.Codec _map_value_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 10);
    private readonly pbc::MapField<string, string> value_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Value {
      get { return value_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExternalInfos);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExternalInfos other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Value.Equals(other.Value)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      value_.WriteTo(output, _map_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += value_.CalculateSize(_map_value_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExternalInfos other) {
      if (other == null) {
        return;
      }
      value_.Add(other.value_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            value_.AddEntriesFrom(input, _map_value_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AdoptInput : pb::IMessage<AdoptInput> {
    private static readonly pb::MessageParser<AdoptInput> _parser = new pb::MessageParser<AdoptInput>(() => new AdoptInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AdoptInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdoptInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdoptInput(AdoptInput other) : this() {
      parent_ = other.parent_;
      amount_ = other.amount_;
      domain_ = other.domain_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdoptInput Clone() {
      return new AdoptInput(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// parent symbol
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "domain" field.</summary>
    public const int DomainFieldNumber = 3;
    private string domain_ = "";
    /// <summary>
    /// for point contract
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Domain {
      get { return domain_; }
      set {
        domain_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AdoptInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AdoptInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (Amount != other.Amount) return false;
      if (Domain != other.Domain) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (Domain.Length != 0) hash ^= Domain.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (Amount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Amount);
      }
      if (Domain.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Domain);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (Domain.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Domain);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AdoptInput other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      if (other.Domain.Length != 0) {
        Domain = other.Domain;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 16: {
            Amount = input.ReadInt64();
            break;
          }
          case 26: {
            Domain = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AdoptInfo : pb::IMessage<AdoptInfo> {
    private static readonly pb::MessageParser<AdoptInfo> _parser = new pb::MessageParser<AdoptInfo>(() => new AdoptInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AdoptInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdoptInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdoptInfo(AdoptInfo other) : this() {
      adoptId_ = other.adoptId_ != null ? other.adoptId_.Clone() : null;
      parent_ = other.parent_;
      parentGen_ = other.parentGen_;
      inputAmount_ = other.inputAmount_;
      outputAmount_ = other.outputAmount_;
      parentAttributes_ = other.parentAttributes_ != null ? other.parentAttributes_.Clone() : null;
      imageCount_ = other.imageCount_;
      blockHeight_ = other.blockHeight_;
      symbol_ = other.symbol_;
      tokenName_ = other.tokenName_;
      attributes_ = other.attributes_ != null ? other.attributes_.Clone() : null;
      gen_ = other.gen_;
      adopter_ = other.adopter_ != null ? other.adopter_.Clone() : null;
      isConfirmed_ = other.isConfirmed_;
      isRerolled_ = other.isRerolled_;
      isUpdated_ = other.isUpdated_;
      level_ = other.level_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdoptInfo Clone() {
      return new AdoptInfo(this);
    }

    /// <summary>Field number for the "adopt_id" field.</summary>
    public const int AdoptIdFieldNumber = 1;
    private global::AElf.Types.Hash adoptId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash AdoptId {
      get { return adoptId_; }
      set {
        adoptId_ = value;
      }
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 2;
    private string parent_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "parent_gen" field.</summary>
    public const int ParentGenFieldNumber = 3;
    private int parentGen_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ParentGen {
      get { return parentGen_; }
      set {
        parentGen_ = value;
      }
    }

    /// <summary>Field number for the "input_amount" field.</summary>
    public const int InputAmountFieldNumber = 4;
    private long inputAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long InputAmount {
      get { return inputAmount_; }
      set {
        inputAmount_ = value;
      }
    }

    /// <summary>Field number for the "output_amount" field.</summary>
    public const int OutputAmountFieldNumber = 5;
    private long outputAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long OutputAmount {
      get { return outputAmount_; }
      set {
        outputAmount_ = value;
      }
    }

    /// <summary>Field number for the "parent_attributes" field.</summary>
    public const int ParentAttributesFieldNumber = 6;
    private global::Schrodinger.Attributes parentAttributes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Schrodinger.Attributes ParentAttributes {
      get { return parentAttributes_; }
      set {
        parentAttributes_ = value;
      }
    }

    /// <summary>Field number for the "image_count" field.</summary>
    public const int ImageCountFieldNumber = 7;
    private long imageCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ImageCount {
      get { return imageCount_; }
      set {
        imageCount_ = value;
      }
    }

    /// <summary>Field number for the "block_height" field.</summary>
    public const int BlockHeightFieldNumber = 8;
    private long blockHeight_;
    /// <summary>
    /// adopt block height
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BlockHeight {
      get { return blockHeight_; }
      set {
        blockHeight_ = value;
      }
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 9;
    private string symbol_ = "";
    /// <summary>
    /// generated symbol   
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "token_name" field.</summary>
    public const int TokenNameFieldNumber = 10;
    private string tokenName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TokenName {
      get { return tokenName_; }
      set {
        tokenName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "attributes" field.</summary>
    public const int AttributesFieldNumber = 11;
    private global::Schrodinger.Attributes attributes_;
    /// <summary>
    /// generated attributes
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Schrodinger.Attributes Attributes {
      get { return attributes_; }
      set {
        attributes_ = value;
      }
    }

    /// <summary>Field number for the "gen" field.</summary>
    public const int GenFieldNumber = 12;
    private int gen_;
    /// <summary>
    /// generated gen
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Gen {
      get { return gen_; }
      set {
        gen_ = value;
      }
    }

    /// <summary>Field number for the "adopter" field.</summary>
    public const int AdopterFieldNumber = 13;
    private global::AElf.Types.Address adopter_;
    /// <summary>
    /// sender
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Adopter {
      get { return adopter_; }
      set {
        adopter_ = value;
      }
    }

    /// <summary>Field number for the "is_confirmed" field.</summary>
    public const int IsConfirmedFieldNumber = 14;
    private bool isConfirmed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsConfirmed {
      get { return isConfirmed_; }
      set {
        isConfirmed_ = value;
      }
    }

    /// <summary>Field number for the "is_rerolled" field.</summary>
    public const int IsRerolledFieldNumber = 15;
    private bool isRerolled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsRerolled {
      get { return isRerolled_; }
      set {
        isRerolled_ = value;
      }
    }

    /// <summary>Field number for the "is_updated" field.</summary>
    public const int IsUpdatedFieldNumber = 16;
    private bool isUpdated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsUpdated {
      get { return isUpdated_; }
      set {
        isUpdated_ = value;
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 17;
    private long level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AdoptInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AdoptInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AdoptId, other.AdoptId)) return false;
      if (Parent != other.Parent) return false;
      if (ParentGen != other.ParentGen) return false;
      if (InputAmount != other.InputAmount) return false;
      if (OutputAmount != other.OutputAmount) return false;
      if (!object.Equals(ParentAttributes, other.ParentAttributes)) return false;
      if (ImageCount != other.ImageCount) return false;
      if (BlockHeight != other.BlockHeight) return false;
      if (Symbol != other.Symbol) return false;
      if (TokenName != other.TokenName) return false;
      if (!object.Equals(Attributes, other.Attributes)) return false;
      if (Gen != other.Gen) return false;
      if (!object.Equals(Adopter, other.Adopter)) return false;
      if (IsConfirmed != other.IsConfirmed) return false;
      if (IsRerolled != other.IsRerolled) return false;
      if (IsUpdated != other.IsUpdated) return false;
      if (Level != other.Level) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (adoptId_ != null) hash ^= AdoptId.GetHashCode();
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (ParentGen != 0) hash ^= ParentGen.GetHashCode();
      if (InputAmount != 0L) hash ^= InputAmount.GetHashCode();
      if (OutputAmount != 0L) hash ^= OutputAmount.GetHashCode();
      if (parentAttributes_ != null) hash ^= ParentAttributes.GetHashCode();
      if (ImageCount != 0L) hash ^= ImageCount.GetHashCode();
      if (BlockHeight != 0L) hash ^= BlockHeight.GetHashCode();
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      if (TokenName.Length != 0) hash ^= TokenName.GetHashCode();
      if (attributes_ != null) hash ^= Attributes.GetHashCode();
      if (Gen != 0) hash ^= Gen.GetHashCode();
      if (adopter_ != null) hash ^= Adopter.GetHashCode();
      if (IsConfirmed != false) hash ^= IsConfirmed.GetHashCode();
      if (IsRerolled != false) hash ^= IsRerolled.GetHashCode();
      if (IsUpdated != false) hash ^= IsUpdated.GetHashCode();
      if (Level != 0L) hash ^= Level.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (adoptId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AdoptId);
      }
      if (Parent.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Parent);
      }
      if (ParentGen != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ParentGen);
      }
      if (InputAmount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(InputAmount);
      }
      if (OutputAmount != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(OutputAmount);
      }
      if (parentAttributes_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ParentAttributes);
      }
      if (ImageCount != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(ImageCount);
      }
      if (BlockHeight != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(BlockHeight);
      }
      if (Symbol.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Symbol);
      }
      if (TokenName.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(TokenName);
      }
      if (attributes_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Attributes);
      }
      if (Gen != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Gen);
      }
      if (adopter_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Adopter);
      }
      if (IsConfirmed != false) {
        output.WriteRawTag(112);
        output.WriteBool(IsConfirmed);
      }
      if (IsRerolled != false) {
        output.WriteRawTag(120);
        output.WriteBool(IsRerolled);
      }
      if (IsUpdated != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(IsUpdated);
      }
      if (Level != 0L) {
        output.WriteRawTag(136, 1);
        output.WriteInt64(Level);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (adoptId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AdoptId);
      }
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (ParentGen != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ParentGen);
      }
      if (InputAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(InputAmount);
      }
      if (OutputAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OutputAmount);
      }
      if (parentAttributes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ParentAttributes);
      }
      if (ImageCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ImageCount);
      }
      if (BlockHeight != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BlockHeight);
      }
      if (Symbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (TokenName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TokenName);
      }
      if (attributes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Attributes);
      }
      if (Gen != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Gen);
      }
      if (adopter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Adopter);
      }
      if (IsConfirmed != false) {
        size += 1 + 1;
      }
      if (IsRerolled != false) {
        size += 1 + 1;
      }
      if (IsUpdated != false) {
        size += 2 + 1;
      }
      if (Level != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(Level);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AdoptInfo other) {
      if (other == null) {
        return;
      }
      if (other.adoptId_ != null) {
        if (adoptId_ == null) {
          AdoptId = new global::AElf.Types.Hash();
        }
        AdoptId.MergeFrom(other.AdoptId);
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.ParentGen != 0) {
        ParentGen = other.ParentGen;
      }
      if (other.InputAmount != 0L) {
        InputAmount = other.InputAmount;
      }
      if (other.OutputAmount != 0L) {
        OutputAmount = other.OutputAmount;
      }
      if (other.parentAttributes_ != null) {
        if (parentAttributes_ == null) {
          ParentAttributes = new global::Schrodinger.Attributes();
        }
        ParentAttributes.MergeFrom(other.ParentAttributes);
      }
      if (other.ImageCount != 0L) {
        ImageCount = other.ImageCount;
      }
      if (other.BlockHeight != 0L) {
        BlockHeight = other.BlockHeight;
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      if (other.TokenName.Length != 0) {
        TokenName = other.TokenName;
      }
      if (other.attributes_ != null) {
        if (attributes_ == null) {
          Attributes = new global::Schrodinger.Attributes();
        }
        Attributes.MergeFrom(other.Attributes);
      }
      if (other.Gen != 0) {
        Gen = other.Gen;
      }
      if (other.adopter_ != null) {
        if (adopter_ == null) {
          Adopter = new global::AElf.Types.Address();
        }
        Adopter.MergeFrom(other.Adopter);
      }
      if (other.IsConfirmed != false) {
        IsConfirmed = other.IsConfirmed;
      }
      if (other.IsRerolled != false) {
        IsRerolled = other.IsRerolled;
      }
      if (other.IsUpdated != false) {
        IsUpdated = other.IsUpdated;
      }
      if (other.Level != 0L) {
        Level = other.Level;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (adoptId_ == null) {
              AdoptId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(AdoptId);
            break;
          }
          case 18: {
            Parent = input.ReadString();
            break;
          }
          case 24: {
            ParentGen = input.ReadInt32();
            break;
          }
          case 32: {
            InputAmount = input.ReadInt64();
            break;
          }
          case 40: {
            OutputAmount = input.ReadInt64();
            break;
          }
          case 50: {
            if (parentAttributes_ == null) {
              ParentAttributes = new global::Schrodinger.Attributes();
            }
            input.ReadMessage(ParentAttributes);
            break;
          }
          case 56: {
            ImageCount = input.ReadInt64();
            break;
          }
          case 64: {
            BlockHeight = input.ReadInt64();
            break;
          }
          case 74: {
            Symbol = input.ReadString();
            break;
          }
          case 82: {
            TokenName = input.ReadString();
            break;
          }
          case 90: {
            if (attributes_ == null) {
              Attributes = new global::Schrodinger.Attributes();
            }
            input.ReadMessage(Attributes);
            break;
          }
          case 96: {
            Gen = input.ReadInt32();
            break;
          }
          case 106: {
            if (adopter_ == null) {
              Adopter = new global::AElf.Types.Address();
            }
            input.ReadMessage(Adopter);
            break;
          }
          case 112: {
            IsConfirmed = input.ReadBool();
            break;
          }
          case 120: {
            IsRerolled = input.ReadBool();
            break;
          }
          case 128: {
            IsUpdated = input.ReadBool();
            break;
          }
          case 136: {
            Level = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Attributes : pb::IMessage<Attributes> {
    private static readonly pb::MessageParser<Attributes> _parser = new pb::MessageParser<Attributes>(() => new Attributes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Attributes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Attributes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Attributes(Attributes other) : this() {
      data_ = other.data_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Attributes Clone() {
      return new Attributes(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Schrodinger.Attribute> _repeated_data_codec
        = pb::FieldCodec.ForMessage(10, global::Schrodinger.Attribute.Parser);
    private readonly pbc::RepeatedField<global::Schrodinger.Attribute> data_ = new pbc::RepeatedField<global::Schrodinger.Attribute>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Schrodinger.Attribute> Data {
      get { return data_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Attributes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Attributes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!data_.Equals(other.data_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= data_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      data_.WriteTo(output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += data_.CalculateSize(_repeated_data_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Attributes other) {
      if (other == null) {
        return;
      }
      data_.Add(other.data_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            data_.AddEntriesFrom(input, _repeated_data_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Attribute : pb::IMessage<Attribute> {
    private static readonly pb::MessageParser<Attribute> _parser = new pb::MessageParser<Attribute>(() => new Attribute());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Attribute> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Attribute() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Attribute(Attribute other) : this() {
      traitType_ = other.traitType_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Attribute Clone() {
      return new Attribute(this);
    }

    /// <summary>Field number for the "trait_type" field.</summary>
    public const int TraitTypeFieldNumber = 1;
    private string traitType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TraitType {
      get { return traitType_; }
      set {
        traitType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Attribute);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Attribute other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TraitType != other.TraitType) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TraitType.Length != 0) hash ^= TraitType.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TraitType.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TraitType);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TraitType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TraitType);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Attribute other) {
      if (other == null) {
        return;
      }
      if (other.TraitType.Length != 0) {
        TraitType = other.TraitType;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TraitType = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ConfirmInput : pb::IMessage<ConfirmInput> {
    private static readonly pb::MessageParser<ConfirmInput> _parser = new pb::MessageParser<ConfirmInput>(() => new ConfirmInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConfirmInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfirmInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfirmInput(ConfirmInput other) : this() {
      adoptId_ = other.adoptId_ != null ? other.adoptId_.Clone() : null;
      image_ = other.image_;
      imageUri_ = other.imageUri_;
      signature_ = other.signature_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfirmInput Clone() {
      return new ConfirmInput(this);
    }

    /// <summary>Field number for the "adopt_id" field.</summary>
    public const int AdoptIdFieldNumber = 1;
    private global::AElf.Types.Hash adoptId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash AdoptId {
      get { return adoptId_; }
      set {
        adoptId_ = value;
      }
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int ImageFieldNumber = 2;
    private string image_ = "";
    /// <summary>
    /// base64
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Image {
      get { return image_; }
      set {
        image_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "image_uri" field.</summary>
    public const int ImageUriFieldNumber = 3;
    private string imageUri_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImageUri {
      get { return imageUri_; }
      set {
        imageUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "signature" field.</summary>
    public const int SignatureFieldNumber = 10000;
    private pb::ByteString signature_ = pb::ByteString.Empty;
    /// <summary>
    /// signed by server
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Signature {
      get { return signature_; }
      set {
        signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConfirmInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConfirmInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AdoptId, other.AdoptId)) return false;
      if (Image != other.Image) return false;
      if (ImageUri != other.ImageUri) return false;
      if (Signature != other.Signature) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (adoptId_ != null) hash ^= AdoptId.GetHashCode();
      if (Image.Length != 0) hash ^= Image.GetHashCode();
      if (ImageUri.Length != 0) hash ^= ImageUri.GetHashCode();
      if (Signature.Length != 0) hash ^= Signature.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (adoptId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AdoptId);
      }
      if (Image.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Image);
      }
      if (ImageUri.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ImageUri);
      }
      if (Signature.Length != 0) {
        output.WriteRawTag(130, 241, 4);
        output.WriteBytes(Signature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (adoptId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AdoptId);
      }
      if (Image.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Image);
      }
      if (ImageUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageUri);
      }
      if (Signature.Length != 0) {
        size += 3 + pb::CodedOutputStream.ComputeBytesSize(Signature);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConfirmInput other) {
      if (other == null) {
        return;
      }
      if (other.adoptId_ != null) {
        if (adoptId_ == null) {
          AdoptId = new global::AElf.Types.Hash();
        }
        AdoptId.MergeFrom(other.AdoptId);
      }
      if (other.Image.Length != 0) {
        Image = other.Image;
      }
      if (other.ImageUri.Length != 0) {
        ImageUri = other.ImageUri;
      }
      if (other.Signature.Length != 0) {
        Signature = other.Signature;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (adoptId_ == null) {
              AdoptId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(AdoptId);
            break;
          }
          case 18: {
            Image = input.ReadString();
            break;
          }
          case 26: {
            ImageUri = input.ReadString();
            break;
          }
          case 80002: {
            Signature = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RerollInput : pb::IMessage<RerollInput> {
    private static readonly pb::MessageParser<RerollInput> _parser = new pb::MessageParser<RerollInput>(() => new RerollInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RerollInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RerollInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RerollInput(RerollInput other) : this() {
      symbol_ = other.symbol_;
      amount_ = other.amount_;
      domain_ = other.domain_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RerollInput Clone() {
      return new RerollInput(this);
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 1;
    private string symbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "domain" field.</summary>
    public const int DomainFieldNumber = 3;
    private string domain_ = "";
    /// <summary>
    /// for point contract
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Domain {
      get { return domain_; }
      set {
        domain_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RerollInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RerollInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Symbol != other.Symbol) return false;
      if (Amount != other.Amount) return false;
      if (Domain != other.Domain) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (Domain.Length != 0) hash ^= Domain.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Symbol.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Symbol);
      }
      if (Amount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Amount);
      }
      if (Domain.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Domain);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Symbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (Domain.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Domain);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RerollInput other) {
      if (other == null) {
        return;
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      if (other.Domain.Length != 0) {
        Domain = other.Domain;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Symbol = input.ReadString();
            break;
          }
          case 16: {
            Amount = input.ReadInt64();
            break;
          }
          case 26: {
            Domain = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AdoptMaxGenInput : pb::IMessage<AdoptMaxGenInput> {
    private static readonly pb::MessageParser<AdoptMaxGenInput> _parser = new pb::MessageParser<AdoptMaxGenInput>(() => new AdoptMaxGenInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AdoptMaxGenInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdoptMaxGenInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdoptMaxGenInput(AdoptMaxGenInput other) : this() {
      tick_ = other.tick_;
      amount_ = other.amount_;
      domain_ = other.domain_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdoptMaxGenInput Clone() {
      return new AdoptMaxGenInput(this);
    }

    /// <summary>Field number for the "tick" field.</summary>
    public const int TickFieldNumber = 1;
    private string tick_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tick {
      get { return tick_; }
      set {
        tick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "domain" field.</summary>
    public const int DomainFieldNumber = 3;
    private string domain_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Domain {
      get { return domain_; }
      set {
        domain_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AdoptMaxGenInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AdoptMaxGenInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tick != other.Tick) return false;
      if (Amount != other.Amount) return false;
      if (Domain != other.Domain) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Tick.Length != 0) hash ^= Tick.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (Domain.Length != 0) hash ^= Domain.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Tick.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Tick);
      }
      if (Amount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Amount);
      }
      if (Domain.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Domain);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Tick.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tick);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (Domain.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Domain);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AdoptMaxGenInput other) {
      if (other == null) {
        return;
      }
      if (other.Tick.Length != 0) {
        Tick = other.Tick;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      if (other.Domain.Length != 0) {
        Domain = other.Domain;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Tick = input.ReadString();
            break;
          }
          case 16: {
            Amount = input.ReadInt64();
            break;
          }
          case 26: {
            Domain = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SetAttributeInput : pb::IMessage<SetAttributeInput> {
    private static readonly pb::MessageParser<SetAttributeInput> _parser = new pb::MessageParser<SetAttributeInput>(() => new SetAttributeInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetAttributeInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetAttributeInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetAttributeInput(SetAttributeInput other) : this() {
      tick_ = other.tick_;
      attributeSet_ = other.attributeSet_ != null ? other.attributeSet_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetAttributeInput Clone() {
      return new SetAttributeInput(this);
    }

    /// <summary>Field number for the "tick" field.</summary>
    public const int TickFieldNumber = 1;
    private string tick_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tick {
      get { return tick_; }
      set {
        tick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "attribute_set" field.</summary>
    public const int AttributeSetFieldNumber = 2;
    private global::Schrodinger.AttributeSet attributeSet_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Schrodinger.AttributeSet AttributeSet {
      get { return attributeSet_; }
      set {
        attributeSet_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetAttributeInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetAttributeInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tick != other.Tick) return false;
      if (!object.Equals(AttributeSet, other.AttributeSet)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Tick.Length != 0) hash ^= Tick.GetHashCode();
      if (attributeSet_ != null) hash ^= AttributeSet.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Tick.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Tick);
      }
      if (attributeSet_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AttributeSet);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Tick.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tick);
      }
      if (attributeSet_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AttributeSet);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetAttributeInput other) {
      if (other == null) {
        return;
      }
      if (other.Tick.Length != 0) {
        Tick = other.Tick;
      }
      if (other.attributeSet_ != null) {
        if (attributeSet_ == null) {
          AttributeSet = new global::Schrodinger.AttributeSet();
        }
        AttributeSet.MergeFrom(other.AttributeSet);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Tick = input.ReadString();
            break;
          }
          case 18: {
            if (attributeSet_ == null) {
              AttributeSet = new global::Schrodinger.AttributeSet();
            }
            input.ReadMessage(AttributeSet);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SetAttributesPerGenInput : pb::IMessage<SetAttributesPerGenInput> {
    private static readonly pb::MessageParser<SetAttributesPerGenInput> _parser = new pb::MessageParser<SetAttributesPerGenInput>(() => new SetAttributesPerGenInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetAttributesPerGenInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetAttributesPerGenInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetAttributesPerGenInput(SetAttributesPerGenInput other) : this() {
      tick_ = other.tick_;
      attributesPerGen_ = other.attributesPerGen_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetAttributesPerGenInput Clone() {
      return new SetAttributesPerGenInput(this);
    }

    /// <summary>Field number for the "tick" field.</summary>
    public const int TickFieldNumber = 1;
    private string tick_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tick {
      get { return tick_; }
      set {
        tick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "attributes_per_gen" field.</summary>
    public const int AttributesPerGenFieldNumber = 2;
    private int attributesPerGen_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AttributesPerGen {
      get { return attributesPerGen_; }
      set {
        attributesPerGen_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetAttributesPerGenInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetAttributesPerGenInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tick != other.Tick) return false;
      if (AttributesPerGen != other.AttributesPerGen) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Tick.Length != 0) hash ^= Tick.GetHashCode();
      if (AttributesPerGen != 0) hash ^= AttributesPerGen.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Tick.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Tick);
      }
      if (AttributesPerGen != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(AttributesPerGen);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Tick.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tick);
      }
      if (AttributesPerGen != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AttributesPerGen);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetAttributesPerGenInput other) {
      if (other == null) {
        return;
      }
      if (other.Tick.Length != 0) {
        Tick = other.Tick;
      }
      if (other.AttributesPerGen != 0) {
        AttributesPerGen = other.AttributesPerGen;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Tick = input.ReadString();
            break;
          }
          case 16: {
            AttributesPerGen = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StringList : pb::IMessage<StringList> {
    private static readonly pb::MessageParser<StringList> _parser = new pb::MessageParser<StringList>(() => new StringList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StringList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StringList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StringList(StringList other) : this() {
      data_ = other.data_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StringList Clone() {
      return new StringList(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_data_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> data_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Data {
      get { return data_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StringList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StringList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!data_.Equals(other.data_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= data_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      data_.WriteTo(output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += data_.CalculateSize(_repeated_data_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StringList other) {
      if (other == null) {
        return;
      }
      data_.Add(other.data_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            data_.AddEntriesFrom(input, _repeated_data_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SetMaxGenerationInput : pb::IMessage<SetMaxGenerationInput> {
    private static readonly pb::MessageParser<SetMaxGenerationInput> _parser = new pb::MessageParser<SetMaxGenerationInput>(() => new SetMaxGenerationInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetMaxGenerationInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetMaxGenerationInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetMaxGenerationInput(SetMaxGenerationInput other) : this() {
      tick_ = other.tick_;
      gen_ = other.gen_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetMaxGenerationInput Clone() {
      return new SetMaxGenerationInput(this);
    }

    /// <summary>Field number for the "tick" field.</summary>
    public const int TickFieldNumber = 1;
    private string tick_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tick {
      get { return tick_; }
      set {
        tick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gen" field.</summary>
    public const int GenFieldNumber = 2;
    private int gen_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Gen {
      get { return gen_; }
      set {
        gen_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetMaxGenerationInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetMaxGenerationInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tick != other.Tick) return false;
      if (Gen != other.Gen) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Tick.Length != 0) hash ^= Tick.GetHashCode();
      if (Gen != 0) hash ^= Gen.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Tick.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Tick);
      }
      if (Gen != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Gen);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Tick.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tick);
      }
      if (Gen != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Gen);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetMaxGenerationInput other) {
      if (other == null) {
        return;
      }
      if (other.Tick.Length != 0) {
        Tick = other.Tick;
      }
      if (other.Gen != 0) {
        Gen = other.Gen;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Tick = input.ReadString();
            break;
          }
          case 16: {
            Gen = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SetRatesInput : pb::IMessage<SetRatesInput> {
    private static readonly pb::MessageParser<SetRatesInput> _parser = new pb::MessageParser<SetRatesInput>(() => new SetRatesInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetRatesInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetRatesInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetRatesInput(SetRatesInput other) : this() {
      tick_ = other.tick_;
      lossRate_ = other.lossRate_;
      commissionRate_ = other.commissionRate_;
      maxGenLossRate_ = other.maxGenLossRate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetRatesInput Clone() {
      return new SetRatesInput(this);
    }

    /// <summary>Field number for the "tick" field.</summary>
    public const int TickFieldNumber = 1;
    private string tick_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tick {
      get { return tick_; }
      set {
        tick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "loss_rate" field.</summary>
    public const int LossRateFieldNumber = 2;
    private long lossRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LossRate {
      get { return lossRate_; }
      set {
        lossRate_ = value;
      }
    }

    /// <summary>Field number for the "commission_rate" field.</summary>
    public const int CommissionRateFieldNumber = 3;
    private long commissionRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CommissionRate {
      get { return commissionRate_; }
      set {
        commissionRate_ = value;
      }
    }

    /// <summary>Field number for the "max_gen_loss_rate" field.</summary>
    public const int MaxGenLossRateFieldNumber = 4;
    private long maxGenLossRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MaxGenLossRate {
      get { return maxGenLossRate_; }
      set {
        maxGenLossRate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetRatesInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetRatesInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tick != other.Tick) return false;
      if (LossRate != other.LossRate) return false;
      if (CommissionRate != other.CommissionRate) return false;
      if (MaxGenLossRate != other.MaxGenLossRate) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Tick.Length != 0) hash ^= Tick.GetHashCode();
      if (LossRate != 0L) hash ^= LossRate.GetHashCode();
      if (CommissionRate != 0L) hash ^= CommissionRate.GetHashCode();
      if (MaxGenLossRate != 0L) hash ^= MaxGenLossRate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Tick.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Tick);
      }
      if (LossRate != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(LossRate);
      }
      if (CommissionRate != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(CommissionRate);
      }
      if (MaxGenLossRate != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(MaxGenLossRate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Tick.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tick);
      }
      if (LossRate != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LossRate);
      }
      if (CommissionRate != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CommissionRate);
      }
      if (MaxGenLossRate != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxGenLossRate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetRatesInput other) {
      if (other == null) {
        return;
      }
      if (other.Tick.Length != 0) {
        Tick = other.Tick;
      }
      if (other.LossRate != 0L) {
        LossRate = other.LossRate;
      }
      if (other.CommissionRate != 0L) {
        CommissionRate = other.CommissionRate;
      }
      if (other.MaxGenLossRate != 0L) {
        MaxGenLossRate = other.MaxGenLossRate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Tick = input.ReadString();
            break;
          }
          case 16: {
            LossRate = input.ReadInt64();
            break;
          }
          case 24: {
            CommissionRate = input.ReadInt64();
            break;
          }
          case 32: {
            MaxGenLossRate = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SetRecipientInput : pb::IMessage<SetRecipientInput> {
    private static readonly pb::MessageParser<SetRecipientInput> _parser = new pb::MessageParser<SetRecipientInput>(() => new SetRecipientInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetRecipientInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetRecipientInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetRecipientInput(SetRecipientInput other) : this() {
      tick_ = other.tick_;
      recipient_ = other.recipient_ != null ? other.recipient_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetRecipientInput Clone() {
      return new SetRecipientInput(this);
    }

    /// <summary>Field number for the "tick" field.</summary>
    public const int TickFieldNumber = 1;
    private string tick_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tick {
      get { return tick_; }
      set {
        tick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "recipient" field.</summary>
    public const int RecipientFieldNumber = 2;
    private global::AElf.Types.Address recipient_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Recipient {
      get { return recipient_; }
      set {
        recipient_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetRecipientInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetRecipientInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tick != other.Tick) return false;
      if (!object.Equals(Recipient, other.Recipient)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Tick.Length != 0) hash ^= Tick.GetHashCode();
      if (recipient_ != null) hash ^= Recipient.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Tick.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Tick);
      }
      if (recipient_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Recipient);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Tick.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tick);
      }
      if (recipient_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Recipient);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetRecipientInput other) {
      if (other == null) {
        return;
      }
      if (other.Tick.Length != 0) {
        Tick = other.Tick;
      }
      if (other.recipient_ != null) {
        if (recipient_ == null) {
          Recipient = new global::AElf.Types.Address();
        }
        Recipient.MergeFrom(other.Recipient);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Tick = input.ReadString();
            break;
          }
          case 18: {
            if (recipient_ == null) {
              Recipient = new global::AElf.Types.Address();
            }
            input.ReadMessage(Recipient);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SetImageCountInput : pb::IMessage<SetImageCountInput> {
    private static readonly pb::MessageParser<SetImageCountInput> _parser = new pb::MessageParser<SetImageCountInput>(() => new SetImageCountInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetImageCountInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetImageCountInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetImageCountInput(SetImageCountInput other) : this() {
      tick_ = other.tick_;
      imageCount_ = other.imageCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetImageCountInput Clone() {
      return new SetImageCountInput(this);
    }

    /// <summary>Field number for the "tick" field.</summary>
    public const int TickFieldNumber = 1;
    private string tick_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tick {
      get { return tick_; }
      set {
        tick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "image_count" field.</summary>
    public const int ImageCountFieldNumber = 2;
    private int imageCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ImageCount {
      get { return imageCount_; }
      set {
        imageCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetImageCountInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetImageCountInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tick != other.Tick) return false;
      if (ImageCount != other.ImageCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Tick.Length != 0) hash ^= Tick.GetHashCode();
      if (ImageCount != 0) hash ^= ImageCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Tick.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Tick);
      }
      if (ImageCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ImageCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Tick.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tick);
      }
      if (ImageCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ImageCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetImageCountInput other) {
      if (other == null) {
        return;
      }
      if (other.Tick.Length != 0) {
        Tick = other.Tick;
      }
      if (other.ImageCount != 0) {
        ImageCount = other.ImageCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Tick = input.ReadString();
            break;
          }
          case 16: {
            ImageCount = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SetInscriptionAdminInput : pb::IMessage<SetInscriptionAdminInput> {
    private static readonly pb::MessageParser<SetInscriptionAdminInput> _parser = new pb::MessageParser<SetInscriptionAdminInput>(() => new SetInscriptionAdminInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetInscriptionAdminInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetInscriptionAdminInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetInscriptionAdminInput(SetInscriptionAdminInput other) : this() {
      tick_ = other.tick_;
      admin_ = other.admin_ != null ? other.admin_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetInscriptionAdminInput Clone() {
      return new SetInscriptionAdminInput(this);
    }

    /// <summary>Field number for the "tick" field.</summary>
    public const int TickFieldNumber = 1;
    private string tick_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tick {
      get { return tick_; }
      set {
        tick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "admin" field.</summary>
    public const int AdminFieldNumber = 2;
    private global::AElf.Types.Address admin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Admin {
      get { return admin_; }
      set {
        admin_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetInscriptionAdminInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetInscriptionAdminInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tick != other.Tick) return false;
      if (!object.Equals(Admin, other.Admin)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Tick.Length != 0) hash ^= Tick.GetHashCode();
      if (admin_ != null) hash ^= Admin.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Tick.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Tick);
      }
      if (admin_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Admin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Tick.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tick);
      }
      if (admin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Admin);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetInscriptionAdminInput other) {
      if (other == null) {
        return;
      }
      if (other.Tick.Length != 0) {
        Tick = other.Tick;
      }
      if (other.admin_ != null) {
        if (admin_ == null) {
          Admin = new global::AElf.Types.Address();
        }
        Admin.MergeFrom(other.Admin);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Tick = input.ReadString();
            break;
          }
          case 18: {
            if (admin_ == null) {
              Admin = new global::AElf.Types.Address();
            }
            input.ReadMessage(Admin);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SetCrossGenerationConfigInput : pb::IMessage<SetCrossGenerationConfigInput> {
    private static readonly pb::MessageParser<SetCrossGenerationConfigInput> _parser = new pb::MessageParser<SetCrossGenerationConfigInput>(() => new SetCrossGenerationConfigInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetCrossGenerationConfigInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetCrossGenerationConfigInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetCrossGenerationConfigInput(SetCrossGenerationConfigInput other) : this() {
      tick_ = other.tick_;
      config_ = other.config_ != null ? other.config_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetCrossGenerationConfigInput Clone() {
      return new SetCrossGenerationConfigInput(this);
    }

    /// <summary>Field number for the "tick" field.</summary>
    public const int TickFieldNumber = 1;
    private string tick_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tick {
      get { return tick_; }
      set {
        tick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 2;
    private global::Schrodinger.CrossGenerationConfig config_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Schrodinger.CrossGenerationConfig Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetCrossGenerationConfigInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetCrossGenerationConfigInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tick != other.Tick) return false;
      if (!object.Equals(Config, other.Config)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Tick.Length != 0) hash ^= Tick.GetHashCode();
      if (config_ != null) hash ^= Config.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Tick.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Tick);
      }
      if (config_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Tick.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tick);
      }
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetCrossGenerationConfigInput other) {
      if (other == null) {
        return;
      }
      if (other.Tick.Length != 0) {
        Tick = other.Tick;
      }
      if (other.config_ != null) {
        if (config_ == null) {
          Config = new global::Schrodinger.CrossGenerationConfig();
        }
        Config.MergeFrom(other.Config);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Tick = input.ReadString();
            break;
          }
          case 18: {
            if (config_ == null) {
              Config = new global::Schrodinger.CrossGenerationConfig();
            }
            input.ReadMessage(Config);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAttributeValuesInput : pb::IMessage<GetAttributeValuesInput> {
    private static readonly pb::MessageParser<GetAttributeValuesInput> _parser = new pb::MessageParser<GetAttributeValuesInput>(() => new GetAttributeValuesInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAttributeValuesInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAttributeValuesInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAttributeValuesInput(GetAttributeValuesInput other) : this() {
      tick_ = other.tick_;
      traitType_ = other.traitType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAttributeValuesInput Clone() {
      return new GetAttributeValuesInput(this);
    }

    /// <summary>Field number for the "tick" field.</summary>
    public const int TickFieldNumber = 1;
    private string tick_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tick {
      get { return tick_; }
      set {
        tick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "trait_type" field.</summary>
    public const int TraitTypeFieldNumber = 2;
    private string traitType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TraitType {
      get { return traitType_; }
      set {
        traitType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAttributeValuesInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAttributeValuesInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tick != other.Tick) return false;
      if (TraitType != other.TraitType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Tick.Length != 0) hash ^= Tick.GetHashCode();
      if (TraitType.Length != 0) hash ^= TraitType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Tick.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Tick);
      }
      if (TraitType.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TraitType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Tick.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tick);
      }
      if (TraitType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TraitType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAttributeValuesInput other) {
      if (other == null) {
        return;
      }
      if (other.Tick.Length != 0) {
        Tick = other.Tick;
      }
      if (other.TraitType.Length != 0) {
        TraitType = other.TraitType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Tick = input.ReadString();
            break;
          }
          case 18: {
            TraitType = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SetPointsProportionListInput : pb::IMessage<SetPointsProportionListInput> {
    private static readonly pb::MessageParser<SetPointsProportionListInput> _parser = new pb::MessageParser<SetPointsProportionListInput>(() => new SetPointsProportionListInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetPointsProportionListInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetPointsProportionListInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetPointsProportionListInput(SetPointsProportionListInput other) : this() {
      data_ = other.data_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetPointsProportionListInput Clone() {
      return new SetPointsProportionListInput(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Schrodinger.PointsProportion> _repeated_data_codec
        = pb::FieldCodec.ForMessage(10, global::Schrodinger.PointsProportion.Parser);
    private readonly pbc::RepeatedField<global::Schrodinger.PointsProportion> data_ = new pbc::RepeatedField<global::Schrodinger.PointsProportion>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Schrodinger.PointsProportion> Data {
      get { return data_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetPointsProportionListInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetPointsProportionListInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!data_.Equals(other.data_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= data_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      data_.WriteTo(output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += data_.CalculateSize(_repeated_data_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetPointsProportionListInput other) {
      if (other == null) {
        return;
      }
      data_.Add(other.data_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            data_.AddEntriesFrom(input, _repeated_data_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PointsProportion : pb::IMessage<PointsProportion> {
    private static readonly pb::MessageParser<PointsProportion> _parser = new pb::MessageParser<PointsProportion>(() => new PointsProportion());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PointsProportion> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PointsProportion() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PointsProportion(PointsProportion other) : this() {
      actionName_ = other.actionName_;
      proportion_ = other.proportion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PointsProportion Clone() {
      return new PointsProportion(this);
    }

    /// <summary>Field number for the "action_name" field.</summary>
    public const int ActionNameFieldNumber = 1;
    private string actionName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActionName {
      get { return actionName_; }
      set {
        actionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "proportion" field.</summary>
    public const int ProportionFieldNumber = 2;
    private long proportion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Proportion {
      get { return proportion_; }
      set {
        proportion_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PointsProportion);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PointsProportion other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ActionName != other.ActionName) return false;
      if (Proportion != other.Proportion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ActionName.Length != 0) hash ^= ActionName.GetHashCode();
      if (Proportion != 0L) hash ^= Proportion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ActionName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ActionName);
      }
      if (Proportion != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Proportion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ActionName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActionName);
      }
      if (Proportion != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Proportion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PointsProportion other) {
      if (other == null) {
        return;
      }
      if (other.ActionName.Length != 0) {
        ActionName = other.ActionName;
      }
      if (other.Proportion != 0L) {
        Proportion = other.Proportion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ActionName = input.ReadString();
            break;
          }
          case 16: {
            Proportion = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BatchSettleInput : pb::IMessage<BatchSettleInput> {
    private static readonly pb::MessageParser<BatchSettleInput> _parser = new pb::MessageParser<BatchSettleInput>(() => new BatchSettleInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BatchSettleInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchSettleInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchSettleInput(BatchSettleInput other) : this() {
      actionName_ = other.actionName_;
      userPointsList_ = other.userPointsList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchSettleInput Clone() {
      return new BatchSettleInput(this);
    }

    /// <summary>Field number for the "action_name" field.</summary>
    public const int ActionNameFieldNumber = 1;
    private string actionName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActionName {
      get { return actionName_; }
      set {
        actionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_points_list" field.</summary>
    public const int UserPointsListFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Schrodinger.UserPoints> _repeated_userPointsList_codec
        = pb::FieldCodec.ForMessage(18, global::Schrodinger.UserPoints.Parser);
    private readonly pbc::RepeatedField<global::Schrodinger.UserPoints> userPointsList_ = new pbc::RepeatedField<global::Schrodinger.UserPoints>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Schrodinger.UserPoints> UserPointsList {
      get { return userPointsList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BatchSettleInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BatchSettleInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ActionName != other.ActionName) return false;
      if(!userPointsList_.Equals(other.userPointsList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ActionName.Length != 0) hash ^= ActionName.GetHashCode();
      hash ^= userPointsList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ActionName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ActionName);
      }
      userPointsList_.WriteTo(output, _repeated_userPointsList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ActionName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActionName);
      }
      size += userPointsList_.CalculateSize(_repeated_userPointsList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BatchSettleInput other) {
      if (other == null) {
        return;
      }
      if (other.ActionName.Length != 0) {
        ActionName = other.ActionName;
      }
      userPointsList_.Add(other.userPointsList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ActionName = input.ReadString();
            break;
          }
          case 18: {
            userPointsList_.AddEntriesFrom(input, _repeated_userPointsList_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UserPoints : pb::IMessage<UserPoints> {
    private static readonly pb::MessageParser<UserPoints> _parser = new pb::MessageParser<UserPoints>(() => new UserPoints());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserPoints> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserPoints() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserPoints(UserPoints other) : this() {
      userAddress_ = other.userAddress_ != null ? other.userAddress_.Clone() : null;
      userPoints_ = other.userPoints_;
      userPointsValue_ = other.userPointsValue_ != null ? other.userPointsValue_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserPoints Clone() {
      return new UserPoints(this);
    }

    /// <summary>Field number for the "user_address" field.</summary>
    public const int UserAddressFieldNumber = 1;
    private global::AElf.Types.Address userAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address UserAddress {
      get { return userAddress_; }
      set {
        userAddress_ = value;
      }
    }

    /// <summary>Field number for the "user_points" field.</summary>
    public const int UserPoints_FieldNumber = 2;
    private long userPoints_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UserPoints_ {
      get { return userPoints_; }
      set {
        userPoints_ = value;
      }
    }

    /// <summary>Field number for the "user_points_value" field.</summary>
    public const int UserPointsValueFieldNumber = 3;
    private global::AElf.Types.BigIntValue userPointsValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.BigIntValue UserPointsValue {
      get { return userPointsValue_; }
      set {
        userPointsValue_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserPoints);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserPoints other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAddress, other.UserAddress)) return false;
      if (UserPoints_ != other.UserPoints_) return false;
      if (!object.Equals(UserPointsValue, other.UserPointsValue)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAddress_ != null) hash ^= UserAddress.GetHashCode();
      if (UserPoints_ != 0L) hash ^= UserPoints_.GetHashCode();
      if (userPointsValue_ != null) hash ^= UserPointsValue.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAddress_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAddress);
      }
      if (UserPoints_ != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(UserPoints_);
      }
      if (userPointsValue_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UserPointsValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAddress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAddress);
      }
      if (UserPoints_ != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UserPoints_);
      }
      if (userPointsValue_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserPointsValue);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserPoints other) {
      if (other == null) {
        return;
      }
      if (other.userAddress_ != null) {
        if (userAddress_ == null) {
          UserAddress = new global::AElf.Types.Address();
        }
        UserAddress.MergeFrom(other.UserAddress);
      }
      if (other.UserPoints_ != 0L) {
        UserPoints_ = other.UserPoints_;
      }
      if (other.userPointsValue_ != null) {
        if (userPointsValue_ == null) {
          UserPointsValue = new global::AElf.Types.BigIntValue();
        }
        UserPointsValue.MergeFrom(other.UserPointsValue);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAddress_ == null) {
              UserAddress = new global::AElf.Types.Address();
            }
            input.ReadMessage(UserAddress);
            break;
          }
          case 16: {
            UserPoints_ = input.ReadInt64();
            break;
          }
          case 26: {
            if (userPointsValue_ == null) {
              UserPointsValue = new global::AElf.Types.BigIntValue();
            }
            input.ReadMessage(UserPointsValue);
            break;
          }
        }
      }
    }

  }

  public sealed partial class InscriptionInfo : pb::IMessage<InscriptionInfo> {
    private static readonly pb::MessageParser<InscriptionInfo> _parser = new pb::MessageParser<InscriptionInfo>(() => new InscriptionInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InscriptionInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InscriptionInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InscriptionInfo(InscriptionInfo other) : this() {
      ancestor_ = other.ancestor_;
      decimals_ = other.decimals_;
      maxGen_ = other.maxGen_;
      lossRate_ = other.lossRate_;
      commissionRate_ = other.commissionRate_;
      recipient_ = other.recipient_ != null ? other.recipient_.Clone() : null;
      admin_ = other.admin_ != null ? other.admin_.Clone() : null;
      crossGenerationConfig_ = other.crossGenerationConfig_ != null ? other.crossGenerationConfig_.Clone() : null;
      isWeightEnabled_ = other.isWeightEnabled_;
      imageCount_ = other.imageCount_;
      attributesPerGen_ = other.attributesPerGen_;
      maxGenLossRate_ = other.maxGenLossRate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InscriptionInfo Clone() {
      return new InscriptionInfo(this);
    }

    /// <summary>Field number for the "ancestor" field.</summary>
    public const int AncestorFieldNumber = 1;
    private string ancestor_ = "";
    /// <summary>
    /// gen0
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ancestor {
      get { return ancestor_; }
      set {
        ancestor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "decimals" field.</summary>
    public const int DecimalsFieldNumber = 2;
    private int decimals_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Decimals {
      get { return decimals_; }
      set {
        decimals_ = value;
      }
    }

    /// <summary>Field number for the "max_gen" field.</summary>
    public const int MaxGenFieldNumber = 3;
    private int maxGen_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxGen {
      get { return maxGen_; }
      set {
        maxGen_ = value;
      }
    }

    /// <summary>Field number for the "loss_rate" field.</summary>
    public const int LossRateFieldNumber = 4;
    private long lossRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LossRate {
      get { return lossRate_; }
      set {
        lossRate_ = value;
      }
    }

    /// <summary>Field number for the "commission_rate" field.</summary>
    public const int CommissionRateFieldNumber = 5;
    private long commissionRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CommissionRate {
      get { return commissionRate_; }
      set {
        commissionRate_ = value;
      }
    }

    /// <summary>Field number for the "recipient" field.</summary>
    public const int RecipientFieldNumber = 6;
    private global::AElf.Types.Address recipient_;
    /// <summary>
    /// receive commission address
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Recipient {
      get { return recipient_; }
      set {
        recipient_ = value;
      }
    }

    /// <summary>Field number for the "admin" field.</summary>
    public const int AdminFieldNumber = 7;
    private global::AElf.Types.Address admin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Admin {
      get { return admin_; }
      set {
        admin_ = value;
      }
    }

    /// <summary>Field number for the "cross_generation_config" field.</summary>
    public const int CrossGenerationConfigFieldNumber = 8;
    private global::Schrodinger.CrossGenerationConfig crossGenerationConfig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Schrodinger.CrossGenerationConfig CrossGenerationConfig {
      get { return crossGenerationConfig_; }
      set {
        crossGenerationConfig_ = value;
      }
    }

    /// <summary>Field number for the "is_weight_enabled" field.</summary>
    public const int IsWeightEnabledFieldNumber = 9;
    private bool isWeightEnabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsWeightEnabled {
      get { return isWeightEnabled_; }
      set {
        isWeightEnabled_ = value;
      }
    }

    /// <summary>Field number for the "image_count" field.</summary>
    public const int ImageCountFieldNumber = 10;
    private int imageCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ImageCount {
      get { return imageCount_; }
      set {
        imageCount_ = value;
      }
    }

    /// <summary>Field number for the "attributes_per_gen" field.</summary>
    public const int AttributesPerGenFieldNumber = 11;
    private int attributesPerGen_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AttributesPerGen {
      get { return attributesPerGen_; }
      set {
        attributesPerGen_ = value;
      }
    }

    /// <summary>Field number for the "max_gen_loss_rate" field.</summary>
    public const int MaxGenLossRateFieldNumber = 12;
    private long maxGenLossRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MaxGenLossRate {
      get { return maxGenLossRate_; }
      set {
        maxGenLossRate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InscriptionInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InscriptionInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ancestor != other.Ancestor) return false;
      if (Decimals != other.Decimals) return false;
      if (MaxGen != other.MaxGen) return false;
      if (LossRate != other.LossRate) return false;
      if (CommissionRate != other.CommissionRate) return false;
      if (!object.Equals(Recipient, other.Recipient)) return false;
      if (!object.Equals(Admin, other.Admin)) return false;
      if (!object.Equals(CrossGenerationConfig, other.CrossGenerationConfig)) return false;
      if (IsWeightEnabled != other.IsWeightEnabled) return false;
      if (ImageCount != other.ImageCount) return false;
      if (AttributesPerGen != other.AttributesPerGen) return false;
      if (MaxGenLossRate != other.MaxGenLossRate) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ancestor.Length != 0) hash ^= Ancestor.GetHashCode();
      if (Decimals != 0) hash ^= Decimals.GetHashCode();
      if (MaxGen != 0) hash ^= MaxGen.GetHashCode();
      if (LossRate != 0L) hash ^= LossRate.GetHashCode();
      if (CommissionRate != 0L) hash ^= CommissionRate.GetHashCode();
      if (recipient_ != null) hash ^= Recipient.GetHashCode();
      if (admin_ != null) hash ^= Admin.GetHashCode();
      if (crossGenerationConfig_ != null) hash ^= CrossGenerationConfig.GetHashCode();
      if (IsWeightEnabled != false) hash ^= IsWeightEnabled.GetHashCode();
      if (ImageCount != 0) hash ^= ImageCount.GetHashCode();
      if (AttributesPerGen != 0) hash ^= AttributesPerGen.GetHashCode();
      if (MaxGenLossRate != 0L) hash ^= MaxGenLossRate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ancestor.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Ancestor);
      }
      if (Decimals != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Decimals);
      }
      if (MaxGen != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MaxGen);
      }
      if (LossRate != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(LossRate);
      }
      if (CommissionRate != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(CommissionRate);
      }
      if (recipient_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Recipient);
      }
      if (admin_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Admin);
      }
      if (crossGenerationConfig_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(CrossGenerationConfig);
      }
      if (IsWeightEnabled != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsWeightEnabled);
      }
      if (ImageCount != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(ImageCount);
      }
      if (AttributesPerGen != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(AttributesPerGen);
      }
      if (MaxGenLossRate != 0L) {
        output.WriteRawTag(96);
        output.WriteInt64(MaxGenLossRate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ancestor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ancestor);
      }
      if (Decimals != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Decimals);
      }
      if (MaxGen != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxGen);
      }
      if (LossRate != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LossRate);
      }
      if (CommissionRate != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CommissionRate);
      }
      if (recipient_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Recipient);
      }
      if (admin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Admin);
      }
      if (crossGenerationConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CrossGenerationConfig);
      }
      if (IsWeightEnabled != false) {
        size += 1 + 1;
      }
      if (ImageCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ImageCount);
      }
      if (AttributesPerGen != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AttributesPerGen);
      }
      if (MaxGenLossRate != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxGenLossRate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InscriptionInfo other) {
      if (other == null) {
        return;
      }
      if (other.Ancestor.Length != 0) {
        Ancestor = other.Ancestor;
      }
      if (other.Decimals != 0) {
        Decimals = other.Decimals;
      }
      if (other.MaxGen != 0) {
        MaxGen = other.MaxGen;
      }
      if (other.LossRate != 0L) {
        LossRate = other.LossRate;
      }
      if (other.CommissionRate != 0L) {
        CommissionRate = other.CommissionRate;
      }
      if (other.recipient_ != null) {
        if (recipient_ == null) {
          Recipient = new global::AElf.Types.Address();
        }
        Recipient.MergeFrom(other.Recipient);
      }
      if (other.admin_ != null) {
        if (admin_ == null) {
          Admin = new global::AElf.Types.Address();
        }
        Admin.MergeFrom(other.Admin);
      }
      if (other.crossGenerationConfig_ != null) {
        if (crossGenerationConfig_ == null) {
          CrossGenerationConfig = new global::Schrodinger.CrossGenerationConfig();
        }
        CrossGenerationConfig.MergeFrom(other.CrossGenerationConfig);
      }
      if (other.IsWeightEnabled != false) {
        IsWeightEnabled = other.IsWeightEnabled;
      }
      if (other.ImageCount != 0) {
        ImageCount = other.ImageCount;
      }
      if (other.AttributesPerGen != 0) {
        AttributesPerGen = other.AttributesPerGen;
      }
      if (other.MaxGenLossRate != 0L) {
        MaxGenLossRate = other.MaxGenLossRate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Ancestor = input.ReadString();
            break;
          }
          case 16: {
            Decimals = input.ReadInt32();
            break;
          }
          case 24: {
            MaxGen = input.ReadInt32();
            break;
          }
          case 32: {
            LossRate = input.ReadInt64();
            break;
          }
          case 40: {
            CommissionRate = input.ReadInt64();
            break;
          }
          case 50: {
            if (recipient_ == null) {
              Recipient = new global::AElf.Types.Address();
            }
            input.ReadMessage(Recipient);
            break;
          }
          case 58: {
            if (admin_ == null) {
              Admin = new global::AElf.Types.Address();
            }
            input.ReadMessage(Admin);
            break;
          }
          case 66: {
            if (crossGenerationConfig_ == null) {
              CrossGenerationConfig = new global::Schrodinger.CrossGenerationConfig();
            }
            input.ReadMessage(CrossGenerationConfig);
            break;
          }
          case 72: {
            IsWeightEnabled = input.ReadBool();
            break;
          }
          case 80: {
            ImageCount = input.ReadInt32();
            break;
          }
          case 88: {
            AttributesPerGen = input.ReadInt32();
            break;
          }
          case 96: {
            MaxGenLossRate = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetTokenInfoOutput : pb::IMessage<GetTokenInfoOutput> {
    private static readonly pb::MessageParser<GetTokenInfoOutput> _parser = new pb::MessageParser<GetTokenInfoOutput>(() => new GetTokenInfoOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTokenInfoOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTokenInfoOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTokenInfoOutput(GetTokenInfoOutput other) : this() {
      adoptId_ = other.adoptId_ != null ? other.adoptId_.Clone() : null;
      parent_ = other.parent_;
      parentGen_ = other.parentGen_;
      parentAttributes_ = other.parentAttributes_ != null ? other.parentAttributes_.Clone() : null;
      attributes_ = other.attributes_ != null ? other.attributes_.Clone() : null;
      gen_ = other.gen_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTokenInfoOutput Clone() {
      return new GetTokenInfoOutput(this);
    }

    /// <summary>Field number for the "adopt_id" field.</summary>
    public const int AdoptIdFieldNumber = 1;
    private global::AElf.Types.Hash adoptId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash AdoptId {
      get { return adoptId_; }
      set {
        adoptId_ = value;
      }
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 2;
    private string parent_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "parent_gen" field.</summary>
    public const int ParentGenFieldNumber = 3;
    private int parentGen_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ParentGen {
      get { return parentGen_; }
      set {
        parentGen_ = value;
      }
    }

    /// <summary>Field number for the "parent_attributes" field.</summary>
    public const int ParentAttributesFieldNumber = 4;
    private global::Schrodinger.Attributes parentAttributes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Schrodinger.Attributes ParentAttributes {
      get { return parentAttributes_; }
      set {
        parentAttributes_ = value;
      }
    }

    /// <summary>Field number for the "attributes" field.</summary>
    public const int AttributesFieldNumber = 5;
    private global::Schrodinger.Attributes attributes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Schrodinger.Attributes Attributes {
      get { return attributes_; }
      set {
        attributes_ = value;
      }
    }

    /// <summary>Field number for the "gen" field.</summary>
    public const int GenFieldNumber = 6;
    private int gen_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Gen {
      get { return gen_; }
      set {
        gen_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTokenInfoOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTokenInfoOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AdoptId, other.AdoptId)) return false;
      if (Parent != other.Parent) return false;
      if (ParentGen != other.ParentGen) return false;
      if (!object.Equals(ParentAttributes, other.ParentAttributes)) return false;
      if (!object.Equals(Attributes, other.Attributes)) return false;
      if (Gen != other.Gen) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (adoptId_ != null) hash ^= AdoptId.GetHashCode();
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (ParentGen != 0) hash ^= ParentGen.GetHashCode();
      if (parentAttributes_ != null) hash ^= ParentAttributes.GetHashCode();
      if (attributes_ != null) hash ^= Attributes.GetHashCode();
      if (Gen != 0) hash ^= Gen.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (adoptId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AdoptId);
      }
      if (Parent.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Parent);
      }
      if (ParentGen != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ParentGen);
      }
      if (parentAttributes_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ParentAttributes);
      }
      if (attributes_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Attributes);
      }
      if (Gen != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Gen);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (adoptId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AdoptId);
      }
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (ParentGen != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ParentGen);
      }
      if (parentAttributes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ParentAttributes);
      }
      if (attributes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Attributes);
      }
      if (Gen != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Gen);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTokenInfoOutput other) {
      if (other == null) {
        return;
      }
      if (other.adoptId_ != null) {
        if (adoptId_ == null) {
          AdoptId = new global::AElf.Types.Hash();
        }
        AdoptId.MergeFrom(other.AdoptId);
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.ParentGen != 0) {
        ParentGen = other.ParentGen;
      }
      if (other.parentAttributes_ != null) {
        if (parentAttributes_ == null) {
          ParentAttributes = new global::Schrodinger.Attributes();
        }
        ParentAttributes.MergeFrom(other.ParentAttributes);
      }
      if (other.attributes_ != null) {
        if (attributes_ == null) {
          Attributes = new global::Schrodinger.Attributes();
        }
        Attributes.MergeFrom(other.Attributes);
      }
      if (other.Gen != 0) {
        Gen = other.Gen;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (adoptId_ == null) {
              AdoptId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(AdoptId);
            break;
          }
          case 18: {
            Parent = input.ReadString();
            break;
          }
          case 24: {
            ParentGen = input.ReadInt32();
            break;
          }
          case 34: {
            if (parentAttributes_ == null) {
              ParentAttributes = new global::Schrodinger.Attributes();
            }
            input.ReadMessage(ParentAttributes);
            break;
          }
          case 42: {
            if (attributes_ == null) {
              Attributes = new global::Schrodinger.Attributes();
            }
            input.ReadMessage(Attributes);
            break;
          }
          case 48: {
            Gen = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SetAttributeConfigInput : pb::IMessage<SetAttributeConfigInput> {
    private static readonly pb::MessageParser<SetAttributeConfigInput> _parser = new pb::MessageParser<SetAttributeConfigInput>(() => new SetAttributeConfigInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetAttributeConfigInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetAttributeConfigInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetAttributeConfigInput(SetAttributeConfigInput other) : this() {
      traitTypeMaxCount_ = other.traitTypeMaxCount_;
      traitValueMaxCount_ = other.traitValueMaxCount_;
      attributeMaxLength_ = other.attributeMaxLength_;
      maxAttributesPerGen_ = other.maxAttributesPerGen_;
      fixedTraitTypeMaxCount_ = other.fixedTraitTypeMaxCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetAttributeConfigInput Clone() {
      return new SetAttributeConfigInput(this);
    }

    /// <summary>Field number for the "trait_type_max_count" field.</summary>
    public const int TraitTypeMaxCountFieldNumber = 1;
    private long traitTypeMaxCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TraitTypeMaxCount {
      get { return traitTypeMaxCount_; }
      set {
        traitTypeMaxCount_ = value;
      }
    }

    /// <summary>Field number for the "trait_value_max_count" field.</summary>
    public const int TraitValueMaxCountFieldNumber = 2;
    private long traitValueMaxCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TraitValueMaxCount {
      get { return traitValueMaxCount_; }
      set {
        traitValueMaxCount_ = value;
      }
    }

    /// <summary>Field number for the "attribute_max_length" field.</summary>
    public const int AttributeMaxLengthFieldNumber = 3;
    private long attributeMaxLength_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AttributeMaxLength {
      get { return attributeMaxLength_; }
      set {
        attributeMaxLength_ = value;
      }
    }

    /// <summary>Field number for the "max_attributes_per_gen" field.</summary>
    public const int MaxAttributesPerGenFieldNumber = 4;
    private int maxAttributesPerGen_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxAttributesPerGen {
      get { return maxAttributesPerGen_; }
      set {
        maxAttributesPerGen_ = value;
      }
    }

    /// <summary>Field number for the "fixed_trait_type_max_count" field.</summary>
    public const int FixedTraitTypeMaxCountFieldNumber = 5;
    private long fixedTraitTypeMaxCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FixedTraitTypeMaxCount {
      get { return fixedTraitTypeMaxCount_; }
      set {
        fixedTraitTypeMaxCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetAttributeConfigInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetAttributeConfigInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TraitTypeMaxCount != other.TraitTypeMaxCount) return false;
      if (TraitValueMaxCount != other.TraitValueMaxCount) return false;
      if (AttributeMaxLength != other.AttributeMaxLength) return false;
      if (MaxAttributesPerGen != other.MaxAttributesPerGen) return false;
      if (FixedTraitTypeMaxCount != other.FixedTraitTypeMaxCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TraitTypeMaxCount != 0L) hash ^= TraitTypeMaxCount.GetHashCode();
      if (TraitValueMaxCount != 0L) hash ^= TraitValueMaxCount.GetHashCode();
      if (AttributeMaxLength != 0L) hash ^= AttributeMaxLength.GetHashCode();
      if (MaxAttributesPerGen != 0) hash ^= MaxAttributesPerGen.GetHashCode();
      if (FixedTraitTypeMaxCount != 0L) hash ^= FixedTraitTypeMaxCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TraitTypeMaxCount != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TraitTypeMaxCount);
      }
      if (TraitValueMaxCount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(TraitValueMaxCount);
      }
      if (AttributeMaxLength != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(AttributeMaxLength);
      }
      if (MaxAttributesPerGen != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MaxAttributesPerGen);
      }
      if (FixedTraitTypeMaxCount != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(FixedTraitTypeMaxCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TraitTypeMaxCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TraitTypeMaxCount);
      }
      if (TraitValueMaxCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TraitValueMaxCount);
      }
      if (AttributeMaxLength != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AttributeMaxLength);
      }
      if (MaxAttributesPerGen != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxAttributesPerGen);
      }
      if (FixedTraitTypeMaxCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FixedTraitTypeMaxCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetAttributeConfigInput other) {
      if (other == null) {
        return;
      }
      if (other.TraitTypeMaxCount != 0L) {
        TraitTypeMaxCount = other.TraitTypeMaxCount;
      }
      if (other.TraitValueMaxCount != 0L) {
        TraitValueMaxCount = other.TraitValueMaxCount;
      }
      if (other.AttributeMaxLength != 0L) {
        AttributeMaxLength = other.AttributeMaxLength;
      }
      if (other.MaxAttributesPerGen != 0) {
        MaxAttributesPerGen = other.MaxAttributesPerGen;
      }
      if (other.FixedTraitTypeMaxCount != 0L) {
        FixedTraitTypeMaxCount = other.FixedTraitTypeMaxCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TraitTypeMaxCount = input.ReadInt64();
            break;
          }
          case 16: {
            TraitValueMaxCount = input.ReadInt64();
            break;
          }
          case 24: {
            AttributeMaxLength = input.ReadInt64();
            break;
          }
          case 32: {
            MaxAttributesPerGen = input.ReadInt32();
            break;
          }
          case 40: {
            FixedTraitTypeMaxCount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Config : pb::IMessage<Config> {
    private static readonly pb::MessageParser<Config> _parser = new pb::MessageParser<Config>(() => new Config());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Config> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Config() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Config(Config other) : this() {
      maxGen_ = other.maxGen_;
      imageMaxSize_ = other.imageMaxSize_;
      imageMaxCount_ = other.imageMaxCount_;
      traitTypeMaxCount_ = other.traitTypeMaxCount_;
      traitValueMaxCount_ = other.traitValueMaxCount_;
      attributeMaxLength_ = other.attributeMaxLength_;
      maxAttributesPerGen_ = other.maxAttributesPerGen_;
      fixedTraitTypeMaxCount_ = other.fixedTraitTypeMaxCount_;
      imageUriMaxSize_ = other.imageUriMaxSize_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Config Clone() {
      return new Config(this);
    }

    /// <summary>Field number for the "max_gen" field.</summary>
    public const int MaxGenFieldNumber = 1;
    private int maxGen_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxGen {
      get { return maxGen_; }
      set {
        maxGen_ = value;
      }
    }

    /// <summary>Field number for the "image_max_size" field.</summary>
    public const int ImageMaxSizeFieldNumber = 2;
    private long imageMaxSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ImageMaxSize {
      get { return imageMaxSize_; }
      set {
        imageMaxSize_ = value;
      }
    }

    /// <summary>Field number for the "image_max_count" field.</summary>
    public const int ImageMaxCountFieldNumber = 3;
    private long imageMaxCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ImageMaxCount {
      get { return imageMaxCount_; }
      set {
        imageMaxCount_ = value;
      }
    }

    /// <summary>Field number for the "trait_type_max_count" field.</summary>
    public const int TraitTypeMaxCountFieldNumber = 4;
    private long traitTypeMaxCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TraitTypeMaxCount {
      get { return traitTypeMaxCount_; }
      set {
        traitTypeMaxCount_ = value;
      }
    }

    /// <summary>Field number for the "trait_value_max_count" field.</summary>
    public const int TraitValueMaxCountFieldNumber = 5;
    private long traitValueMaxCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TraitValueMaxCount {
      get { return traitValueMaxCount_; }
      set {
        traitValueMaxCount_ = value;
      }
    }

    /// <summary>Field number for the "attribute_max_length" field.</summary>
    public const int AttributeMaxLengthFieldNumber = 6;
    private long attributeMaxLength_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AttributeMaxLength {
      get { return attributeMaxLength_; }
      set {
        attributeMaxLength_ = value;
      }
    }

    /// <summary>Field number for the "max_attributes_per_gen" field.</summary>
    public const int MaxAttributesPerGenFieldNumber = 7;
    private int maxAttributesPerGen_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxAttributesPerGen {
      get { return maxAttributesPerGen_; }
      set {
        maxAttributesPerGen_ = value;
      }
    }

    /// <summary>Field number for the "fixed_trait_type_max_count" field.</summary>
    public const int FixedTraitTypeMaxCountFieldNumber = 8;
    private long fixedTraitTypeMaxCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FixedTraitTypeMaxCount {
      get { return fixedTraitTypeMaxCount_; }
      set {
        fixedTraitTypeMaxCount_ = value;
      }
    }

    /// <summary>Field number for the "image_uri_max_size" field.</summary>
    public const int ImageUriMaxSizeFieldNumber = 9;
    private long imageUriMaxSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ImageUriMaxSize {
      get { return imageUriMaxSize_; }
      set {
        imageUriMaxSize_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Config);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Config other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MaxGen != other.MaxGen) return false;
      if (ImageMaxSize != other.ImageMaxSize) return false;
      if (ImageMaxCount != other.ImageMaxCount) return false;
      if (TraitTypeMaxCount != other.TraitTypeMaxCount) return false;
      if (TraitValueMaxCount != other.TraitValueMaxCount) return false;
      if (AttributeMaxLength != other.AttributeMaxLength) return false;
      if (MaxAttributesPerGen != other.MaxAttributesPerGen) return false;
      if (FixedTraitTypeMaxCount != other.FixedTraitTypeMaxCount) return false;
      if (ImageUriMaxSize != other.ImageUriMaxSize) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MaxGen != 0) hash ^= MaxGen.GetHashCode();
      if (ImageMaxSize != 0L) hash ^= ImageMaxSize.GetHashCode();
      if (ImageMaxCount != 0L) hash ^= ImageMaxCount.GetHashCode();
      if (TraitTypeMaxCount != 0L) hash ^= TraitTypeMaxCount.GetHashCode();
      if (TraitValueMaxCount != 0L) hash ^= TraitValueMaxCount.GetHashCode();
      if (AttributeMaxLength != 0L) hash ^= AttributeMaxLength.GetHashCode();
      if (MaxAttributesPerGen != 0) hash ^= MaxAttributesPerGen.GetHashCode();
      if (FixedTraitTypeMaxCount != 0L) hash ^= FixedTraitTypeMaxCount.GetHashCode();
      if (ImageUriMaxSize != 0L) hash ^= ImageUriMaxSize.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MaxGen != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MaxGen);
      }
      if (ImageMaxSize != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(ImageMaxSize);
      }
      if (ImageMaxCount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ImageMaxCount);
      }
      if (TraitTypeMaxCount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(TraitTypeMaxCount);
      }
      if (TraitValueMaxCount != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(TraitValueMaxCount);
      }
      if (AttributeMaxLength != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(AttributeMaxLength);
      }
      if (MaxAttributesPerGen != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(MaxAttributesPerGen);
      }
      if (FixedTraitTypeMaxCount != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(FixedTraitTypeMaxCount);
      }
      if (ImageUriMaxSize != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(ImageUriMaxSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MaxGen != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxGen);
      }
      if (ImageMaxSize != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ImageMaxSize);
      }
      if (ImageMaxCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ImageMaxCount);
      }
      if (TraitTypeMaxCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TraitTypeMaxCount);
      }
      if (TraitValueMaxCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TraitValueMaxCount);
      }
      if (AttributeMaxLength != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AttributeMaxLength);
      }
      if (MaxAttributesPerGen != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxAttributesPerGen);
      }
      if (FixedTraitTypeMaxCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FixedTraitTypeMaxCount);
      }
      if (ImageUriMaxSize != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ImageUriMaxSize);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Config other) {
      if (other == null) {
        return;
      }
      if (other.MaxGen != 0) {
        MaxGen = other.MaxGen;
      }
      if (other.ImageMaxSize != 0L) {
        ImageMaxSize = other.ImageMaxSize;
      }
      if (other.ImageMaxCount != 0L) {
        ImageMaxCount = other.ImageMaxCount;
      }
      if (other.TraitTypeMaxCount != 0L) {
        TraitTypeMaxCount = other.TraitTypeMaxCount;
      }
      if (other.TraitValueMaxCount != 0L) {
        TraitValueMaxCount = other.TraitValueMaxCount;
      }
      if (other.AttributeMaxLength != 0L) {
        AttributeMaxLength = other.AttributeMaxLength;
      }
      if (other.MaxAttributesPerGen != 0) {
        MaxAttributesPerGen = other.MaxAttributesPerGen;
      }
      if (other.FixedTraitTypeMaxCount != 0L) {
        FixedTraitTypeMaxCount = other.FixedTraitTypeMaxCount;
      }
      if (other.ImageUriMaxSize != 0L) {
        ImageUriMaxSize = other.ImageUriMaxSize;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MaxGen = input.ReadInt32();
            break;
          }
          case 16: {
            ImageMaxSize = input.ReadInt64();
            break;
          }
          case 24: {
            ImageMaxCount = input.ReadInt64();
            break;
          }
          case 32: {
            TraitTypeMaxCount = input.ReadInt64();
            break;
          }
          case 40: {
            TraitValueMaxCount = input.ReadInt64();
            break;
          }
          case 48: {
            AttributeMaxLength = input.ReadInt64();
            break;
          }
          case 56: {
            MaxAttributesPerGen = input.ReadInt32();
            break;
          }
          case 64: {
            FixedTraitTypeMaxCount = input.ReadInt64();
            break;
          }
          case 72: {
            ImageUriMaxSize = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SetSignatoryInput : pb::IMessage<SetSignatoryInput> {
    private static readonly pb::MessageParser<SetSignatoryInput> _parser = new pb::MessageParser<SetSignatoryInput>(() => new SetSignatoryInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetSignatoryInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetSignatoryInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetSignatoryInput(SetSignatoryInput other) : this() {
      tick_ = other.tick_;
      signatory_ = other.signatory_ != null ? other.signatory_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetSignatoryInput Clone() {
      return new SetSignatoryInput(this);
    }

    /// <summary>Field number for the "tick" field.</summary>
    public const int TickFieldNumber = 1;
    private string tick_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tick {
      get { return tick_; }
      set {
        tick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "signatory" field.</summary>
    public const int SignatoryFieldNumber = 2;
    private global::AElf.Types.Address signatory_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Signatory {
      get { return signatory_; }
      set {
        signatory_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetSignatoryInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetSignatoryInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tick != other.Tick) return false;
      if (!object.Equals(Signatory, other.Signatory)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Tick.Length != 0) hash ^= Tick.GetHashCode();
      if (signatory_ != null) hash ^= Signatory.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Tick.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Tick);
      }
      if (signatory_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Signatory);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Tick.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tick);
      }
      if (signatory_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Signatory);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetSignatoryInput other) {
      if (other == null) {
        return;
      }
      if (other.Tick.Length != 0) {
        Tick = other.Tick;
      }
      if (other.signatory_ != null) {
        if (signatory_ == null) {
          Signatory = new global::AElf.Types.Address();
        }
        Signatory.MergeFrom(other.Signatory);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Tick = input.ReadString();
            break;
          }
          case 18: {
            if (signatory_ == null) {
              Signatory = new global::AElf.Types.Address();
            }
            input.ReadMessage(Signatory);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AcceptReferralInput : pb::IMessage<AcceptReferralInput> {
    private static readonly pb::MessageParser<AcceptReferralInput> _parser = new pb::MessageParser<AcceptReferralInput>(() => new AcceptReferralInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AcceptReferralInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AcceptReferralInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AcceptReferralInput(AcceptReferralInput other) : this() {
      referrer_ = other.referrer_ != null ? other.referrer_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AcceptReferralInput Clone() {
      return new AcceptReferralInput(this);
    }

    /// <summary>Field number for the "referrer" field.</summary>
    public const int ReferrerFieldNumber = 1;
    private global::AElf.Types.Address referrer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Referrer {
      get { return referrer_; }
      set {
        referrer_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AcceptReferralInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AcceptReferralInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Referrer, other.Referrer)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (referrer_ != null) hash ^= Referrer.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (referrer_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Referrer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (referrer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Referrer);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AcceptReferralInput other) {
      if (other == null) {
        return;
      }
      if (other.referrer_ != null) {
        if (referrer_ == null) {
          Referrer = new global::AElf.Types.Address();
        }
        Referrer.MergeFrom(other.Referrer);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (referrer_ == null) {
              Referrer = new global::AElf.Types.Address();
            }
            input.ReadMessage(Referrer);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TransferFromReceivingAddressInput : pb::IMessage<TransferFromReceivingAddressInput> {
    private static readonly pb::MessageParser<TransferFromReceivingAddressInput> _parser = new pb::MessageParser<TransferFromReceivingAddressInput>(() => new TransferFromReceivingAddressInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransferFromReceivingAddressInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferFromReceivingAddressInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferFromReceivingAddressInput(TransferFromReceivingAddressInput other) : this() {
      tick_ = other.tick_;
      amount_ = other.amount_;
      recipient_ = other.recipient_ != null ? other.recipient_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferFromReceivingAddressInput Clone() {
      return new TransferFromReceivingAddressInput(this);
    }

    /// <summary>Field number for the "tick" field.</summary>
    public const int TickFieldNumber = 1;
    private string tick_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tick {
      get { return tick_; }
      set {
        tick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "recipient" field.</summary>
    public const int RecipientFieldNumber = 3;
    private global::AElf.Types.Address recipient_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Recipient {
      get { return recipient_; }
      set {
        recipient_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransferFromReceivingAddressInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransferFromReceivingAddressInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tick != other.Tick) return false;
      if (Amount != other.Amount) return false;
      if (!object.Equals(Recipient, other.Recipient)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Tick.Length != 0) hash ^= Tick.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (recipient_ != null) hash ^= Recipient.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Tick.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Tick);
      }
      if (Amount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Amount);
      }
      if (recipient_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Recipient);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Tick.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tick);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (recipient_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Recipient);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransferFromReceivingAddressInput other) {
      if (other == null) {
        return;
      }
      if (other.Tick.Length != 0) {
        Tick = other.Tick;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      if (other.recipient_ != null) {
        if (recipient_ == null) {
          Recipient = new global::AElf.Types.Address();
        }
        Recipient.MergeFrom(other.Recipient);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Tick = input.ReadString();
            break;
          }
          case 16: {
            Amount = input.ReadInt64();
            break;
          }
          case 26: {
            if (recipient_ == null) {
              Recipient = new global::AElf.Types.Address();
            }
            input.ReadMessage(Recipient);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TraitValues : pb::IMessage<TraitValues> {
    private static readonly pb::MessageParser<TraitValues> _parser = new pb::MessageParser<TraitValues>(() => new TraitValues());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TraitValues> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TraitValues() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TraitValues(TraitValues other) : this() {
      lowerWeightSums_ = other.lowerWeightSums_ != null ? other.lowerWeightSums_.Clone() : null;
      traitValueList_ = other.traitValueList_ != null ? other.traitValueList_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TraitValues Clone() {
      return new TraitValues(this);
    }

    /// <summary>Field number for the "lower_weight_sums" field.</summary>
    public const int LowerWeightSumsFieldNumber = 1;
    private global::Schrodinger.LongList lowerWeightSums_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Schrodinger.LongList LowerWeightSums {
      get { return lowerWeightSums_; }
      set {
        lowerWeightSums_ = value;
      }
    }

    /// <summary>Field number for the "trait_value_list" field.</summary>
    public const int TraitValueListFieldNumber = 2;
    private global::Schrodinger.AttributeInfos traitValueList_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Schrodinger.AttributeInfos TraitValueList {
      get { return traitValueList_; }
      set {
        traitValueList_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TraitValues);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TraitValues other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(LowerWeightSums, other.LowerWeightSums)) return false;
      if (!object.Equals(TraitValueList, other.TraitValueList)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (lowerWeightSums_ != null) hash ^= LowerWeightSums.GetHashCode();
      if (traitValueList_ != null) hash ^= TraitValueList.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (lowerWeightSums_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LowerWeightSums);
      }
      if (traitValueList_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TraitValueList);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (lowerWeightSums_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LowerWeightSums);
      }
      if (traitValueList_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TraitValueList);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TraitValues other) {
      if (other == null) {
        return;
      }
      if (other.lowerWeightSums_ != null) {
        if (lowerWeightSums_ == null) {
          LowerWeightSums = new global::Schrodinger.LongList();
        }
        LowerWeightSums.MergeFrom(other.LowerWeightSums);
      }
      if (other.traitValueList_ != null) {
        if (traitValueList_ == null) {
          TraitValueList = new global::Schrodinger.AttributeInfos();
        }
        TraitValueList.MergeFrom(other.TraitValueList);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (lowerWeightSums_ == null) {
              LowerWeightSums = new global::Schrodinger.LongList();
            }
            input.ReadMessage(LowerWeightSums);
            break;
          }
          case 18: {
            if (traitValueList_ == null) {
              TraitValueList = new global::Schrodinger.AttributeInfos();
            }
            input.ReadMessage(TraitValueList);
            break;
          }
        }
      }
    }

  }

  public sealed partial class LongList : pb::IMessage<LongList> {
    private static readonly pb::MessageParser<LongList> _parser = new pb::MessageParser<LongList>(() => new LongList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LongList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LongList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LongList(LongList other) : this() {
      data_ = other.data_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LongList Clone() {
      return new LongList(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private static readonly pb::FieldCodec<long> _repeated_data_codec
        = pb::FieldCodec.ForInt64(10);
    private readonly pbc::RepeatedField<long> data_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> Data {
      get { return data_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LongList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LongList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!data_.Equals(other.data_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= data_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      data_.WriteTo(output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += data_.CalculateSize(_repeated_data_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LongList other) {
      if (other == null) {
        return;
      }
      data_.Add(other.data_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            data_.AddEntriesFrom(input, _repeated_data_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SetOfficialDomainAliasInput : pb::IMessage<SetOfficialDomainAliasInput> {
    private static readonly pb::MessageParser<SetOfficialDomainAliasInput> _parser = new pb::MessageParser<SetOfficialDomainAliasInput>(() => new SetOfficialDomainAliasInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetOfficialDomainAliasInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetOfficialDomainAliasInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetOfficialDomainAliasInput(SetOfficialDomainAliasInput other) : this() {
      alias_ = other.alias_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetOfficialDomainAliasInput Clone() {
      return new SetOfficialDomainAliasInput(this);
    }

    /// <summary>Field number for the "alias" field.</summary>
    public const int AliasFieldNumber = 1;
    private string alias_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Alias {
      get { return alias_; }
      set {
        alias_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetOfficialDomainAliasInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetOfficialDomainAliasInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Alias != other.Alias) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Alias.Length != 0) hash ^= Alias.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Alias.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Alias);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Alias.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Alias);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetOfficialDomainAliasInput other) {
      if (other == null) {
        return;
      }
      if (other.Alias.Length != 0) {
        Alias = other.Alias;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Alias = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// log event
  /// </summary>
  public sealed partial class Joined : pb::IMessage<Joined> {
    private static readonly pb::MessageParser<Joined> _parser = new pb::MessageParser<Joined>(() => new Joined());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Joined> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Joined() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Joined(Joined other) : this() {
      domain_ = other.domain_;
      registrant_ = other.registrant_ != null ? other.registrant_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Joined Clone() {
      return new Joined(this);
    }

    /// <summary>Field number for the "domain" field.</summary>
    public const int DomainFieldNumber = 2;
    private string domain_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Domain {
      get { return domain_; }
      set {
        domain_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "registrant" field.</summary>
    public const int RegistrantFieldNumber = 3;
    private global::AElf.Types.Address registrant_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Registrant {
      get { return registrant_; }
      set {
        registrant_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Joined);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Joined other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Domain != other.Domain) return false;
      if (!object.Equals(Registrant, other.Registrant)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Domain.Length != 0) hash ^= Domain.GetHashCode();
      if (registrant_ != null) hash ^= Registrant.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Domain.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Domain);
      }
      if (registrant_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Registrant);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Domain.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Domain);
      }
      if (registrant_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Registrant);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Joined other) {
      if (other == null) {
        return;
      }
      if (other.Domain.Length != 0) {
        Domain = other.Domain;
      }
      if (other.registrant_ != null) {
        if (registrant_ == null) {
          Registrant = new global::AElf.Types.Address();
        }
        Registrant.MergeFrom(other.Registrant);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            Domain = input.ReadString();
            break;
          }
          case 26: {
            if (registrant_ == null) {
              Registrant = new global::AElf.Types.Address();
            }
            input.ReadMessage(Registrant);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Deployed : pb::IMessage<Deployed> {
    private static readonly pb::MessageParser<Deployed> _parser = new pb::MessageParser<Deployed>(() => new Deployed());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Deployed> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Deployed() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Deployed(Deployed other) : this() {
      tick_ = other.tick_;
      ancestor_ = other.ancestor_;
      maxGeneration_ = other.maxGeneration_;
      totalSupply_ = other.totalSupply_;
      decimals_ = other.decimals_;
      attributeLists_ = other.attributeLists_ != null ? other.attributeLists_.Clone() : null;
      imageCount_ = other.imageCount_;
      issuer_ = other.issuer_ != null ? other.issuer_.Clone() : null;
      owner_ = other.owner_ != null ? other.owner_.Clone() : null;
      issueChainId_ = other.issueChainId_;
      externalInfos_ = other.externalInfos_ != null ? other.externalInfos_.Clone() : null;
      tokenName_ = other.tokenName_;
      deployer_ = other.deployer_ != null ? other.deployer_.Clone() : null;
      crossGenerationConfig_ = other.crossGenerationConfig_ != null ? other.crossGenerationConfig_.Clone() : null;
      isWeightEnabled_ = other.isWeightEnabled_;
      admin_ = other.admin_ != null ? other.admin_.Clone() : null;
      lossRate_ = other.lossRate_;
      commissionRate_ = other.commissionRate_;
      attributesPerGen_ = other.attributesPerGen_;
      signatory_ = other.signatory_ != null ? other.signatory_.Clone() : null;
      imageUri_ = other.imageUri_;
      maxGenLossRate_ = other.maxGenLossRate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Deployed Clone() {
      return new Deployed(this);
    }

    /// <summary>Field number for the "tick" field.</summary>
    public const int TickFieldNumber = 1;
    private string tick_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tick {
      get { return tick_; }
      set {
        tick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ancestor" field.</summary>
    public const int AncestorFieldNumber = 2;
    private string ancestor_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ancestor {
      get { return ancestor_; }
      set {
        ancestor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "max_generation" field.</summary>
    public const int MaxGenerationFieldNumber = 3;
    private int maxGeneration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxGeneration {
      get { return maxGeneration_; }
      set {
        maxGeneration_ = value;
      }
    }

    /// <summary>Field number for the "total_supply" field.</summary>
    public const int TotalSupplyFieldNumber = 4;
    private long totalSupply_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalSupply {
      get { return totalSupply_; }
      set {
        totalSupply_ = value;
      }
    }

    /// <summary>Field number for the "decimals" field.</summary>
    public const int DecimalsFieldNumber = 5;
    private int decimals_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Decimals {
      get { return decimals_; }
      set {
        decimals_ = value;
      }
    }

    /// <summary>Field number for the "attribute_lists" field.</summary>
    public const int AttributeListsFieldNumber = 6;
    private global::Schrodinger.AttributeLists attributeLists_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Schrodinger.AttributeLists AttributeLists {
      get { return attributeLists_; }
      set {
        attributeLists_ = value;
      }
    }

    /// <summary>Field number for the "image_count" field.</summary>
    public const int ImageCountFieldNumber = 7;
    private int imageCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ImageCount {
      get { return imageCount_; }
      set {
        imageCount_ = value;
      }
    }

    /// <summary>Field number for the "issuer" field.</summary>
    public const int IssuerFieldNumber = 8;
    private global::AElf.Types.Address issuer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Issuer {
      get { return issuer_; }
      set {
        issuer_ = value;
      }
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 9;
    private global::AElf.Types.Address owner_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Owner {
      get { return owner_; }
      set {
        owner_ = value;
      }
    }

    /// <summary>Field number for the "issue_chain_id" field.</summary>
    public const int IssueChainIdFieldNumber = 10;
    private int issueChainId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IssueChainId {
      get { return issueChainId_; }
      set {
        issueChainId_ = value;
      }
    }

    /// <summary>Field number for the "external_infos" field.</summary>
    public const int ExternalInfosFieldNumber = 11;
    private global::Schrodinger.ExternalInfos externalInfos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Schrodinger.ExternalInfos ExternalInfos {
      get { return externalInfos_; }
      set {
        externalInfos_ = value;
      }
    }

    /// <summary>Field number for the "token_name" field.</summary>
    public const int TokenNameFieldNumber = 12;
    private string tokenName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TokenName {
      get { return tokenName_; }
      set {
        tokenName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "deployer" field.</summary>
    public const int DeployerFieldNumber = 13;
    private global::AElf.Types.Address deployer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Deployer {
      get { return deployer_; }
      set {
        deployer_ = value;
      }
    }

    /// <summary>Field number for the "cross_generation_config" field.</summary>
    public const int CrossGenerationConfigFieldNumber = 14;
    private global::Schrodinger.CrossGenerationConfig crossGenerationConfig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Schrodinger.CrossGenerationConfig CrossGenerationConfig {
      get { return crossGenerationConfig_; }
      set {
        crossGenerationConfig_ = value;
      }
    }

    /// <summary>Field number for the "is_weight_enabled" field.</summary>
    public const int IsWeightEnabledFieldNumber = 15;
    private bool isWeightEnabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsWeightEnabled {
      get { return isWeightEnabled_; }
      set {
        isWeightEnabled_ = value;
      }
    }

    /// <summary>Field number for the "admin" field.</summary>
    public const int AdminFieldNumber = 16;
    private global::AElf.Types.Address admin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Admin {
      get { return admin_; }
      set {
        admin_ = value;
      }
    }

    /// <summary>Field number for the "loss_rate" field.</summary>
    public const int LossRateFieldNumber = 17;
    private long lossRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LossRate {
      get { return lossRate_; }
      set {
        lossRate_ = value;
      }
    }

    /// <summary>Field number for the "commission_rate" field.</summary>
    public const int CommissionRateFieldNumber = 18;
    private long commissionRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CommissionRate {
      get { return commissionRate_; }
      set {
        commissionRate_ = value;
      }
    }

    /// <summary>Field number for the "attributes_per_gen" field.</summary>
    public const int AttributesPerGenFieldNumber = 19;
    private int attributesPerGen_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AttributesPerGen {
      get { return attributesPerGen_; }
      set {
        attributesPerGen_ = value;
      }
    }

    /// <summary>Field number for the "signatory" field.</summary>
    public const int SignatoryFieldNumber = 20;
    private global::AElf.Types.Address signatory_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Signatory {
      get { return signatory_; }
      set {
        signatory_ = value;
      }
    }

    /// <summary>Field number for the "image_uri" field.</summary>
    public const int ImageUriFieldNumber = 21;
    private string imageUri_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImageUri {
      get { return imageUri_; }
      set {
        imageUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "max_gen_loss_rate" field.</summary>
    public const int MaxGenLossRateFieldNumber = 22;
    private long maxGenLossRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MaxGenLossRate {
      get { return maxGenLossRate_; }
      set {
        maxGenLossRate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Deployed);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Deployed other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tick != other.Tick) return false;
      if (Ancestor != other.Ancestor) return false;
      if (MaxGeneration != other.MaxGeneration) return false;
      if (TotalSupply != other.TotalSupply) return false;
      if (Decimals != other.Decimals) return false;
      if (!object.Equals(AttributeLists, other.AttributeLists)) return false;
      if (ImageCount != other.ImageCount) return false;
      if (!object.Equals(Issuer, other.Issuer)) return false;
      if (!object.Equals(Owner, other.Owner)) return false;
      if (IssueChainId != other.IssueChainId) return false;
      if (!object.Equals(ExternalInfos, other.ExternalInfos)) return false;
      if (TokenName != other.TokenName) return false;
      if (!object.Equals(Deployer, other.Deployer)) return false;
      if (!object.Equals(CrossGenerationConfig, other.CrossGenerationConfig)) return false;
      if (IsWeightEnabled != other.IsWeightEnabled) return false;
      if (!object.Equals(Admin, other.Admin)) return false;
      if (LossRate != other.LossRate) return false;
      if (CommissionRate != other.CommissionRate) return false;
      if (AttributesPerGen != other.AttributesPerGen) return false;
      if (!object.Equals(Signatory, other.Signatory)) return false;
      if (ImageUri != other.ImageUri) return false;
      if (MaxGenLossRate != other.MaxGenLossRate) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Tick.Length != 0) hash ^= Tick.GetHashCode();
      if (Ancestor.Length != 0) hash ^= Ancestor.GetHashCode();
      if (MaxGeneration != 0) hash ^= MaxGeneration.GetHashCode();
      if (TotalSupply != 0L) hash ^= TotalSupply.GetHashCode();
      if (Decimals != 0) hash ^= Decimals.GetHashCode();
      if (attributeLists_ != null) hash ^= AttributeLists.GetHashCode();
      if (ImageCount != 0) hash ^= ImageCount.GetHashCode();
      if (issuer_ != null) hash ^= Issuer.GetHashCode();
      if (owner_ != null) hash ^= Owner.GetHashCode();
      if (IssueChainId != 0) hash ^= IssueChainId.GetHashCode();
      if (externalInfos_ != null) hash ^= ExternalInfos.GetHashCode();
      if (TokenName.Length != 0) hash ^= TokenName.GetHashCode();
      if (deployer_ != null) hash ^= Deployer.GetHashCode();
      if (crossGenerationConfig_ != null) hash ^= CrossGenerationConfig.GetHashCode();
      if (IsWeightEnabled != false) hash ^= IsWeightEnabled.GetHashCode();
      if (admin_ != null) hash ^= Admin.GetHashCode();
      if (LossRate != 0L) hash ^= LossRate.GetHashCode();
      if (CommissionRate != 0L) hash ^= CommissionRate.GetHashCode();
      if (AttributesPerGen != 0) hash ^= AttributesPerGen.GetHashCode();
      if (signatory_ != null) hash ^= Signatory.GetHashCode();
      if (ImageUri.Length != 0) hash ^= ImageUri.GetHashCode();
      if (MaxGenLossRate != 0L) hash ^= MaxGenLossRate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Tick.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Tick);
      }
      if (Ancestor.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Ancestor);
      }
      if (MaxGeneration != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MaxGeneration);
      }
      if (TotalSupply != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(TotalSupply);
      }
      if (Decimals != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Decimals);
      }
      if (attributeLists_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(AttributeLists);
      }
      if (ImageCount != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ImageCount);
      }
      if (issuer_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Issuer);
      }
      if (owner_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Owner);
      }
      if (IssueChainId != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(IssueChainId);
      }
      if (externalInfos_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(ExternalInfos);
      }
      if (TokenName.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(TokenName);
      }
      if (deployer_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Deployer);
      }
      if (crossGenerationConfig_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(CrossGenerationConfig);
      }
      if (IsWeightEnabled != false) {
        output.WriteRawTag(120);
        output.WriteBool(IsWeightEnabled);
      }
      if (admin_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(Admin);
      }
      if (LossRate != 0L) {
        output.WriteRawTag(136, 1);
        output.WriteInt64(LossRate);
      }
      if (CommissionRate != 0L) {
        output.WriteRawTag(144, 1);
        output.WriteInt64(CommissionRate);
      }
      if (AttributesPerGen != 0) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(AttributesPerGen);
      }
      if (signatory_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(Signatory);
      }
      if (ImageUri.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(ImageUri);
      }
      if (MaxGenLossRate != 0L) {
        output.WriteRawTag(176, 1);
        output.WriteInt64(MaxGenLossRate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Tick.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tick);
      }
      if (Ancestor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ancestor);
      }
      if (MaxGeneration != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxGeneration);
      }
      if (TotalSupply != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalSupply);
      }
      if (Decimals != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Decimals);
      }
      if (attributeLists_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AttributeLists);
      }
      if (ImageCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ImageCount);
      }
      if (issuer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Issuer);
      }
      if (owner_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Owner);
      }
      if (IssueChainId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IssueChainId);
      }
      if (externalInfos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExternalInfos);
      }
      if (TokenName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TokenName);
      }
      if (deployer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Deployer);
      }
      if (crossGenerationConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CrossGenerationConfig);
      }
      if (IsWeightEnabled != false) {
        size += 1 + 1;
      }
      if (admin_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Admin);
      }
      if (LossRate != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(LossRate);
      }
      if (CommissionRate != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(CommissionRate);
      }
      if (AttributesPerGen != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(AttributesPerGen);
      }
      if (signatory_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Signatory);
      }
      if (ImageUri.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ImageUri);
      }
      if (MaxGenLossRate != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(MaxGenLossRate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Deployed other) {
      if (other == null) {
        return;
      }
      if (other.Tick.Length != 0) {
        Tick = other.Tick;
      }
      if (other.Ancestor.Length != 0) {
        Ancestor = other.Ancestor;
      }
      if (other.MaxGeneration != 0) {
        MaxGeneration = other.MaxGeneration;
      }
      if (other.TotalSupply != 0L) {
        TotalSupply = other.TotalSupply;
      }
      if (other.Decimals != 0) {
        Decimals = other.Decimals;
      }
      if (other.attributeLists_ != null) {
        if (attributeLists_ == null) {
          AttributeLists = new global::Schrodinger.AttributeLists();
        }
        AttributeLists.MergeFrom(other.AttributeLists);
      }
      if (other.ImageCount != 0) {
        ImageCount = other.ImageCount;
      }
      if (other.issuer_ != null) {
        if (issuer_ == null) {
          Issuer = new global::AElf.Types.Address();
        }
        Issuer.MergeFrom(other.Issuer);
      }
      if (other.owner_ != null) {
        if (owner_ == null) {
          Owner = new global::AElf.Types.Address();
        }
        Owner.MergeFrom(other.Owner);
      }
      if (other.IssueChainId != 0) {
        IssueChainId = other.IssueChainId;
      }
      if (other.externalInfos_ != null) {
        if (externalInfos_ == null) {
          ExternalInfos = new global::Schrodinger.ExternalInfos();
        }
        ExternalInfos.MergeFrom(other.ExternalInfos);
      }
      if (other.TokenName.Length != 0) {
        TokenName = other.TokenName;
      }
      if (other.deployer_ != null) {
        if (deployer_ == null) {
          Deployer = new global::AElf.Types.Address();
        }
        Deployer.MergeFrom(other.Deployer);
      }
      if (other.crossGenerationConfig_ != null) {
        if (crossGenerationConfig_ == null) {
          CrossGenerationConfig = new global::Schrodinger.CrossGenerationConfig();
        }
        CrossGenerationConfig.MergeFrom(other.CrossGenerationConfig);
      }
      if (other.IsWeightEnabled != false) {
        IsWeightEnabled = other.IsWeightEnabled;
      }
      if (other.admin_ != null) {
        if (admin_ == null) {
          Admin = new global::AElf.Types.Address();
        }
        Admin.MergeFrom(other.Admin);
      }
      if (other.LossRate != 0L) {
        LossRate = other.LossRate;
      }
      if (other.CommissionRate != 0L) {
        CommissionRate = other.CommissionRate;
      }
      if (other.AttributesPerGen != 0) {
        AttributesPerGen = other.AttributesPerGen;
      }
      if (other.signatory_ != null) {
        if (signatory_ == null) {
          Signatory = new global::AElf.Types.Address();
        }
        Signatory.MergeFrom(other.Signatory);
      }
      if (other.ImageUri.Length != 0) {
        ImageUri = other.ImageUri;
      }
      if (other.MaxGenLossRate != 0L) {
        MaxGenLossRate = other.MaxGenLossRate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Tick = input.ReadString();
            break;
          }
          case 18: {
            Ancestor = input.ReadString();
            break;
          }
          case 24: {
            MaxGeneration = input.ReadInt32();
            break;
          }
          case 32: {
            TotalSupply = input.ReadInt64();
            break;
          }
          case 40: {
            Decimals = input.ReadInt32();
            break;
          }
          case 50: {
            if (attributeLists_ == null) {
              AttributeLists = new global::Schrodinger.AttributeLists();
            }
            input.ReadMessage(AttributeLists);
            break;
          }
          case 56: {
            ImageCount = input.ReadInt32();
            break;
          }
          case 66: {
            if (issuer_ == null) {
              Issuer = new global::AElf.Types.Address();
            }
            input.ReadMessage(Issuer);
            break;
          }
          case 74: {
            if (owner_ == null) {
              Owner = new global::AElf.Types.Address();
            }
            input.ReadMessage(Owner);
            break;
          }
          case 80: {
            IssueChainId = input.ReadInt32();
            break;
          }
          case 90: {
            if (externalInfos_ == null) {
              ExternalInfos = new global::Schrodinger.ExternalInfos();
            }
            input.ReadMessage(ExternalInfos);
            break;
          }
          case 98: {
            TokenName = input.ReadString();
            break;
          }
          case 106: {
            if (deployer_ == null) {
              Deployer = new global::AElf.Types.Address();
            }
            input.ReadMessage(Deployer);
            break;
          }
          case 114: {
            if (crossGenerationConfig_ == null) {
              CrossGenerationConfig = new global::Schrodinger.CrossGenerationConfig();
            }
            input.ReadMessage(CrossGenerationConfig);
            break;
          }
          case 120: {
            IsWeightEnabled = input.ReadBool();
            break;
          }
          case 130: {
            if (admin_ == null) {
              Admin = new global::AElf.Types.Address();
            }
            input.ReadMessage(Admin);
            break;
          }
          case 136: {
            LossRate = input.ReadInt64();
            break;
          }
          case 144: {
            CommissionRate = input.ReadInt64();
            break;
          }
          case 152: {
            AttributesPerGen = input.ReadInt32();
            break;
          }
          case 162: {
            if (signatory_ == null) {
              Signatory = new global::AElf.Types.Address();
            }
            input.ReadMessage(Signatory);
            break;
          }
          case 170: {
            ImageUri = input.ReadString();
            break;
          }
          case 176: {
            MaxGenLossRate = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Adopted : pb::IMessage<Adopted> {
    private static readonly pb::MessageParser<Adopted> _parser = new pb::MessageParser<Adopted>(() => new Adopted());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Adopted> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Adopted() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Adopted(Adopted other) : this() {
      adoptId_ = other.adoptId_ != null ? other.adoptId_.Clone() : null;
      parent_ = other.parent_;
      parentGen_ = other.parentGen_;
      inputAmount_ = other.inputAmount_;
      lossAmount_ = other.lossAmount_;
      commissionAmount_ = other.commissionAmount_;
      outputAmount_ = other.outputAmount_;
      imageCount_ = other.imageCount_;
      adopter_ = other.adopter_ != null ? other.adopter_.Clone() : null;
      blockHeight_ = other.blockHeight_;
      attributes_ = other.attributes_ != null ? other.attributes_.Clone() : null;
      gen_ = other.gen_;
      ancestor_ = other.ancestor_;
      symbol_ = other.symbol_;
      tokenName_ = other.tokenName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Adopted Clone() {
      return new Adopted(this);
    }

    /// <summary>Field number for the "adopt_id" field.</summary>
    public const int AdoptIdFieldNumber = 1;
    private global::AElf.Types.Hash adoptId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash AdoptId {
      get { return adoptId_; }
      set {
        adoptId_ = value;
      }
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 2;
    private string parent_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "parent_gen" field.</summary>
    public const int ParentGenFieldNumber = 3;
    private int parentGen_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ParentGen {
      get { return parentGen_; }
      set {
        parentGen_ = value;
      }
    }

    /// <summary>Field number for the "input_amount" field.</summary>
    public const int InputAmountFieldNumber = 4;
    private long inputAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long InputAmount {
      get { return inputAmount_; }
      set {
        inputAmount_ = value;
      }
    }

    /// <summary>Field number for the "loss_amount" field.</summary>
    public const int LossAmountFieldNumber = 5;
    private long lossAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LossAmount {
      get { return lossAmount_; }
      set {
        lossAmount_ = value;
      }
    }

    /// <summary>Field number for the "commission_amount" field.</summary>
    public const int CommissionAmountFieldNumber = 6;
    private long commissionAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CommissionAmount {
      get { return commissionAmount_; }
      set {
        commissionAmount_ = value;
      }
    }

    /// <summary>Field number for the "output_amount" field.</summary>
    public const int OutputAmountFieldNumber = 7;
    private long outputAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long OutputAmount {
      get { return outputAmount_; }
      set {
        outputAmount_ = value;
      }
    }

    /// <summary>Field number for the "image_count" field.</summary>
    public const int ImageCountFieldNumber = 8;
    private long imageCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ImageCount {
      get { return imageCount_; }
      set {
        imageCount_ = value;
      }
    }

    /// <summary>Field number for the "adopter" field.</summary>
    public const int AdopterFieldNumber = 9;
    private global::AElf.Types.Address adopter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Adopter {
      get { return adopter_; }
      set {
        adopter_ = value;
      }
    }

    /// <summary>Field number for the "block_height" field.</summary>
    public const int BlockHeightFieldNumber = 10;
    private long blockHeight_;
    /// <summary>
    /// adopt block height
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BlockHeight {
      get { return blockHeight_; }
      set {
        blockHeight_ = value;
      }
    }

    /// <summary>Field number for the "attributes" field.</summary>
    public const int AttributesFieldNumber = 11;
    private global::Schrodinger.Attributes attributes_;
    /// <summary>
    /// generated attributes
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Schrodinger.Attributes Attributes {
      get { return attributes_; }
      set {
        attributes_ = value;
      }
    }

    /// <summary>Field number for the "gen" field.</summary>
    public const int GenFieldNumber = 12;
    private int gen_;
    /// <summary>
    /// generated generation
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Gen {
      get { return gen_; }
      set {
        gen_ = value;
      }
    }

    /// <summary>Field number for the "ancestor" field.</summary>
    public const int AncestorFieldNumber = 13;
    private string ancestor_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ancestor {
      get { return ancestor_; }
      set {
        ancestor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 14;
    private string symbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "token_name" field.</summary>
    public const int TokenNameFieldNumber = 15;
    private string tokenName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TokenName {
      get { return tokenName_; }
      set {
        tokenName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Adopted);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Adopted other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AdoptId, other.AdoptId)) return false;
      if (Parent != other.Parent) return false;
      if (ParentGen != other.ParentGen) return false;
      if (InputAmount != other.InputAmount) return false;
      if (LossAmount != other.LossAmount) return false;
      if (CommissionAmount != other.CommissionAmount) return false;
      if (OutputAmount != other.OutputAmount) return false;
      if (ImageCount != other.ImageCount) return false;
      if (!object.Equals(Adopter, other.Adopter)) return false;
      if (BlockHeight != other.BlockHeight) return false;
      if (!object.Equals(Attributes, other.Attributes)) return false;
      if (Gen != other.Gen) return false;
      if (Ancestor != other.Ancestor) return false;
      if (Symbol != other.Symbol) return false;
      if (TokenName != other.TokenName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (adoptId_ != null) hash ^= AdoptId.GetHashCode();
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (ParentGen != 0) hash ^= ParentGen.GetHashCode();
      if (InputAmount != 0L) hash ^= InputAmount.GetHashCode();
      if (LossAmount != 0L) hash ^= LossAmount.GetHashCode();
      if (CommissionAmount != 0L) hash ^= CommissionAmount.GetHashCode();
      if (OutputAmount != 0L) hash ^= OutputAmount.GetHashCode();
      if (ImageCount != 0L) hash ^= ImageCount.GetHashCode();
      if (adopter_ != null) hash ^= Adopter.GetHashCode();
      if (BlockHeight != 0L) hash ^= BlockHeight.GetHashCode();
      if (attributes_ != null) hash ^= Attributes.GetHashCode();
      if (Gen != 0) hash ^= Gen.GetHashCode();
      if (Ancestor.Length != 0) hash ^= Ancestor.GetHashCode();
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      if (TokenName.Length != 0) hash ^= TokenName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (adoptId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AdoptId);
      }
      if (Parent.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Parent);
      }
      if (ParentGen != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ParentGen);
      }
      if (InputAmount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(InputAmount);
      }
      if (LossAmount != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(LossAmount);
      }
      if (CommissionAmount != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(CommissionAmount);
      }
      if (OutputAmount != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(OutputAmount);
      }
      if (ImageCount != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(ImageCount);
      }
      if (adopter_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Adopter);
      }
      if (BlockHeight != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(BlockHeight);
      }
      if (attributes_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Attributes);
      }
      if (Gen != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Gen);
      }
      if (Ancestor.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Ancestor);
      }
      if (Symbol.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(Symbol);
      }
      if (TokenName.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(TokenName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (adoptId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AdoptId);
      }
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (ParentGen != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ParentGen);
      }
      if (InputAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(InputAmount);
      }
      if (LossAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LossAmount);
      }
      if (CommissionAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CommissionAmount);
      }
      if (OutputAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OutputAmount);
      }
      if (ImageCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ImageCount);
      }
      if (adopter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Adopter);
      }
      if (BlockHeight != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BlockHeight);
      }
      if (attributes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Attributes);
      }
      if (Gen != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Gen);
      }
      if (Ancestor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ancestor);
      }
      if (Symbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (TokenName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TokenName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Adopted other) {
      if (other == null) {
        return;
      }
      if (other.adoptId_ != null) {
        if (adoptId_ == null) {
          AdoptId = new global::AElf.Types.Hash();
        }
        AdoptId.MergeFrom(other.AdoptId);
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.ParentGen != 0) {
        ParentGen = other.ParentGen;
      }
      if (other.InputAmount != 0L) {
        InputAmount = other.InputAmount;
      }
      if (other.LossAmount != 0L) {
        LossAmount = other.LossAmount;
      }
      if (other.CommissionAmount != 0L) {
        CommissionAmount = other.CommissionAmount;
      }
      if (other.OutputAmount != 0L) {
        OutputAmount = other.OutputAmount;
      }
      if (other.ImageCount != 0L) {
        ImageCount = other.ImageCount;
      }
      if (other.adopter_ != null) {
        if (adopter_ == null) {
          Adopter = new global::AElf.Types.Address();
        }
        Adopter.MergeFrom(other.Adopter);
      }
      if (other.BlockHeight != 0L) {
        BlockHeight = other.BlockHeight;
      }
      if (other.attributes_ != null) {
        if (attributes_ == null) {
          Attributes = new global::Schrodinger.Attributes();
        }
        Attributes.MergeFrom(other.Attributes);
      }
      if (other.Gen != 0) {
        Gen = other.Gen;
      }
      if (other.Ancestor.Length != 0) {
        Ancestor = other.Ancestor;
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      if (other.TokenName.Length != 0) {
        TokenName = other.TokenName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (adoptId_ == null) {
              AdoptId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(AdoptId);
            break;
          }
          case 18: {
            Parent = input.ReadString();
            break;
          }
          case 24: {
            ParentGen = input.ReadInt32();
            break;
          }
          case 32: {
            InputAmount = input.ReadInt64();
            break;
          }
          case 40: {
            LossAmount = input.ReadInt64();
            break;
          }
          case 48: {
            CommissionAmount = input.ReadInt64();
            break;
          }
          case 56: {
            OutputAmount = input.ReadInt64();
            break;
          }
          case 64: {
            ImageCount = input.ReadInt64();
            break;
          }
          case 74: {
            if (adopter_ == null) {
              Adopter = new global::AElf.Types.Address();
            }
            input.ReadMessage(Adopter);
            break;
          }
          case 80: {
            BlockHeight = input.ReadInt64();
            break;
          }
          case 90: {
            if (attributes_ == null) {
              Attributes = new global::Schrodinger.Attributes();
            }
            input.ReadMessage(Attributes);
            break;
          }
          case 96: {
            Gen = input.ReadInt32();
            break;
          }
          case 106: {
            Ancestor = input.ReadString();
            break;
          }
          case 114: {
            Symbol = input.ReadString();
            break;
          }
          case 122: {
            TokenName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Confirmed : pb::IMessage<Confirmed> {
    private static readonly pb::MessageParser<Confirmed> _parser = new pb::MessageParser<Confirmed>(() => new Confirmed());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Confirmed> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Confirmed() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Confirmed(Confirmed other) : this() {
      adoptId_ = other.adoptId_ != null ? other.adoptId_.Clone() : null;
      parent_ = other.parent_;
      symbol_ = other.symbol_;
      totalSupply_ = other.totalSupply_;
      decimals_ = other.decimals_;
      gen_ = other.gen_;
      attributes_ = other.attributes_ != null ? other.attributes_.Clone() : null;
      issuer_ = other.issuer_ != null ? other.issuer_.Clone() : null;
      owner_ = other.owner_ != null ? other.owner_.Clone() : null;
      issueChainId_ = other.issueChainId_;
      externalInfos_ = other.externalInfos_ != null ? other.externalInfos_.Clone() : null;
      tokenName_ = other.tokenName_;
      deployer_ = other.deployer_ != null ? other.deployer_.Clone() : null;
      imageUri_ = other.imageUri_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Confirmed Clone() {
      return new Confirmed(this);
    }

    /// <summary>Field number for the "adopt_id" field.</summary>
    public const int AdoptIdFieldNumber = 1;
    private global::AElf.Types.Hash adoptId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash AdoptId {
      get { return adoptId_; }
      set {
        adoptId_ = value;
      }
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 2;
    private string parent_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 3;
    private string symbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "total_supply" field.</summary>
    public const int TotalSupplyFieldNumber = 4;
    private long totalSupply_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalSupply {
      get { return totalSupply_; }
      set {
        totalSupply_ = value;
      }
    }

    /// <summary>Field number for the "decimals" field.</summary>
    public const int DecimalsFieldNumber = 5;
    private int decimals_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Decimals {
      get { return decimals_; }
      set {
        decimals_ = value;
      }
    }

    /// <summary>Field number for the "gen" field.</summary>
    public const int GenFieldNumber = 6;
    private int gen_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Gen {
      get { return gen_; }
      set {
        gen_ = value;
      }
    }

    /// <summary>Field number for the "attributes" field.</summary>
    public const int AttributesFieldNumber = 7;
    private global::Schrodinger.Attributes attributes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Schrodinger.Attributes Attributes {
      get { return attributes_; }
      set {
        attributes_ = value;
      }
    }

    /// <summary>Field number for the "issuer" field.</summary>
    public const int IssuerFieldNumber = 8;
    private global::AElf.Types.Address issuer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Issuer {
      get { return issuer_; }
      set {
        issuer_ = value;
      }
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 9;
    private global::AElf.Types.Address owner_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Owner {
      get { return owner_; }
      set {
        owner_ = value;
      }
    }

    /// <summary>Field number for the "issue_chain_id" field.</summary>
    public const int IssueChainIdFieldNumber = 10;
    private int issueChainId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IssueChainId {
      get { return issueChainId_; }
      set {
        issueChainId_ = value;
      }
    }

    /// <summary>Field number for the "external_infos" field.</summary>
    public const int ExternalInfosFieldNumber = 11;
    private global::Schrodinger.ExternalInfos externalInfos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Schrodinger.ExternalInfos ExternalInfos {
      get { return externalInfos_; }
      set {
        externalInfos_ = value;
      }
    }

    /// <summary>Field number for the "token_name" field.</summary>
    public const int TokenNameFieldNumber = 12;
    private string tokenName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TokenName {
      get { return tokenName_; }
      set {
        tokenName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "deployer" field.</summary>
    public const int DeployerFieldNumber = 13;
    private global::AElf.Types.Address deployer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Deployer {
      get { return deployer_; }
      set {
        deployer_ = value;
      }
    }

    /// <summary>Field number for the "image_uri" field.</summary>
    public const int ImageUriFieldNumber = 14;
    private string imageUri_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImageUri {
      get { return imageUri_; }
      set {
        imageUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Confirmed);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Confirmed other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AdoptId, other.AdoptId)) return false;
      if (Parent != other.Parent) return false;
      if (Symbol != other.Symbol) return false;
      if (TotalSupply != other.TotalSupply) return false;
      if (Decimals != other.Decimals) return false;
      if (Gen != other.Gen) return false;
      if (!object.Equals(Attributes, other.Attributes)) return false;
      if (!object.Equals(Issuer, other.Issuer)) return false;
      if (!object.Equals(Owner, other.Owner)) return false;
      if (IssueChainId != other.IssueChainId) return false;
      if (!object.Equals(ExternalInfos, other.ExternalInfos)) return false;
      if (TokenName != other.TokenName) return false;
      if (!object.Equals(Deployer, other.Deployer)) return false;
      if (ImageUri != other.ImageUri) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (adoptId_ != null) hash ^= AdoptId.GetHashCode();
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      if (TotalSupply != 0L) hash ^= TotalSupply.GetHashCode();
      if (Decimals != 0) hash ^= Decimals.GetHashCode();
      if (Gen != 0) hash ^= Gen.GetHashCode();
      if (attributes_ != null) hash ^= Attributes.GetHashCode();
      if (issuer_ != null) hash ^= Issuer.GetHashCode();
      if (owner_ != null) hash ^= Owner.GetHashCode();
      if (IssueChainId != 0) hash ^= IssueChainId.GetHashCode();
      if (externalInfos_ != null) hash ^= ExternalInfos.GetHashCode();
      if (TokenName.Length != 0) hash ^= TokenName.GetHashCode();
      if (deployer_ != null) hash ^= Deployer.GetHashCode();
      if (ImageUri.Length != 0) hash ^= ImageUri.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (adoptId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AdoptId);
      }
      if (Parent.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Parent);
      }
      if (Symbol.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Symbol);
      }
      if (TotalSupply != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(TotalSupply);
      }
      if (Decimals != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Decimals);
      }
      if (Gen != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Gen);
      }
      if (attributes_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Attributes);
      }
      if (issuer_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Issuer);
      }
      if (owner_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Owner);
      }
      if (IssueChainId != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(IssueChainId);
      }
      if (externalInfos_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(ExternalInfos);
      }
      if (TokenName.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(TokenName);
      }
      if (deployer_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Deployer);
      }
      if (ImageUri.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(ImageUri);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (adoptId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AdoptId);
      }
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (Symbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (TotalSupply != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalSupply);
      }
      if (Decimals != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Decimals);
      }
      if (Gen != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Gen);
      }
      if (attributes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Attributes);
      }
      if (issuer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Issuer);
      }
      if (owner_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Owner);
      }
      if (IssueChainId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IssueChainId);
      }
      if (externalInfos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExternalInfos);
      }
      if (TokenName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TokenName);
      }
      if (deployer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Deployer);
      }
      if (ImageUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageUri);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Confirmed other) {
      if (other == null) {
        return;
      }
      if (other.adoptId_ != null) {
        if (adoptId_ == null) {
          AdoptId = new global::AElf.Types.Hash();
        }
        AdoptId.MergeFrom(other.AdoptId);
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      if (other.TotalSupply != 0L) {
        TotalSupply = other.TotalSupply;
      }
      if (other.Decimals != 0) {
        Decimals = other.Decimals;
      }
      if (other.Gen != 0) {
        Gen = other.Gen;
      }
      if (other.attributes_ != null) {
        if (attributes_ == null) {
          Attributes = new global::Schrodinger.Attributes();
        }
        Attributes.MergeFrom(other.Attributes);
      }
      if (other.issuer_ != null) {
        if (issuer_ == null) {
          Issuer = new global::AElf.Types.Address();
        }
        Issuer.MergeFrom(other.Issuer);
      }
      if (other.owner_ != null) {
        if (owner_ == null) {
          Owner = new global::AElf.Types.Address();
        }
        Owner.MergeFrom(other.Owner);
      }
      if (other.IssueChainId != 0) {
        IssueChainId = other.IssueChainId;
      }
      if (other.externalInfos_ != null) {
        if (externalInfos_ == null) {
          ExternalInfos = new global::Schrodinger.ExternalInfos();
        }
        ExternalInfos.MergeFrom(other.ExternalInfos);
      }
      if (other.TokenName.Length != 0) {
        TokenName = other.TokenName;
      }
      if (other.deployer_ != null) {
        if (deployer_ == null) {
          Deployer = new global::AElf.Types.Address();
        }
        Deployer.MergeFrom(other.Deployer);
      }
      if (other.ImageUri.Length != 0) {
        ImageUri = other.ImageUri;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (adoptId_ == null) {
              AdoptId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(AdoptId);
            break;
          }
          case 18: {
            Parent = input.ReadString();
            break;
          }
          case 26: {
            Symbol = input.ReadString();
            break;
          }
          case 32: {
            TotalSupply = input.ReadInt64();
            break;
          }
          case 40: {
            Decimals = input.ReadInt32();
            break;
          }
          case 48: {
            Gen = input.ReadInt32();
            break;
          }
          case 58: {
            if (attributes_ == null) {
              Attributes = new global::Schrodinger.Attributes();
            }
            input.ReadMessage(Attributes);
            break;
          }
          case 66: {
            if (issuer_ == null) {
              Issuer = new global::AElf.Types.Address();
            }
            input.ReadMessage(Issuer);
            break;
          }
          case 74: {
            if (owner_ == null) {
              Owner = new global::AElf.Types.Address();
            }
            input.ReadMessage(Owner);
            break;
          }
          case 80: {
            IssueChainId = input.ReadInt32();
            break;
          }
          case 90: {
            if (externalInfos_ == null) {
              ExternalInfos = new global::Schrodinger.ExternalInfos();
            }
            input.ReadMessage(ExternalInfos);
            break;
          }
          case 98: {
            TokenName = input.ReadString();
            break;
          }
          case 106: {
            if (deployer_ == null) {
              Deployer = new global::AElf.Types.Address();
            }
            input.ReadMessage(Deployer);
            break;
          }
          case 114: {
            ImageUri = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Rerolled : pb::IMessage<Rerolled> {
    private static readonly pb::MessageParser<Rerolled> _parser = new pb::MessageParser<Rerolled>(() => new Rerolled());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Rerolled> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rerolled() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rerolled(Rerolled other) : this() {
      symbol_ = other.symbol_;
      ancestor_ = other.ancestor_;
      amount_ = other.amount_;
      recipient_ = other.recipient_ != null ? other.recipient_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rerolled Clone() {
      return new Rerolled(this);
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 1;
    private string symbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ancestor" field.</summary>
    public const int AncestorFieldNumber = 2;
    private string ancestor_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ancestor {
      get { return ancestor_; }
      set {
        ancestor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "recipient" field.</summary>
    public const int RecipientFieldNumber = 4;
    private global::AElf.Types.Address recipient_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Recipient {
      get { return recipient_; }
      set {
        recipient_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Rerolled);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Rerolled other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Symbol != other.Symbol) return false;
      if (Ancestor != other.Ancestor) return false;
      if (Amount != other.Amount) return false;
      if (!object.Equals(Recipient, other.Recipient)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      if (Ancestor.Length != 0) hash ^= Ancestor.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (recipient_ != null) hash ^= Recipient.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Symbol.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Symbol);
      }
      if (Ancestor.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Ancestor);
      }
      if (Amount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Amount);
      }
      if (recipient_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Recipient);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Symbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (Ancestor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ancestor);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (recipient_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Recipient);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Rerolled other) {
      if (other == null) {
        return;
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      if (other.Ancestor.Length != 0) {
        Ancestor = other.Ancestor;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      if (other.recipient_ != null) {
        if (recipient_ == null) {
          Recipient = new global::AElf.Types.Address();
        }
        Recipient.MergeFrom(other.Recipient);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Symbol = input.ReadString();
            break;
          }
          case 18: {
            Ancestor = input.ReadString();
            break;
          }
          case 24: {
            Amount = input.ReadInt64();
            break;
          }
          case 34: {
            if (recipient_ == null) {
              Recipient = new global::AElf.Types.Address();
            }
            input.ReadMessage(Recipient);
            break;
          }
        }
      }
    }

  }

  public sealed partial class FixedAttributeSet : pb::IMessage<FixedAttributeSet> {
    private static readonly pb::MessageParser<FixedAttributeSet> _parser = new pb::MessageParser<FixedAttributeSet>(() => new FixedAttributeSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FixedAttributeSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FixedAttributeSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FixedAttributeSet(FixedAttributeSet other) : this() {
      tick_ = other.tick_;
      removedAttribute_ = other.removedAttribute_ != null ? other.removedAttribute_.Clone() : null;
      addedAttribute_ = other.addedAttribute_ != null ? other.addedAttribute_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FixedAttributeSet Clone() {
      return new FixedAttributeSet(this);
    }

    /// <summary>Field number for the "tick" field.</summary>
    public const int TickFieldNumber = 1;
    private string tick_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tick {
      get { return tick_; }
      set {
        tick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "removed_attribute" field.</summary>
    public const int RemovedAttributeFieldNumber = 2;
    private global::Schrodinger.AttributeSet removedAttribute_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Schrodinger.AttributeSet RemovedAttribute {
      get { return removedAttribute_; }
      set {
        removedAttribute_ = value;
      }
    }

    /// <summary>Field number for the "added_attribute" field.</summary>
    public const int AddedAttributeFieldNumber = 3;
    private global::Schrodinger.AttributeSet addedAttribute_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Schrodinger.AttributeSet AddedAttribute {
      get { return addedAttribute_; }
      set {
        addedAttribute_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FixedAttributeSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FixedAttributeSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tick != other.Tick) return false;
      if (!object.Equals(RemovedAttribute, other.RemovedAttribute)) return false;
      if (!object.Equals(AddedAttribute, other.AddedAttribute)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Tick.Length != 0) hash ^= Tick.GetHashCode();
      if (removedAttribute_ != null) hash ^= RemovedAttribute.GetHashCode();
      if (addedAttribute_ != null) hash ^= AddedAttribute.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Tick.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Tick);
      }
      if (removedAttribute_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RemovedAttribute);
      }
      if (addedAttribute_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AddedAttribute);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Tick.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tick);
      }
      if (removedAttribute_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RemovedAttribute);
      }
      if (addedAttribute_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddedAttribute);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FixedAttributeSet other) {
      if (other == null) {
        return;
      }
      if (other.Tick.Length != 0) {
        Tick = other.Tick;
      }
      if (other.removedAttribute_ != null) {
        if (removedAttribute_ == null) {
          RemovedAttribute = new global::Schrodinger.AttributeSet();
        }
        RemovedAttribute.MergeFrom(other.RemovedAttribute);
      }
      if (other.addedAttribute_ != null) {
        if (addedAttribute_ == null) {
          AddedAttribute = new global::Schrodinger.AttributeSet();
        }
        AddedAttribute.MergeFrom(other.AddedAttribute);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Tick = input.ReadString();
            break;
          }
          case 18: {
            if (removedAttribute_ == null) {
              RemovedAttribute = new global::Schrodinger.AttributeSet();
            }
            input.ReadMessage(RemovedAttribute);
            break;
          }
          case 26: {
            if (addedAttribute_ == null) {
              AddedAttribute = new global::Schrodinger.AttributeSet();
            }
            input.ReadMessage(AddedAttribute);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RandomAttributeSet : pb::IMessage<RandomAttributeSet> {
    private static readonly pb::MessageParser<RandomAttributeSet> _parser = new pb::MessageParser<RandomAttributeSet>(() => new RandomAttributeSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RandomAttributeSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RandomAttributeSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RandomAttributeSet(RandomAttributeSet other) : this() {
      tick_ = other.tick_;
      removedAttribute_ = other.removedAttribute_ != null ? other.removedAttribute_.Clone() : null;
      addedAttribute_ = other.addedAttribute_ != null ? other.addedAttribute_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RandomAttributeSet Clone() {
      return new RandomAttributeSet(this);
    }

    /// <summary>Field number for the "tick" field.</summary>
    public const int TickFieldNumber = 1;
    private string tick_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tick {
      get { return tick_; }
      set {
        tick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "removed_attribute" field.</summary>
    public const int RemovedAttributeFieldNumber = 2;
    private global::Schrodinger.AttributeSet removedAttribute_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Schrodinger.AttributeSet RemovedAttribute {
      get { return removedAttribute_; }
      set {
        removedAttribute_ = value;
      }
    }

    /// <summary>Field number for the "added_attribute" field.</summary>
    public const int AddedAttributeFieldNumber = 3;
    private global::Schrodinger.AttributeSet addedAttribute_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Schrodinger.AttributeSet AddedAttribute {
      get { return addedAttribute_; }
      set {
        addedAttribute_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RandomAttributeSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RandomAttributeSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tick != other.Tick) return false;
      if (!object.Equals(RemovedAttribute, other.RemovedAttribute)) return false;
      if (!object.Equals(AddedAttribute, other.AddedAttribute)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Tick.Length != 0) hash ^= Tick.GetHashCode();
      if (removedAttribute_ != null) hash ^= RemovedAttribute.GetHashCode();
      if (addedAttribute_ != null) hash ^= AddedAttribute.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Tick.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Tick);
      }
      if (removedAttribute_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RemovedAttribute);
      }
      if (addedAttribute_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AddedAttribute);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Tick.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tick);
      }
      if (removedAttribute_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RemovedAttribute);
      }
      if (addedAttribute_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddedAttribute);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RandomAttributeSet other) {
      if (other == null) {
        return;
      }
      if (other.Tick.Length != 0) {
        Tick = other.Tick;
      }
      if (other.removedAttribute_ != null) {
        if (removedAttribute_ == null) {
          RemovedAttribute = new global::Schrodinger.AttributeSet();
        }
        RemovedAttribute.MergeFrom(other.RemovedAttribute);
      }
      if (other.addedAttribute_ != null) {
        if (addedAttribute_ == null) {
          AddedAttribute = new global::Schrodinger.AttributeSet();
        }
        AddedAttribute.MergeFrom(other.AddedAttribute);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Tick = input.ReadString();
            break;
          }
          case 18: {
            if (removedAttribute_ == null) {
              RemovedAttribute = new global::Schrodinger.AttributeSet();
            }
            input.ReadMessage(RemovedAttribute);
            break;
          }
          case 26: {
            if (addedAttribute_ == null) {
              AddedAttribute = new global::Schrodinger.AttributeSet();
            }
            input.ReadMessage(AddedAttribute);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AttributesPerGenerationSet : pb::IMessage<AttributesPerGenerationSet> {
    private static readonly pb::MessageParser<AttributesPerGenerationSet> _parser = new pb::MessageParser<AttributesPerGenerationSet>(() => new AttributesPerGenerationSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AttributesPerGenerationSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttributesPerGenerationSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttributesPerGenerationSet(AttributesPerGenerationSet other) : this() {
      tick_ = other.tick_;
      attributesPerGen_ = other.attributesPerGen_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttributesPerGenerationSet Clone() {
      return new AttributesPerGenerationSet(this);
    }

    /// <summary>Field number for the "tick" field.</summary>
    public const int TickFieldNumber = 1;
    private string tick_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tick {
      get { return tick_; }
      set {
        tick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "attributes_per_gen" field.</summary>
    public const int AttributesPerGenFieldNumber = 2;
    private int attributesPerGen_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AttributesPerGen {
      get { return attributesPerGen_; }
      set {
        attributesPerGen_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AttributesPerGenerationSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AttributesPerGenerationSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tick != other.Tick) return false;
      if (AttributesPerGen != other.AttributesPerGen) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Tick.Length != 0) hash ^= Tick.GetHashCode();
      if (AttributesPerGen != 0) hash ^= AttributesPerGen.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Tick.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Tick);
      }
      if (AttributesPerGen != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(AttributesPerGen);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Tick.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tick);
      }
      if (AttributesPerGen != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AttributesPerGen);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AttributesPerGenerationSet other) {
      if (other == null) {
        return;
      }
      if (other.Tick.Length != 0) {
        Tick = other.Tick;
      }
      if (other.AttributesPerGen != 0) {
        AttributesPerGen = other.AttributesPerGen;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Tick = input.ReadString();
            break;
          }
          case 16: {
            AttributesPerGen = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ImageCountSet : pb::IMessage<ImageCountSet> {
    private static readonly pb::MessageParser<ImageCountSet> _parser = new pb::MessageParser<ImageCountSet>(() => new ImageCountSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImageCountSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImageCountSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImageCountSet(ImageCountSet other) : this() {
      tick_ = other.tick_;
      imageCount_ = other.imageCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImageCountSet Clone() {
      return new ImageCountSet(this);
    }

    /// <summary>Field number for the "tick" field.</summary>
    public const int TickFieldNumber = 1;
    private string tick_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tick {
      get { return tick_; }
      set {
        tick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "image_count" field.</summary>
    public const int ImageCountFieldNumber = 2;
    private int imageCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ImageCount {
      get { return imageCount_; }
      set {
        imageCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImageCountSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImageCountSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tick != other.Tick) return false;
      if (ImageCount != other.ImageCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Tick.Length != 0) hash ^= Tick.GetHashCode();
      if (ImageCount != 0) hash ^= ImageCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Tick.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Tick);
      }
      if (ImageCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ImageCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Tick.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tick);
      }
      if (ImageCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ImageCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImageCountSet other) {
      if (other == null) {
        return;
      }
      if (other.Tick.Length != 0) {
        Tick = other.Tick;
      }
      if (other.ImageCount != 0) {
        ImageCount = other.ImageCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Tick = input.ReadString();
            break;
          }
          case 16: {
            ImageCount = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MaxGenerationSet : pb::IMessage<MaxGenerationSet> {
    private static readonly pb::MessageParser<MaxGenerationSet> _parser = new pb::MessageParser<MaxGenerationSet>(() => new MaxGenerationSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MaxGenerationSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MaxGenerationSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MaxGenerationSet(MaxGenerationSet other) : this() {
      tick_ = other.tick_;
      gen_ = other.gen_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MaxGenerationSet Clone() {
      return new MaxGenerationSet(this);
    }

    /// <summary>Field number for the "tick" field.</summary>
    public const int TickFieldNumber = 1;
    private string tick_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tick {
      get { return tick_; }
      set {
        tick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gen" field.</summary>
    public const int GenFieldNumber = 2;
    private int gen_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Gen {
      get { return gen_; }
      set {
        gen_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MaxGenerationSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MaxGenerationSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tick != other.Tick) return false;
      if (Gen != other.Gen) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Tick.Length != 0) hash ^= Tick.GetHashCode();
      if (Gen != 0) hash ^= Gen.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Tick.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Tick);
      }
      if (Gen != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Gen);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Tick.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tick);
      }
      if (Gen != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Gen);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MaxGenerationSet other) {
      if (other == null) {
        return;
      }
      if (other.Tick.Length != 0) {
        Tick = other.Tick;
      }
      if (other.Gen != 0) {
        Gen = other.Gen;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Tick = input.ReadString();
            break;
          }
          case 16: {
            Gen = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RatesSet : pb::IMessage<RatesSet> {
    private static readonly pb::MessageParser<RatesSet> _parser = new pb::MessageParser<RatesSet>(() => new RatesSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RatesSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatesSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatesSet(RatesSet other) : this() {
      tick_ = other.tick_;
      lossRate_ = other.lossRate_;
      commissionRate_ = other.commissionRate_;
      maxGenLossRate_ = other.maxGenLossRate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RatesSet Clone() {
      return new RatesSet(this);
    }

    /// <summary>Field number for the "tick" field.</summary>
    public const int TickFieldNumber = 1;
    private string tick_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tick {
      get { return tick_; }
      set {
        tick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "loss_rate" field.</summary>
    public const int LossRateFieldNumber = 2;
    private long lossRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LossRate {
      get { return lossRate_; }
      set {
        lossRate_ = value;
      }
    }

    /// <summary>Field number for the "commission_rate" field.</summary>
    public const int CommissionRateFieldNumber = 3;
    private long commissionRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CommissionRate {
      get { return commissionRate_; }
      set {
        commissionRate_ = value;
      }
    }

    /// <summary>Field number for the "max_gen_loss_rate" field.</summary>
    public const int MaxGenLossRateFieldNumber = 4;
    private long maxGenLossRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MaxGenLossRate {
      get { return maxGenLossRate_; }
      set {
        maxGenLossRate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RatesSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RatesSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tick != other.Tick) return false;
      if (LossRate != other.LossRate) return false;
      if (CommissionRate != other.CommissionRate) return false;
      if (MaxGenLossRate != other.MaxGenLossRate) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Tick.Length != 0) hash ^= Tick.GetHashCode();
      if (LossRate != 0L) hash ^= LossRate.GetHashCode();
      if (CommissionRate != 0L) hash ^= CommissionRate.GetHashCode();
      if (MaxGenLossRate != 0L) hash ^= MaxGenLossRate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Tick.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Tick);
      }
      if (LossRate != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(LossRate);
      }
      if (CommissionRate != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(CommissionRate);
      }
      if (MaxGenLossRate != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(MaxGenLossRate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Tick.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tick);
      }
      if (LossRate != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LossRate);
      }
      if (CommissionRate != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CommissionRate);
      }
      if (MaxGenLossRate != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxGenLossRate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RatesSet other) {
      if (other == null) {
        return;
      }
      if (other.Tick.Length != 0) {
        Tick = other.Tick;
      }
      if (other.LossRate != 0L) {
        LossRate = other.LossRate;
      }
      if (other.CommissionRate != 0L) {
        CommissionRate = other.CommissionRate;
      }
      if (other.MaxGenLossRate != 0L) {
        MaxGenLossRate = other.MaxGenLossRate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Tick = input.ReadString();
            break;
          }
          case 16: {
            LossRate = input.ReadInt64();
            break;
          }
          case 24: {
            CommissionRate = input.ReadInt64();
            break;
          }
          case 32: {
            MaxGenLossRate = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RecipientSet : pb::IMessage<RecipientSet> {
    private static readonly pb::MessageParser<RecipientSet> _parser = new pb::MessageParser<RecipientSet>(() => new RecipientSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RecipientSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecipientSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecipientSet(RecipientSet other) : this() {
      tick_ = other.tick_;
      recipient_ = other.recipient_ != null ? other.recipient_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecipientSet Clone() {
      return new RecipientSet(this);
    }

    /// <summary>Field number for the "tick" field.</summary>
    public const int TickFieldNumber = 1;
    private string tick_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tick {
      get { return tick_; }
      set {
        tick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "recipient" field.</summary>
    public const int RecipientFieldNumber = 2;
    private global::AElf.Types.Address recipient_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Recipient {
      get { return recipient_; }
      set {
        recipient_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RecipientSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RecipientSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tick != other.Tick) return false;
      if (!object.Equals(Recipient, other.Recipient)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Tick.Length != 0) hash ^= Tick.GetHashCode();
      if (recipient_ != null) hash ^= Recipient.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Tick.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Tick);
      }
      if (recipient_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Recipient);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Tick.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tick);
      }
      if (recipient_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Recipient);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RecipientSet other) {
      if (other == null) {
        return;
      }
      if (other.Tick.Length != 0) {
        Tick = other.Tick;
      }
      if (other.recipient_ != null) {
        if (recipient_ == null) {
          Recipient = new global::AElf.Types.Address();
        }
        Recipient.MergeFrom(other.Recipient);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Tick = input.ReadString();
            break;
          }
          case 18: {
            if (recipient_ == null) {
              Recipient = new global::AElf.Types.Address();
            }
            input.ReadMessage(Recipient);
            break;
          }
        }
      }
    }

  }

  public sealed partial class InscriptionAdminSet : pb::IMessage<InscriptionAdminSet> {
    private static readonly pb::MessageParser<InscriptionAdminSet> _parser = new pb::MessageParser<InscriptionAdminSet>(() => new InscriptionAdminSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InscriptionAdminSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[55]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InscriptionAdminSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InscriptionAdminSet(InscriptionAdminSet other) : this() {
      tick_ = other.tick_;
      admin_ = other.admin_ != null ? other.admin_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InscriptionAdminSet Clone() {
      return new InscriptionAdminSet(this);
    }

    /// <summary>Field number for the "tick" field.</summary>
    public const int TickFieldNumber = 1;
    private string tick_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tick {
      get { return tick_; }
      set {
        tick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "admin" field.</summary>
    public const int AdminFieldNumber = 2;
    private global::AElf.Types.Address admin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Admin {
      get { return admin_; }
      set {
        admin_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InscriptionAdminSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InscriptionAdminSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tick != other.Tick) return false;
      if (!object.Equals(Admin, other.Admin)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Tick.Length != 0) hash ^= Tick.GetHashCode();
      if (admin_ != null) hash ^= Admin.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Tick.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Tick);
      }
      if (admin_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Admin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Tick.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tick);
      }
      if (admin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Admin);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InscriptionAdminSet other) {
      if (other == null) {
        return;
      }
      if (other.Tick.Length != 0) {
        Tick = other.Tick;
      }
      if (other.admin_ != null) {
        if (admin_ == null) {
          Admin = new global::AElf.Types.Address();
        }
        Admin.MergeFrom(other.Admin);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Tick = input.ReadString();
            break;
          }
          case 18: {
            if (admin_ == null) {
              Admin = new global::AElf.Types.Address();
            }
            input.ReadMessage(Admin);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CrossGenerationConfigSet : pb::IMessage<CrossGenerationConfigSet> {
    private static readonly pb::MessageParser<CrossGenerationConfigSet> _parser = new pb::MessageParser<CrossGenerationConfigSet>(() => new CrossGenerationConfigSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CrossGenerationConfigSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[56]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrossGenerationConfigSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrossGenerationConfigSet(CrossGenerationConfigSet other) : this() {
      tick_ = other.tick_;
      crossGenerationConfig_ = other.crossGenerationConfig_ != null ? other.crossGenerationConfig_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrossGenerationConfigSet Clone() {
      return new CrossGenerationConfigSet(this);
    }

    /// <summary>Field number for the "tick" field.</summary>
    public const int TickFieldNumber = 1;
    private string tick_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tick {
      get { return tick_; }
      set {
        tick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cross_generation_config" field.</summary>
    public const int CrossGenerationConfigFieldNumber = 2;
    private global::Schrodinger.CrossGenerationConfig crossGenerationConfig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Schrodinger.CrossGenerationConfig CrossGenerationConfig {
      get { return crossGenerationConfig_; }
      set {
        crossGenerationConfig_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CrossGenerationConfigSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CrossGenerationConfigSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tick != other.Tick) return false;
      if (!object.Equals(CrossGenerationConfig, other.CrossGenerationConfig)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Tick.Length != 0) hash ^= Tick.GetHashCode();
      if (crossGenerationConfig_ != null) hash ^= CrossGenerationConfig.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Tick.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Tick);
      }
      if (crossGenerationConfig_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CrossGenerationConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Tick.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tick);
      }
      if (crossGenerationConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CrossGenerationConfig);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CrossGenerationConfigSet other) {
      if (other == null) {
        return;
      }
      if (other.Tick.Length != 0) {
        Tick = other.Tick;
      }
      if (other.crossGenerationConfig_ != null) {
        if (crossGenerationConfig_ == null) {
          CrossGenerationConfig = new global::Schrodinger.CrossGenerationConfig();
        }
        CrossGenerationConfig.MergeFrom(other.CrossGenerationConfig);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Tick = input.ReadString();
            break;
          }
          case 18: {
            if (crossGenerationConfig_ == null) {
              CrossGenerationConfig = new global::Schrodinger.CrossGenerationConfig();
            }
            input.ReadMessage(CrossGenerationConfig);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ConfigSet : pb::IMessage<ConfigSet> {
    private static readonly pb::MessageParser<ConfigSet> _parser = new pb::MessageParser<ConfigSet>(() => new ConfigSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConfigSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[57]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfigSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfigSet(ConfigSet other) : this() {
      config_ = other.config_ != null ? other.config_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfigSet Clone() {
      return new ConfigSet(this);
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 1;
    private global::Schrodinger.Config config_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Schrodinger.Config Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConfigSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConfigSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Config, other.Config)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (config_ != null) hash ^= Config.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (config_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Config);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConfigSet other) {
      if (other == null) {
        return;
      }
      if (other.config_ != null) {
        if (config_ == null) {
          Config = new global::Schrodinger.Config();
        }
        Config.MergeFrom(other.Config);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (config_ == null) {
              Config = new global::Schrodinger.Config();
            }
            input.ReadMessage(Config);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MaxGenerationConfigSet : pb::IMessage<MaxGenerationConfigSet> {
    private static readonly pb::MessageParser<MaxGenerationConfigSet> _parser = new pb::MessageParser<MaxGenerationConfigSet>(() => new MaxGenerationConfigSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MaxGenerationConfigSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[58]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MaxGenerationConfigSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MaxGenerationConfigSet(MaxGenerationConfigSet other) : this() {
      maxGen_ = other.maxGen_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MaxGenerationConfigSet Clone() {
      return new MaxGenerationConfigSet(this);
    }

    /// <summary>Field number for the "max_gen" field.</summary>
    public const int MaxGenFieldNumber = 1;
    private int maxGen_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxGen {
      get { return maxGen_; }
      set {
        maxGen_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MaxGenerationConfigSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MaxGenerationConfigSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MaxGen != other.MaxGen) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MaxGen != 0) hash ^= MaxGen.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MaxGen != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MaxGen);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MaxGen != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxGen);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MaxGenerationConfigSet other) {
      if (other == null) {
        return;
      }
      if (other.MaxGen != 0) {
        MaxGen = other.MaxGen;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MaxGen = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ImageMaxSizeSet : pb::IMessage<ImageMaxSizeSet> {
    private static readonly pb::MessageParser<ImageMaxSizeSet> _parser = new pb::MessageParser<ImageMaxSizeSet>(() => new ImageMaxSizeSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImageMaxSizeSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[59]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImageMaxSizeSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImageMaxSizeSet(ImageMaxSizeSet other) : this() {
      imageMaxSize_ = other.imageMaxSize_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImageMaxSizeSet Clone() {
      return new ImageMaxSizeSet(this);
    }

    /// <summary>Field number for the "image_max_size" field.</summary>
    public const int ImageMaxSizeFieldNumber = 1;
    private long imageMaxSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ImageMaxSize {
      get { return imageMaxSize_; }
      set {
        imageMaxSize_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImageMaxSizeSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImageMaxSizeSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ImageMaxSize != other.ImageMaxSize) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ImageMaxSize != 0L) hash ^= ImageMaxSize.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ImageMaxSize != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ImageMaxSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ImageMaxSize != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ImageMaxSize);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImageMaxSizeSet other) {
      if (other == null) {
        return;
      }
      if (other.ImageMaxSize != 0L) {
        ImageMaxSize = other.ImageMaxSize;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ImageMaxSize = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ImageMaxCountSet : pb::IMessage<ImageMaxCountSet> {
    private static readonly pb::MessageParser<ImageMaxCountSet> _parser = new pb::MessageParser<ImageMaxCountSet>(() => new ImageMaxCountSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImageMaxCountSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[60]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImageMaxCountSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImageMaxCountSet(ImageMaxCountSet other) : this() {
      imageMaxCount_ = other.imageMaxCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImageMaxCountSet Clone() {
      return new ImageMaxCountSet(this);
    }

    /// <summary>Field number for the "image_max_count" field.</summary>
    public const int ImageMaxCountFieldNumber = 1;
    private long imageMaxCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ImageMaxCount {
      get { return imageMaxCount_; }
      set {
        imageMaxCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImageMaxCountSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImageMaxCountSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ImageMaxCount != other.ImageMaxCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ImageMaxCount != 0L) hash ^= ImageMaxCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ImageMaxCount != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ImageMaxCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ImageMaxCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ImageMaxCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImageMaxCountSet other) {
      if (other == null) {
        return;
      }
      if (other.ImageMaxCount != 0L) {
        ImageMaxCount = other.ImageMaxCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ImageMaxCount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AttributeConfigSet : pb::IMessage<AttributeConfigSet> {
    private static readonly pb::MessageParser<AttributeConfigSet> _parser = new pb::MessageParser<AttributeConfigSet>(() => new AttributeConfigSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AttributeConfigSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[61]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttributeConfigSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttributeConfigSet(AttributeConfigSet other) : this() {
      traitTypeMaxCount_ = other.traitTypeMaxCount_;
      traitValueMaxCount_ = other.traitValueMaxCount_;
      attributeMaxLength_ = other.attributeMaxLength_;
      maxAttributesPerGen_ = other.maxAttributesPerGen_;
      fixedTraitTypeMaxCount_ = other.fixedTraitTypeMaxCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttributeConfigSet Clone() {
      return new AttributeConfigSet(this);
    }

    /// <summary>Field number for the "trait_type_max_count" field.</summary>
    public const int TraitTypeMaxCountFieldNumber = 1;
    private long traitTypeMaxCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TraitTypeMaxCount {
      get { return traitTypeMaxCount_; }
      set {
        traitTypeMaxCount_ = value;
      }
    }

    /// <summary>Field number for the "trait_value_max_count" field.</summary>
    public const int TraitValueMaxCountFieldNumber = 2;
    private long traitValueMaxCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TraitValueMaxCount {
      get { return traitValueMaxCount_; }
      set {
        traitValueMaxCount_ = value;
      }
    }

    /// <summary>Field number for the "attribute_max_length" field.</summary>
    public const int AttributeMaxLengthFieldNumber = 3;
    private long attributeMaxLength_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AttributeMaxLength {
      get { return attributeMaxLength_; }
      set {
        attributeMaxLength_ = value;
      }
    }

    /// <summary>Field number for the "max_attributes_per_gen" field.</summary>
    public const int MaxAttributesPerGenFieldNumber = 4;
    private int maxAttributesPerGen_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxAttributesPerGen {
      get { return maxAttributesPerGen_; }
      set {
        maxAttributesPerGen_ = value;
      }
    }

    /// <summary>Field number for the "fixed_trait_type_max_count" field.</summary>
    public const int FixedTraitTypeMaxCountFieldNumber = 5;
    private long fixedTraitTypeMaxCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FixedTraitTypeMaxCount {
      get { return fixedTraitTypeMaxCount_; }
      set {
        fixedTraitTypeMaxCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AttributeConfigSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AttributeConfigSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TraitTypeMaxCount != other.TraitTypeMaxCount) return false;
      if (TraitValueMaxCount != other.TraitValueMaxCount) return false;
      if (AttributeMaxLength != other.AttributeMaxLength) return false;
      if (MaxAttributesPerGen != other.MaxAttributesPerGen) return false;
      if (FixedTraitTypeMaxCount != other.FixedTraitTypeMaxCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TraitTypeMaxCount != 0L) hash ^= TraitTypeMaxCount.GetHashCode();
      if (TraitValueMaxCount != 0L) hash ^= TraitValueMaxCount.GetHashCode();
      if (AttributeMaxLength != 0L) hash ^= AttributeMaxLength.GetHashCode();
      if (MaxAttributesPerGen != 0) hash ^= MaxAttributesPerGen.GetHashCode();
      if (FixedTraitTypeMaxCount != 0L) hash ^= FixedTraitTypeMaxCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TraitTypeMaxCount != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TraitTypeMaxCount);
      }
      if (TraitValueMaxCount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(TraitValueMaxCount);
      }
      if (AttributeMaxLength != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(AttributeMaxLength);
      }
      if (MaxAttributesPerGen != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MaxAttributesPerGen);
      }
      if (FixedTraitTypeMaxCount != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(FixedTraitTypeMaxCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TraitTypeMaxCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TraitTypeMaxCount);
      }
      if (TraitValueMaxCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TraitValueMaxCount);
      }
      if (AttributeMaxLength != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AttributeMaxLength);
      }
      if (MaxAttributesPerGen != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxAttributesPerGen);
      }
      if (FixedTraitTypeMaxCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FixedTraitTypeMaxCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AttributeConfigSet other) {
      if (other == null) {
        return;
      }
      if (other.TraitTypeMaxCount != 0L) {
        TraitTypeMaxCount = other.TraitTypeMaxCount;
      }
      if (other.TraitValueMaxCount != 0L) {
        TraitValueMaxCount = other.TraitValueMaxCount;
      }
      if (other.AttributeMaxLength != 0L) {
        AttributeMaxLength = other.AttributeMaxLength;
      }
      if (other.MaxAttributesPerGen != 0) {
        MaxAttributesPerGen = other.MaxAttributesPerGen;
      }
      if (other.FixedTraitTypeMaxCount != 0L) {
        FixedTraitTypeMaxCount = other.FixedTraitTypeMaxCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TraitTypeMaxCount = input.ReadInt64();
            break;
          }
          case 16: {
            TraitValueMaxCount = input.ReadInt64();
            break;
          }
          case 24: {
            AttributeMaxLength = input.ReadInt64();
            break;
          }
          case 32: {
            MaxAttributesPerGen = input.ReadInt32();
            break;
          }
          case 40: {
            FixedTraitTypeMaxCount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AdminSet : pb::IMessage<AdminSet> {
    private static readonly pb::MessageParser<AdminSet> _parser = new pb::MessageParser<AdminSet>(() => new AdminSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AdminSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[62]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdminSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdminSet(AdminSet other) : this() {
      admin_ = other.admin_ != null ? other.admin_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdminSet Clone() {
      return new AdminSet(this);
    }

    /// <summary>Field number for the "admin" field.</summary>
    public const int AdminFieldNumber = 1;
    private global::AElf.Types.Address admin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Admin {
      get { return admin_; }
      set {
        admin_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AdminSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AdminSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Admin, other.Admin)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (admin_ != null) hash ^= Admin.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (admin_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Admin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (admin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Admin);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AdminSet other) {
      if (other == null) {
        return;
      }
      if (other.admin_ != null) {
        if (admin_ == null) {
          Admin = new global::AElf.Types.Address();
        }
        Admin.MergeFrom(other.Admin);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (admin_ == null) {
              Admin = new global::AElf.Types.Address();
            }
            input.ReadMessage(Admin);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SignatorySet : pb::IMessage<SignatorySet> {
    private static readonly pb::MessageParser<SignatorySet> _parser = new pb::MessageParser<SignatorySet>(() => new SignatorySet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SignatorySet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[63]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SignatorySet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SignatorySet(SignatorySet other) : this() {
      tick_ = other.tick_;
      signatory_ = other.signatory_ != null ? other.signatory_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SignatorySet Clone() {
      return new SignatorySet(this);
    }

    /// <summary>Field number for the "tick" field.</summary>
    public const int TickFieldNumber = 1;
    private string tick_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tick {
      get { return tick_; }
      set {
        tick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "signatory" field.</summary>
    public const int SignatoryFieldNumber = 2;
    private global::AElf.Types.Address signatory_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Signatory {
      get { return signatory_; }
      set {
        signatory_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SignatorySet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SignatorySet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tick != other.Tick) return false;
      if (!object.Equals(Signatory, other.Signatory)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Tick.Length != 0) hash ^= Tick.GetHashCode();
      if (signatory_ != null) hash ^= Signatory.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Tick.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Tick);
      }
      if (signatory_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Signatory);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Tick.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tick);
      }
      if (signatory_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Signatory);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SignatorySet other) {
      if (other == null) {
        return;
      }
      if (other.Tick.Length != 0) {
        Tick = other.Tick;
      }
      if (other.signatory_ != null) {
        if (signatory_ == null) {
          Signatory = new global::AElf.Types.Address();
        }
        Signatory.MergeFrom(other.Signatory);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Tick = input.ReadString();
            break;
          }
          case 18: {
            if (signatory_ == null) {
              Signatory = new global::AElf.Types.Address();
            }
            input.ReadMessage(Signatory);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ImageUriMaxSizeSet : pb::IMessage<ImageUriMaxSizeSet> {
    private static readonly pb::MessageParser<ImageUriMaxSizeSet> _parser = new pb::MessageParser<ImageUriMaxSizeSet>(() => new ImageUriMaxSizeSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImageUriMaxSizeSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[64]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImageUriMaxSizeSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImageUriMaxSizeSet(ImageUriMaxSizeSet other) : this() {
      imageUriMaxSize_ = other.imageUriMaxSize_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImageUriMaxSizeSet Clone() {
      return new ImageUriMaxSizeSet(this);
    }

    /// <summary>Field number for the "image_uri_max_size" field.</summary>
    public const int ImageUriMaxSizeFieldNumber = 1;
    private long imageUriMaxSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ImageUriMaxSize {
      get { return imageUriMaxSize_; }
      set {
        imageUriMaxSize_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImageUriMaxSizeSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImageUriMaxSizeSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ImageUriMaxSize != other.ImageUriMaxSize) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ImageUriMaxSize != 0L) hash ^= ImageUriMaxSize.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ImageUriMaxSize != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ImageUriMaxSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ImageUriMaxSize != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ImageUriMaxSize);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImageUriMaxSizeSet other) {
      if (other == null) {
        return;
      }
      if (other.ImageUriMaxSize != 0L) {
        ImageUriMaxSize = other.ImageUriMaxSize;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ImageUriMaxSize = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReferralAccepted : pb::IMessage<ReferralAccepted> {
    private static readonly pb::MessageParser<ReferralAccepted> _parser = new pb::MessageParser<ReferralAccepted>(() => new ReferralAccepted());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReferralAccepted> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[65]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReferralAccepted() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReferralAccepted(ReferralAccepted other) : this() {
      referrer_ = other.referrer_ != null ? other.referrer_.Clone() : null;
      invitee_ = other.invitee_ != null ? other.invitee_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReferralAccepted Clone() {
      return new ReferralAccepted(this);
    }

    /// <summary>Field number for the "referrer" field.</summary>
    public const int ReferrerFieldNumber = 1;
    private global::AElf.Types.Address referrer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Referrer {
      get { return referrer_; }
      set {
        referrer_ = value;
      }
    }

    /// <summary>Field number for the "invitee" field.</summary>
    public const int InviteeFieldNumber = 2;
    private global::AElf.Types.Address invitee_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Invitee {
      get { return invitee_; }
      set {
        invitee_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReferralAccepted);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReferralAccepted other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Referrer, other.Referrer)) return false;
      if (!object.Equals(Invitee, other.Invitee)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (referrer_ != null) hash ^= Referrer.GetHashCode();
      if (invitee_ != null) hash ^= Invitee.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (referrer_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Referrer);
      }
      if (invitee_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Invitee);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (referrer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Referrer);
      }
      if (invitee_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Invitee);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReferralAccepted other) {
      if (other == null) {
        return;
      }
      if (other.referrer_ != null) {
        if (referrer_ == null) {
          Referrer = new global::AElf.Types.Address();
        }
        Referrer.MergeFrom(other.Referrer);
      }
      if (other.invitee_ != null) {
        if (invitee_ == null) {
          Invitee = new global::AElf.Types.Address();
        }
        Invitee.MergeFrom(other.Invitee);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (referrer_ == null) {
              Referrer = new global::AElf.Types.Address();
            }
            input.ReadMessage(Referrer);
            break;
          }
          case 18: {
            if (invitee_ == null) {
              Invitee = new global::AElf.Types.Address();
            }
            input.ReadMessage(Invitee);
            break;
          }
        }
      }
    }

  }

  public sealed partial class OfficialDomainAliasSet : pb::IMessage<OfficialDomainAliasSet> {
    private static readonly pb::MessageParser<OfficialDomainAliasSet> _parser = new pb::MessageParser<OfficialDomainAliasSet>(() => new OfficialDomainAliasSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OfficialDomainAliasSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[66]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfficialDomainAliasSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfficialDomainAliasSet(OfficialDomainAliasSet other) : this() {
      alias_ = other.alias_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfficialDomainAliasSet Clone() {
      return new OfficialDomainAliasSet(this);
    }

    /// <summary>Field number for the "alias" field.</summary>
    public const int AliasFieldNumber = 1;
    private string alias_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Alias {
      get { return alias_; }
      set {
        alias_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OfficialDomainAliasSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OfficialDomainAliasSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Alias != other.Alias) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Alias.Length != 0) hash ^= Alias.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Alias.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Alias);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Alias.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Alias);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OfficialDomainAliasSet other) {
      if (other == null) {
        return;
      }
      if (other.Alias.Length != 0) {
        Alias = other.Alias;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Alias = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AdoptionRerolled : pb::IMessage<AdoptionRerolled> {
    private static readonly pb::MessageParser<AdoptionRerolled> _parser = new pb::MessageParser<AdoptionRerolled>(() => new AdoptionRerolled());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AdoptionRerolled> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[67]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdoptionRerolled() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdoptionRerolled(AdoptionRerolled other) : this() {
      adoptId_ = other.adoptId_ != null ? other.adoptId_.Clone() : null;
      symbol_ = other.symbol_;
      amount_ = other.amount_;
      account_ = other.account_ != null ? other.account_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdoptionRerolled Clone() {
      return new AdoptionRerolled(this);
    }

    /// <summary>Field number for the "adopt_id" field.</summary>
    public const int AdoptIdFieldNumber = 1;
    private global::AElf.Types.Hash adoptId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash AdoptId {
      get { return adoptId_; }
      set {
        adoptId_ = value;
      }
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 2;
    private string symbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 4;
    private global::AElf.Types.Address account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AdoptionRerolled);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AdoptionRerolled other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AdoptId, other.AdoptId)) return false;
      if (Symbol != other.Symbol) return false;
      if (Amount != other.Amount) return false;
      if (!object.Equals(Account, other.Account)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (adoptId_ != null) hash ^= AdoptId.GetHashCode();
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (account_ != null) hash ^= Account.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (adoptId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AdoptId);
      }
      if (Symbol.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Symbol);
      }
      if (Amount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Amount);
      }
      if (account_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Account);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (adoptId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AdoptId);
      }
      if (Symbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (account_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AdoptionRerolled other) {
      if (other == null) {
        return;
      }
      if (other.adoptId_ != null) {
        if (adoptId_ == null) {
          AdoptId = new global::AElf.Types.Hash();
        }
        AdoptId.MergeFrom(other.AdoptId);
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      if (other.account_ != null) {
        if (account_ == null) {
          Account = new global::AElf.Types.Address();
        }
        Account.MergeFrom(other.Account);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (adoptId_ == null) {
              AdoptId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(AdoptId);
            break;
          }
          case 18: {
            Symbol = input.ReadString();
            break;
          }
          case 24: {
            Amount = input.ReadInt64();
            break;
          }
          case 34: {
            if (account_ == null) {
              Account = new global::AElf.Types.Address();
            }
            input.ReadMessage(Account);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AdoptionUpdated : pb::IMessage<AdoptionUpdated> {
    private static readonly pb::MessageParser<AdoptionUpdated> _parser = new pb::MessageParser<AdoptionUpdated>(() => new AdoptionUpdated());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AdoptionUpdated> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Schrodinger.SchrodingerContractReflection.Descriptor.MessageTypes[68]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdoptionUpdated() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdoptionUpdated(AdoptionUpdated other) : this() {
      adoptId_ = other.adoptId_ != null ? other.adoptId_.Clone() : null;
      parent_ = other.parent_;
      parentGen_ = other.parentGen_;
      inputAmount_ = other.inputAmount_;
      lossAmount_ = other.lossAmount_;
      commissionAmount_ = other.commissionAmount_;
      outputAmount_ = other.outputAmount_;
      imageCount_ = other.imageCount_;
      adopter_ = other.adopter_ != null ? other.adopter_.Clone() : null;
      blockHeight_ = other.blockHeight_;
      attributes_ = other.attributes_ != null ? other.attributes_.Clone() : null;
      gen_ = other.gen_;
      ancestor_ = other.ancestor_;
      symbol_ = other.symbol_;
      tokenName_ = other.tokenName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdoptionUpdated Clone() {
      return new AdoptionUpdated(this);
    }

    /// <summary>Field number for the "adopt_id" field.</summary>
    public const int AdoptIdFieldNumber = 1;
    private global::AElf.Types.Hash adoptId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash AdoptId {
      get { return adoptId_; }
      set {
        adoptId_ = value;
      }
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 2;
    private string parent_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "parent_gen" field.</summary>
    public const int ParentGenFieldNumber = 3;
    private int parentGen_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ParentGen {
      get { return parentGen_; }
      set {
        parentGen_ = value;
      }
    }

    /// <summary>Field number for the "input_amount" field.</summary>
    public const int InputAmountFieldNumber = 4;
    private long inputAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long InputAmount {
      get { return inputAmount_; }
      set {
        inputAmount_ = value;
      }
    }

    /// <summary>Field number for the "loss_amount" field.</summary>
    public const int LossAmountFieldNumber = 5;
    private long lossAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LossAmount {
      get { return lossAmount_; }
      set {
        lossAmount_ = value;
      }
    }

    /// <summary>Field number for the "commission_amount" field.</summary>
    public const int CommissionAmountFieldNumber = 6;
    private long commissionAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CommissionAmount {
      get { return commissionAmount_; }
      set {
        commissionAmount_ = value;
      }
    }

    /// <summary>Field number for the "output_amount" field.</summary>
    public const int OutputAmountFieldNumber = 7;
    private long outputAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long OutputAmount {
      get { return outputAmount_; }
      set {
        outputAmount_ = value;
      }
    }

    /// <summary>Field number for the "image_count" field.</summary>
    public const int ImageCountFieldNumber = 8;
    private long imageCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ImageCount {
      get { return imageCount_; }
      set {
        imageCount_ = value;
      }
    }

    /// <summary>Field number for the "adopter" field.</summary>
    public const int AdopterFieldNumber = 9;
    private global::AElf.Types.Address adopter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Adopter {
      get { return adopter_; }
      set {
        adopter_ = value;
      }
    }

    /// <summary>Field number for the "block_height" field.</summary>
    public const int BlockHeightFieldNumber = 10;
    private long blockHeight_;
    /// <summary>
    /// adopt block height
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BlockHeight {
      get { return blockHeight_; }
      set {
        blockHeight_ = value;
      }
    }

    /// <summary>Field number for the "attributes" field.</summary>
    public const int AttributesFieldNumber = 11;
    private global::Schrodinger.Attributes attributes_;
    /// <summary>
    /// generated attributes
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Schrodinger.Attributes Attributes {
      get { return attributes_; }
      set {
        attributes_ = value;
      }
    }

    /// <summary>Field number for the "gen" field.</summary>
    public const int GenFieldNumber = 12;
    private int gen_;
    /// <summary>
    /// generated generation
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Gen {
      get { return gen_; }
      set {
        gen_ = value;
      }
    }

    /// <summary>Field number for the "ancestor" field.</summary>
    public const int AncestorFieldNumber = 13;
    private string ancestor_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ancestor {
      get { return ancestor_; }
      set {
        ancestor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 14;
    private string symbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "token_name" field.</summary>
    public const int TokenNameFieldNumber = 15;
    private string tokenName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TokenName {
      get { return tokenName_; }
      set {
        tokenName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AdoptionUpdated);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AdoptionUpdated other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AdoptId, other.AdoptId)) return false;
      if (Parent != other.Parent) return false;
      if (ParentGen != other.ParentGen) return false;
      if (InputAmount != other.InputAmount) return false;
      if (LossAmount != other.LossAmount) return false;
      if (CommissionAmount != other.CommissionAmount) return false;
      if (OutputAmount != other.OutputAmount) return false;
      if (ImageCount != other.ImageCount) return false;
      if (!object.Equals(Adopter, other.Adopter)) return false;
      if (BlockHeight != other.BlockHeight) return false;
      if (!object.Equals(Attributes, other.Attributes)) return false;
      if (Gen != other.Gen) return false;
      if (Ancestor != other.Ancestor) return false;
      if (Symbol != other.Symbol) return false;
      if (TokenName != other.TokenName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (adoptId_ != null) hash ^= AdoptId.GetHashCode();
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (ParentGen != 0) hash ^= ParentGen.GetHashCode();
      if (InputAmount != 0L) hash ^= InputAmount.GetHashCode();
      if (LossAmount != 0L) hash ^= LossAmount.GetHashCode();
      if (CommissionAmount != 0L) hash ^= CommissionAmount.GetHashCode();
      if (OutputAmount != 0L) hash ^= OutputAmount.GetHashCode();
      if (ImageCount != 0L) hash ^= ImageCount.GetHashCode();
      if (adopter_ != null) hash ^= Adopter.GetHashCode();
      if (BlockHeight != 0L) hash ^= BlockHeight.GetHashCode();
      if (attributes_ != null) hash ^= Attributes.GetHashCode();
      if (Gen != 0) hash ^= Gen.GetHashCode();
      if (Ancestor.Length != 0) hash ^= Ancestor.GetHashCode();
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      if (TokenName.Length != 0) hash ^= TokenName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (adoptId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AdoptId);
      }
      if (Parent.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Parent);
      }
      if (ParentGen != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ParentGen);
      }
      if (InputAmount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(InputAmount);
      }
      if (LossAmount != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(LossAmount);
      }
      if (CommissionAmount != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(CommissionAmount);
      }
      if (OutputAmount != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(OutputAmount);
      }
      if (ImageCount != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(ImageCount);
      }
      if (adopter_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Adopter);
      }
      if (BlockHeight != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(BlockHeight);
      }
      if (attributes_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Attributes);
      }
      if (Gen != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Gen);
      }
      if (Ancestor.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Ancestor);
      }
      if (Symbol.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(Symbol);
      }
      if (TokenName.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(TokenName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (adoptId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AdoptId);
      }
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (ParentGen != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ParentGen);
      }
      if (InputAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(InputAmount);
      }
      if (LossAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LossAmount);
      }
      if (CommissionAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CommissionAmount);
      }
      if (OutputAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OutputAmount);
      }
      if (ImageCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ImageCount);
      }
      if (adopter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Adopter);
      }
      if (BlockHeight != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BlockHeight);
      }
      if (attributes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Attributes);
      }
      if (Gen != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Gen);
      }
      if (Ancestor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ancestor);
      }
      if (Symbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (TokenName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TokenName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AdoptionUpdated other) {
      if (other == null) {
        return;
      }
      if (other.adoptId_ != null) {
        if (adoptId_ == null) {
          AdoptId = new global::AElf.Types.Hash();
        }
        AdoptId.MergeFrom(other.AdoptId);
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.ParentGen != 0) {
        ParentGen = other.ParentGen;
      }
      if (other.InputAmount != 0L) {
        InputAmount = other.InputAmount;
      }
      if (other.LossAmount != 0L) {
        LossAmount = other.LossAmount;
      }
      if (other.CommissionAmount != 0L) {
        CommissionAmount = other.CommissionAmount;
      }
      if (other.OutputAmount != 0L) {
        OutputAmount = other.OutputAmount;
      }
      if (other.ImageCount != 0L) {
        ImageCount = other.ImageCount;
      }
      if (other.adopter_ != null) {
        if (adopter_ == null) {
          Adopter = new global::AElf.Types.Address();
        }
        Adopter.MergeFrom(other.Adopter);
      }
      if (other.BlockHeight != 0L) {
        BlockHeight = other.BlockHeight;
      }
      if (other.attributes_ != null) {
        if (attributes_ == null) {
          Attributes = new global::Schrodinger.Attributes();
        }
        Attributes.MergeFrom(other.Attributes);
      }
      if (other.Gen != 0) {
        Gen = other.Gen;
      }
      if (other.Ancestor.Length != 0) {
        Ancestor = other.Ancestor;
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      if (other.TokenName.Length != 0) {
        TokenName = other.TokenName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (adoptId_ == null) {
              AdoptId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(AdoptId);
            break;
          }
          case 18: {
            Parent = input.ReadString();
            break;
          }
          case 24: {
            ParentGen = input.ReadInt32();
            break;
          }
          case 32: {
            InputAmount = input.ReadInt64();
            break;
          }
          case 40: {
            LossAmount = input.ReadInt64();
            break;
          }
          case 48: {
            CommissionAmount = input.ReadInt64();
            break;
          }
          case 56: {
            OutputAmount = input.ReadInt64();
            break;
          }
          case 64: {
            ImageCount = input.ReadInt64();
            break;
          }
          case 74: {
            if (adopter_ == null) {
              Adopter = new global::AElf.Types.Address();
            }
            input.ReadMessage(Adopter);
            break;
          }
          case 80: {
            BlockHeight = input.ReadInt64();
            break;
          }
          case 90: {
            if (attributes_ == null) {
              Attributes = new global::Schrodinger.Attributes();
            }
            input.ReadMessage(Attributes);
            break;
          }
          case 96: {
            Gen = input.ReadInt32();
            break;
          }
          case 106: {
            Ancestor = input.ReadString();
            break;
          }
          case 114: {
            Symbol = input.ReadString();
            break;
          }
          case 122: {
            TokenName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
